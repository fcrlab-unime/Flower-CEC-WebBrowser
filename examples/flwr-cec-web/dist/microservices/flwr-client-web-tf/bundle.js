/*! For license information please see bundle.js.LICENSE.txt */
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.client=t():e.client=t()}(self,(()=>(()=>{var e={417:(e,t,n)=>{var a,r=(a=(a="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||"/index.js",function(e){function t(){return R.buffer!=M&&G(R.buffer),O}function r(){return R.buffer!=M&&G(R.buffer),L}function s(){return R.buffer!=M&&G(R.buffer),z}function i(){return R.buffer!=M&&G(R.buffer),P}function o(){return R.buffer!=M&&G(R.buffer),W}var u,l,c,h=void 0!==(e=e||{})?e:{};h.ready=new Promise((function(e,t){u=e,l=t})),"undefined"!=typeof process&&process.listeners&&(c={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var d,p,f,m=Object.assign({},h),g=[],b=(e,t)=>{throw t},y="object"==typeof window,x="function"==typeof importScripts,w="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,k=h.ENVIRONMENT_IS_PTHREAD||!1,v="";function I(e){return h.locateFile?h.locateFile(e,v):v+e}if(w){var S=n(893),N=n(281);let e;v=x?N.dirname(v)+"/":"//",d=(e,t)=>(e=re(e)?new URL(e):N.normalize(e),S.readFileSync(e,t?void 0:"utf8")),f=e=>{var t=d(e,!0);return t.buffer||(t=new Uint8Array(t)),t},p=(e,t,n)=>{e=re(e)?new URL(e):N.normalize(e),S.readFile(e,(function(e,a){e?n(e):t(a.buffer)}))},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),g=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof oe))throw e})),process.on("unhandledRejection",(function(e){throw e})),b=(e,t)=>{if(Y())throw process.exitCode=e,t;var n;(n=t)instanceof oe||E("exiting due to exception: "+n),process.exit(e)},h.inspect=function(){return"[Emscripten Module object]"};try{e=n(556)}catch(e){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),e}n.g.Worker=e.Worker}else(y||x)&&(x?v=self.location.href:"undefined"!=typeof document&&document.currentScript&&(v=document.currentScript.src),void 0!==a&&a&&(v=a),v=0!==v.indexOf("blob:")?v.substr(0,v.replace(/[?#].*/,"").lastIndexOf("/")+1):"",w||(d=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},x&&(f=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),p=(e,t,n)=>{var a=new XMLHttpRequest;a.open("GET",e,!0),a.responseType="arraybuffer",a.onload=()=>{200==a.status||0==a.status&&a.response?t(a.response):n()},a.onerror=n,a.send(null)}));w&&"undefined"==typeof performance&&(n.g.performance=n(244).performance);var C=console.log.bind(console),$=console.warn.bind(console);w&&(C=e=>S.writeSync(1,e+"\n"),$=e=>S.writeSync(2,e+"\n"));var T,_=h.print||C,E=h.printErr||$;Object.assign(h,m),m=null,h.arguments&&(g=h.arguments),h.thisProgram&&h.thisProgram,h.quit&&(b=h.quit),Atomics.load,Atomics.store,Atomics.compareExchange,h.wasmBinary&&(T=h.wasmBinary);var R,A,F=h.noExitRuntime||!0;"object"!=typeof WebAssembly&&te("no native wasm support detected");var D,M,O,L,z,P,W,B=!1,U="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function V(e,t,n){for(var a=(t>>>=0)+n,r=t;e[r]&&!(r>=a);)++r;if(r-t>16&&e.buffer&&U)return U.decode(e.buffer instanceof SharedArrayBuffer?e.slice(t,r):e.subarray(t,r));for(var s="";t<r;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var u=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|u:(7&i)<<18|o<<12|u<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var l=i-65536;s+=String.fromCharCode(55296|l>>10,56320|1023&l)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function G(e){M=e,h.HEAP8=O=new Int8Array(e),h.HEAP16=new Int16Array(e),h.HEAP32=z=new Int32Array(e),h.HEAPU8=L=new Uint8Array(e),h.HEAPU16=new Uint16Array(e),h.HEAPU32=P=new Uint32Array(e),h.HEAPF32=new Float32Array(e),h.HEAPF64=W=new Float64Array(e)}k&&(M=h.buffer);var H,j=h.INITIAL_MEMORY||16777216;if(k)R=h.wasmMemory,M=h.buffer;else if(h.wasmMemory)R=h.wasmMemory;else if(!((R=new WebAssembly.Memory({initial:j/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw E("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),w&&E("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");R&&(M=R.buffer),j=M.byteLength,G(M);var q=[],K=[],X=[];function Y(){return F}function J(){k||pe(K)}var Z=0,Q=null,ee=null;function te(e){h.onAbort&&h.onAbort(e),E(e="Aborted("+e+")"),B=!0,D=1,e+=". Build with -sASSERTIONS for more info.";var t=new WebAssembly.RuntimeError(e);throw l(t),t}var ne;function ae(e){return e.startsWith("data:application/octet-stream;base64,")}function re(e){return e.startsWith("file://")}function se(e){try{if(e==ne&&T)return new Uint8Array(T);if(f)return f(e);throw"both async and sync fetching of the wasm failed"}catch(e){te(e)}}ae(ne="tfjs-backend-wasm-threaded-simd.wasm")||(ne=I(ne));var ie={};function oe(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function ue(e){var t=de.pthreads[e];t||te(undefined),de.returnWorkerToPool(t)}function le(e){var t=de.getNewWorker();if(!t)return 6;de.runningWorkers.push(t),de.pthreads[e.pthread_ptr]=t,t.pthread_ptr=e.pthread_ptr;var n={cmd:"run",start_routine:e.startRoutine,arg:e.arg,pthread_ptr:e.pthread_ptr};return t.runPthread=()=>{w&&t.ref(),t.postMessage(n,e.transferList),delete t.runPthread},t.loaded&&t.runPthread(),0}function ce(e){if(k)return ke(1,1,e);D=e,Y()||(de.terminateAllThreads(),h.onExit&&h.onExit(e),B=!0),b(e,new oe(e))}var he=function(e,t){if(D=e,!t&&k)throw fe(e),"unwind";ce(e)},de={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],pthreads:{},init:function(){k?de.initWorker():de.initMainThread()},initMainThread:function(){for(var e=8;e--;)de.allocateUnusedWorker()},initWorker:function(){F=!1},setExitStatus:function(e){D=e},terminateAllThreads:function(){for(var e of Object.values(de.pthreads))de.returnWorkerToPool(e);for(var e of de.unusedWorkers)e.terminate();de.unusedWorkers=[]},returnWorkerToPool:function(e){var t=e.pthread_ptr;delete de.pthreads[t],de.unusedWorkers.push(e),de.runningWorkers.splice(de.runningWorkers.indexOf(e),1),e.pthread_ptr=0,w&&e.unref(),We(t)},receiveObjectTransfer:function(e){},threadInitTLS:function(){de.tlsInitFunctions.forEach((e=>e()))},loadWasmModuleToWorker:function(e,t){e.onmessage=n=>{var a,r=n.data,s=r.cmd;if(e.pthread_ptr&&(de.currentProxiedOperationCallerThread=e.pthread_ptr),r.targetThread&&r.targetThread!=Oe()){var i=de.pthreads[r.targetThread];return i?i.postMessage(r,r.transferList):E('Internal error! Worker sent a message "'+s+'" to target pthread '+r.targetThread+", but that thread no longer exists!"),void(de.currentProxiedOperationCallerThread=void 0)}"processProxyingQueue"===s?xe(r.queue):"spawnThread"===s?le(r):"cleanupThread"===s?ue(r.thread):"killThread"===s?function(e){var t=de.pthreads[e];delete de.pthreads[e],t.terminate(),We(e),de.runningWorkers.splice(de.runningWorkers.indexOf(t),1),t.pthread_ptr=0}(r.thread):"cancelThread"===s?(a=r.thread,de.pthreads[a].postMessage({cmd:"cancel"})):"loaded"===s?(e.loaded=!0,w&&e.unref(),t&&t(e),e.runPthread&&e.runPthread()):"print"===s?_("Thread "+r.threadId+": "+r.text):"printErr"===s?E("Thread "+r.threadId+": "+r.text):"alert"===s?alert("Thread "+r.threadId+": "+r.text):"setimmediate"===r.target?e.postMessage(r):"callHandler"===s?h[r.handler](...r.args):s&&E("worker sent an unknown command "+s),de.currentProxiedOperationCallerThread=void 0},e.onerror=e=>{throw E("worker sent an error! "+e.filename+":"+e.lineno+": "+e.message),e},w&&(e.on("message",(function(t){e.onmessage({data:t})})),e.on("error",(function(t){e.onerror(t)})),e.on("detachedExit",(function(){})));var n=[];for(var r of["onExit","onAbort","print","printErr"])h.hasOwnProperty(r)&&n.push(r);e.postMessage({cmd:"load",handlers:n,urlOrBlob:h.mainScriptUrlOrBlob||a,wasmMemory:R,wasmModule:A})},allocateUnusedWorker:function(){var e,t=I("tfjs-backend-wasm-threaded-simd.worker.js");e=new Worker(t),de.unusedWorkers.push(e)},getNewWorker:function(){return 0==de.unusedWorkers.length&&(de.allocateUnusedWorker(),de.loadWasmModuleToWorker(de.unusedWorkers[0])),de.unusedWorkers.pop()}};function pe(e){for(;e.length>0;)e.shift()(h)}function fe(e){if(k)return ke(2,0,e);try{he(e)}catch(e){!function(e){if(e instanceof oe||"unwind"==e)return D;b(1,e)}(e)}}h.PThread=de,h.establishStackSpace=function(){var e=Oe(),t=s()[e+52>>>2],n=s()[e+56>>>2];Ue(t,t-n),Ge(t)};var me,ge=[];function be(e,t,n,a){return k?ke(3,1,e,t,n,a):ye(e,t,n,a)}function ye(e,t,n,a){if("undefined"==typeof SharedArrayBuffer)return E("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var r=[];if(k&&0===r.length)return be(e,t,n,a);var s={startRoutine:n,pthread_ptr:e,arg:a,transferList:r};return k?(s.cmd="spawnThread",postMessage(s,r),0):le(s)}function xe(e){Atomics.store(s(),e>>2,1),Oe()&&Pe(e),Atomics.compareExchange(s(),e>>2,1,0)}function we(e){we.shown||(we.shown={}),we.shown[e]||(we.shown[e]=1,w&&(e="warning: "+e),E(e))}function ke(e,t){var n,a,r=arguments.length-2,s=arguments;return n=Ve(),a=(()=>{for(var n=r,a=He(8*n),i=a>>3,u=0;u<r;u++){var l=s[2+u];o()[i+u>>>0]=l}return ze(e,n,a,t)})(),Ge(n),a}h.invokeEntryPoint=function(e,t){var n,a,r=((a=ge[n=e])||(n>=ge.length&&(ge.length=n+1),ge[n]=a=H.get(n)),a)(t);Y()?de.setExitStatus(r):Be(r)},h.executeNotifiedProxyingQueue=xe,me=w?()=>{var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:()=>performance.timeOrigin+performance.now();var ve=[];function Ie(e){try{return R.grow(e-M.byteLength+65535>>>16),G(R.buffer),1}catch(e){}}function Se(e){return k?ke(4,1,e):52}function Ne(e,t,n,a,r){return k?ke(5,1,e,t,n,a,r):70}var Ce=[null,[],[]];function $e(e,t){var n=Ce[e];0===t||10===t?((1===e?_:E)(V(n,0)),n.length=0):n.push(t)}function Te(e,t,n,a){if(k)return ke(6,1,e,t,n,a);for(var s=0,o=0;o<n;o++){var u=i()[t>>>2],l=i()[t+4>>>2];t+=8;for(var c=0;c<l;c++)$e(e,r()[u+c>>>0]);s+=l}return i()[a>>>2]=s,0}function _e(e){return h["_"+e]}function Ee(e,n,a,s,i){var o={string:e=>{var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);!function(e,t,n){!function(e,t,n,a){if(!(a>0))return 0;for(var r=(n>>>=0)+a-1,s=0;s<e.length;++s){var i=e.charCodeAt(s);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++s)),i<=127){if(n>=r)break;t[n++>>>0]=i}else if(i<=2047){if(n+1>=r)break;t[n++>>>0]=192|i>>6,t[n++>>>0]=128|63&i}else if(i<=65535){if(n+2>=r)break;t[n++>>>0]=224|i>>12,t[n++>>>0]=128|i>>6&63,t[n++>>>0]=128|63&i}else{if(n+3>=r)break;t[n++>>>0]=240|i>>18,t[n++>>>0]=128|i>>12&63,t[n++>>>0]=128|i>>6&63,t[n++>>>0]=128|63&i}}t[n>>>0]=0}(e,r(),t,n)}(e,t=He(n),n)}return t},array:e=>{var n=He(e.length);return function(e,n){t().set(e,n>>>0)}(e,n),n}},u=_e(e),l=[],c=0;if(s)for(var h=0;h<s.length;h++){var d=o[a[h]];d?(0===c&&(c=Ve()),l[h]=d(s[h])):l[h]=s[h]}var p=u.apply(null,l);return function(e){return 0!==c&&Ge(c),function(e){return"string"===n?(t=e,(t>>>=0)?V(r(),t,a):""):"boolean"===n?Boolean(e):e;var t,a}(e)}(p)}de.init();var Re,Ae,Fe,De=[null,ce,fe,be,Se,Ne,Te],Me={__emscripten_init_main_thread_js:function(e){Le(e,!x,1,!y),de.threadInitTLS()},__emscripten_thread_cleanup:function(e){k?postMessage({cmd:"cleanupThread",thread:e}):ue(e)},__pthread_create_js:ye,_emscripten_default_pthread_stack_size:function(){return 65536},_emscripten_get_now_is_monotonic:function(){return!0},_emscripten_notify_task_queue:function(e,t,n,a){if(e==t)setTimeout((()=>xe(a)));else if(k)postMessage({targetThread:e,cmd:"processProxyingQueue",queue:a});else{var r=de.pthreads[e];if(!r)return;r.postMessage({cmd:"processProxyingQueue",queue:a})}return 1},_emscripten_set_offscreencanvas_size:function(e,t,n){return-1},abort:function(){te("")},emscripten_check_blocking_allowed:function(){w||x||we("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")},emscripten_date_now:function(){return Date.now()},emscripten_get_heap_max:function(){return 4294901760},emscripten_get_now:me,emscripten_memcpy_big:function(e,t,n){r().copyWithin(e>>>0,t>>>0,t+n>>>0)},emscripten_num_logical_cores:function(){return w?n(74).cpus().length:navigator.hardwareConcurrency},emscripten_receive_on_main_thread_js:function(e,t,n){ve.length=t;for(var a=n>>3,r=0;r<t;r++)ve[r]=o()[a+r>>>0];return(e<0?ie[-e-1]:De[e]).apply(null,ve)},emscripten_resize_heap:function(e){var t=r().length;if((e>>>=0)<=t)return!1;var n,a=4294901760;if(e>a)return!1;for(var s=1;s<=4;s*=2){var i=t*(1+.2/s);if(i=Math.min(i,e+100663296),Ie(Math.min(a,(n=Math.max(e,i))+(65536-n%65536)%65536)))return!0}return!1},emscripten_unwind_to_js_event_loop:function(){throw"unwind"},exit:he,fd_close:Se,fd_seek:Ne,fd_write:Te,memory:R||h.wasmMemory},Oe=(function(){var e={env:Me,wasi_snapshot_preview1:Me};function t(e,t){var n,a,r=e.exports;if(h.asm=r,n=h.asm._emscripten_tls_init,de.tlsInitFunctions.push(n),H=h.asm.__indirect_function_table,a=h.asm.__wasm_call_ctors,K.unshift(a),A=t,!k){var s=de.unusedWorkers.length;de.unusedWorkers.forEach((function(e){de.loadWasmModuleToWorker(e,(function(){--s||function(){if(Z--,h.monitorRunDependencies&&h.monitorRunDependencies(Z),0==Z&&(null!==Q&&(clearInterval(Q),Q=null),ee)){var e=ee;ee=null,e()}}()}))}))}}function n(e){t(e.instance,e.module)}function a(t){return function(){if(!T&&(y||x)){if("function"==typeof fetch&&!re(ne))return fetch(ne,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+ne+"'";return e.arrayBuffer()})).catch((function(){return se(ne)}));if(p)return new Promise((function(e,t){p(ne,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return se(ne)}))}().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){E("failed to asynchronously prepare wasm: "+e),te(e)}))}if(k||(Z++,h.monitorRunDependencies&&h.monitorRunDependencies(Z)),h.instantiateWasm)try{return h.instantiateWasm(e,t)}catch(e){E("Module.instantiateWasm callback failed with error: "+e),l(e)}(T||"function"!=typeof WebAssembly.instantiateStreaming||ae(ne)||re(ne)||w||"function"!=typeof fetch?a(n):fetch(ne,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return E("wasm streaming compile failed: "+e),E("falling back to ArrayBuffer instantiation"),a(n)}))}))).catch(l)}(),h.___wasm_call_ctors=function(){return(h.___wasm_call_ctors=h.asm.__wasm_call_ctors).apply(null,arguments)},h._init=function(){return(h._init=h.asm.init).apply(null,arguments)},h._init_with_threads_count=function(){return(h._init_with_threads_count=h.asm.init_with_threads_count).apply(null,arguments)},h._get_threads_count=function(){return(h._get_threads_count=h.asm.get_threads_count).apply(null,arguments)},h._register_tensor=function(){return(h._register_tensor=h.asm.register_tensor).apply(null,arguments)},h._dispose_data=function(){return(h._dispose_data=h.asm.dispose_data).apply(null,arguments)},h._dispose=function(){return(h._dispose=h.asm.dispose).apply(null,arguments)},h._Abs=function(){return(h._Abs=h.asm.Abs).apply(null,arguments)},h._Acos=function(){return(h._Acos=h.asm.Acos).apply(null,arguments)},h._Acosh=function(){return(h._Acosh=h.asm.Acosh).apply(null,arguments)},h._Add=function(){return(h._Add=h.asm.Add).apply(null,arguments)},h._AddN=function(){return(h._AddN=h.asm.AddN).apply(null,arguments)},h._All=function(){return(h._All=h.asm.All).apply(null,arguments)},h._Any=function(){return(h._Any=h.asm.Any).apply(null,arguments)},h._ArgMax=function(){return(h._ArgMax=h.asm.ArgMax).apply(null,arguments)},h._ArgMin=function(){return(h._ArgMin=h.asm.ArgMin).apply(null,arguments)},h._Asin=function(){return(h._Asin=h.asm.Asin).apply(null,arguments)},h._Asinh=function(){return(h._Asinh=h.asm.Asinh).apply(null,arguments)},h._Atan=function(){return(h._Atan=h.asm.Atan).apply(null,arguments)},h._Atan2=function(){return(h._Atan2=h.asm.Atan2).apply(null,arguments)},h._Atanh=function(){return(h._Atanh=h.asm.Atanh).apply(null,arguments)},h._AvgPool=function(){return(h._AvgPool=h.asm.AvgPool).apply(null,arguments)},h._AvgPool3D=function(){return(h._AvgPool3D=h.asm.AvgPool3D).apply(null,arguments)},h._AvgPool3DGrad=function(){return(h._AvgPool3DGrad=h.asm.AvgPool3DGrad).apply(null,arguments)},h._AvgPoolGrad=function(){return(h._AvgPoolGrad=h.asm.AvgPoolGrad).apply(null,arguments)},h._BatchMatMul=function(){return(h._BatchMatMul=h.asm.BatchMatMul).apply(null,arguments)},h._Bincount=function(){return(h._Bincount=h.asm.Bincount).apply(null,arguments)},h._BitwiseAnd=function(){return(h._BitwiseAnd=h.asm.BitwiseAnd).apply(null,arguments)},h._Ceil=function(){return(h._Ceil=h.asm.Ceil).apply(null,arguments)},h._ClipByValue=function(){return(h._ClipByValue=h.asm.ClipByValue).apply(null,arguments)},h._Conv2D=function(){return(h._Conv2D=h.asm.Conv2D).apply(null,arguments)},h._Conv2DBackpropInput=function(){return(h._Conv2DBackpropInput=h.asm.Conv2DBackpropInput).apply(null,arguments)},h._Conv3D=function(){return(h._Conv3D=h.asm.Conv3D).apply(null,arguments)},h._Conv3DBackpropFilterV2=function(){return(h._Conv3DBackpropFilterV2=h.asm.Conv3DBackpropFilterV2).apply(null,arguments)},h._Conv3DBackpropInputV2=function(){return(h._Conv3DBackpropInputV2=h.asm.Conv3DBackpropInputV2).apply(null,arguments)},h._Cos=function(){return(h._Cos=h.asm.Cos).apply(null,arguments)},h._Cosh=function(){return(h._Cosh=h.asm.Cosh).apply(null,arguments)},h._CropAndResize=function(){return(h._CropAndResize=h.asm.CropAndResize).apply(null,arguments)},h._Cumprod=function(){return(h._Cumprod=h.asm.Cumprod).apply(null,arguments)},h._Cumsum=function(){return(h._Cumsum=h.asm.Cumsum).apply(null,arguments)},h._DenseBincount=function(){return(h._DenseBincount=h.asm.DenseBincount).apply(null,arguments)},h._DepthToSpace=function(){return(h._DepthToSpace=h.asm.DepthToSpace).apply(null,arguments)},h._DepthwiseConv2dNative=function(){return(h._DepthwiseConv2dNative=h.asm.DepthwiseConv2dNative).apply(null,arguments)},h._Diag=function(){return(h._Diag=h.asm.Diag).apply(null,arguments)},h._Dilation2D=function(){return(h._Dilation2D=h.asm.Dilation2D).apply(null,arguments)},h._Dilation2DBackpropFilter=function(){return(h._Dilation2DBackpropFilter=h.asm.Dilation2DBackpropFilter).apply(null,arguments)},h._Dilation2DBackpropInput=function(){return(h._Dilation2DBackpropInput=h.asm.Dilation2DBackpropInput).apply(null,arguments)},h._Elu=function(){return(h._Elu=h.asm.Elu).apply(null,arguments)},h._EluGrad=function(){return(h._EluGrad=h.asm.EluGrad).apply(null,arguments)},h._Equal=function(){return(h._Equal=h.asm.Equal).apply(null,arguments)},h._Erf=function(){return(h._Erf=h.asm.Erf).apply(null,arguments)},h._Exp=function(){return(h._Exp=h.asm.Exp).apply(null,arguments)},h._Expm1=function(){return(h._Expm1=h.asm.Expm1).apply(null,arguments)},h._FlipLeftRight=function(){return(h._FlipLeftRight=h.asm.FlipLeftRight).apply(null,arguments)},h._Floor=function(){return(h._Floor=h.asm.Floor).apply(null,arguments)},h._FloorDiv=function(){return(h._FloorDiv=h.asm.FloorDiv).apply(null,arguments)},h._FusedBatchNorm=function(){return(h._FusedBatchNorm=h.asm.FusedBatchNorm).apply(null,arguments)},h._FusedConv2D=function(){return(h._FusedConv2D=h.asm.FusedConv2D).apply(null,arguments)},h._FusedDepthwiseConv2D=function(){return(h._FusedDepthwiseConv2D=h.asm.FusedDepthwiseConv2D).apply(null,arguments)},h._Gather=function(){return(h._Gather=h.asm.Gather).apply(null,arguments)},h._GatherNd=function(){return(h._GatherNd=h.asm.GatherNd).apply(null,arguments)},h._Greater=function(){return(h._Greater=h.asm.Greater).apply(null,arguments)},h._GreaterEqual=function(){return(h._GreaterEqual=h.asm.GreaterEqual).apply(null,arguments)},h._IsFinite=function(){return(h._IsFinite=h.asm.IsFinite).apply(null,arguments)},h._IsInf=function(){return(h._IsInf=h.asm.IsInf).apply(null,arguments)},h._IsNan=function(){return(h._IsNan=h.asm.IsNan).apply(null,arguments)},h._LRN=function(){return(h._LRN=h.asm.LRN).apply(null,arguments)},h._LRNGrad=function(){return(h._LRNGrad=h.asm.LRNGrad).apply(null,arguments)},h._LeakyRelu=function(){return(h._LeakyRelu=h.asm.LeakyRelu).apply(null,arguments)},h._Less=function(){return(h._Less=h.asm.Less).apply(null,arguments)},h._LessEqual=function(){return(h._LessEqual=h.asm.LessEqual).apply(null,arguments)},h._LinSpace=function(){return(h._LinSpace=h.asm.LinSpace).apply(null,arguments)},h._Log=function(){return(h._Log=h.asm.Log).apply(null,arguments)},h._Log1p=function(){return(h._Log1p=h.asm.Log1p).apply(null,arguments)},h._LogicalAnd=function(){return(h._LogicalAnd=h.asm.LogicalAnd).apply(null,arguments)},h._LogicalNot=function(){return(h._LogicalNot=h.asm.LogicalNot).apply(null,arguments)},h._LogicalOr=function(){return(h._LogicalOr=h.asm.LogicalOr).apply(null,arguments)},h._LogicalXor=function(){return(h._LogicalXor=h.asm.LogicalXor).apply(null,arguments)},h._Max=function(){return(h._Max=h.asm.Max).apply(null,arguments)},h._MaxPool=function(){return(h._MaxPool=h.asm.MaxPool).apply(null,arguments)},h._MaxPool3D=function(){return(h._MaxPool3D=h.asm.MaxPool3D).apply(null,arguments)},h._MaxPool3DGrad=function(){return(h._MaxPool3DGrad=h.asm.MaxPool3DGrad).apply(null,arguments)},h._MaxPoolGrad=function(){return(h._MaxPoolGrad=h.asm.MaxPoolGrad).apply(null,arguments)},h._MaxPoolWithArgmax=function(){return(h._MaxPoolWithArgmax=h.asm.MaxPoolWithArgmax).apply(null,arguments)},h._Maximum=function(){return(h._Maximum=h.asm.Maximum).apply(null,arguments)},h._Mean=function(){return(h._Mean=h.asm.Mean).apply(null,arguments)},h._Min=function(){return(h._Min=h.asm.Min).apply(null,arguments)},h._Minimum=function(){return(h._Minimum=h.asm.Minimum).apply(null,arguments)},h._MirrorPad=function(){return(h._MirrorPad=h.asm.MirrorPad).apply(null,arguments)},h._Mod=function(){return(h._Mod=h.asm.Mod).apply(null,arguments)},h._Multinomial=function(){return(h._Multinomial=h.asm.Multinomial).apply(null,arguments)},h._Multiply=function(){return(h._Multiply=h.asm.Multiply).apply(null,arguments)},h._Neg=function(){return(h._Neg=h.asm.Neg).apply(null,arguments)},h._NonMaxSuppressionV3=function(){return(h._NonMaxSuppressionV3=h.asm.NonMaxSuppressionV3).apply(null,arguments)},h._NonMaxSuppressionV4=function(){return(h._NonMaxSuppressionV4=h.asm.NonMaxSuppressionV4).apply(null,arguments)},h._NonMaxSuppressionV5=function(){return(h._NonMaxSuppressionV5=h.asm.NonMaxSuppressionV5).apply(null,arguments)},h._NotEqual=function(){return(h._NotEqual=h.asm.NotEqual).apply(null,arguments)},h._OneHot=function(){return(h._OneHot=h.asm.OneHot).apply(null,arguments)},h._PadV2=function(){return(h._PadV2=h.asm.PadV2).apply(null,arguments)},h._Pow=function(){return(h._Pow=h.asm.Pow).apply(null,arguments)},h._Prelu=function(){return(h._Prelu=h.asm.Prelu).apply(null,arguments)},h._Prod=function(){return(h._Prod=h.asm.Prod).apply(null,arguments)},h._RealDiv=function(){return(h._RealDiv=h.asm.RealDiv).apply(null,arguments)},h._Reciprocal=function(){return(h._Reciprocal=h.asm.Reciprocal).apply(null,arguments)},h._Relu=function(){return(h._Relu=h.asm.Relu).apply(null,arguments)},h._Relu6=function(){return(h._Relu6=h.asm.Relu6).apply(null,arguments)},h._ResizeBilinear=function(){return(h._ResizeBilinear=h.asm.ResizeBilinear).apply(null,arguments)},h._ResizeBilinearGrad=function(){return(h._ResizeBilinearGrad=h.asm.ResizeBilinearGrad).apply(null,arguments)},h._ResizeNearestNeighbor=function(){return(h._ResizeNearestNeighbor=h.asm.ResizeNearestNeighbor).apply(null,arguments)},h._ResizeNearestNeighborGrad=function(){return(h._ResizeNearestNeighborGrad=h.asm.ResizeNearestNeighborGrad).apply(null,arguments)},h._Reverse=function(){return(h._Reverse=h.asm.Reverse).apply(null,arguments)},h._RotateWithOffset=function(){return(h._RotateWithOffset=h.asm.RotateWithOffset).apply(null,arguments)},h._Round=function(){return(h._Round=h.asm.Round).apply(null,arguments)},h._Rsqrt=function(){return(h._Rsqrt=h.asm.Rsqrt).apply(null,arguments)},h._ScatterNd=function(){return(h._ScatterNd=h.asm.ScatterNd).apply(null,arguments)},h._SearchSorted=function(){return(h._SearchSorted=h.asm.SearchSorted).apply(null,arguments)},h._SelectV2=function(){return(h._SelectV2=h.asm.SelectV2).apply(null,arguments)},h._Selu=function(){return(h._Selu=h.asm.Selu).apply(null,arguments)},h._Sigmoid=function(){return(h._Sigmoid=h.asm.Sigmoid).apply(null,arguments)},h._Sign=function(){return(h._Sign=h.asm.Sign).apply(null,arguments)},h._Sin=function(){return(h._Sin=h.asm.Sin).apply(null,arguments)},h._Sinh=function(){return(h._Sinh=h.asm.Sinh).apply(null,arguments)},h._Softmax=function(){return(h._Softmax=h.asm.Softmax).apply(null,arguments)},h._Softplus=function(){return(h._Softplus=h.asm.Softplus).apply(null,arguments)},h._SparseFillEmptyRows=function(){return(h._SparseFillEmptyRows=h.asm.SparseFillEmptyRows).apply(null,arguments)},h._SparseReshape=function(){return(h._SparseReshape=h.asm.SparseReshape).apply(null,arguments)},h._SparseSegmentReduction=function(){return(h._SparseSegmentReduction=h.asm.SparseSegmentReduction).apply(null,arguments)},h._SparseToDense=function(){return(h._SparseToDense=h.asm.SparseToDense).apply(null,arguments)},h._Sqrt=function(){return(h._Sqrt=h.asm.Sqrt).apply(null,arguments)},h._Square=function(){return(h._Square=h.asm.Square).apply(null,arguments)},h._SquaredDifference=function(){return(h._SquaredDifference=h.asm.SquaredDifference).apply(null,arguments)},h._Step=function(){return(h._Step=h.asm.Step).apply(null,arguments)},h._StridedSlice=function(){return(h._StridedSlice=h.asm.StridedSlice).apply(null,arguments)},h._Sub=function(){return(h._Sub=h.asm.Sub).apply(null,arguments)},h._Sum=function(){return(h._Sum=h.asm.Sum).apply(null,arguments)},h._Tan=function(){return(h._Tan=h.asm.Tan).apply(null,arguments)},h._Tanh=function(){return(h._Tanh=h.asm.Tanh).apply(null,arguments)},h._TensorScatterUpdate=function(){return(h._TensorScatterUpdate=h.asm.TensorScatterUpdate).apply(null,arguments)},h._Tile=function(){return(h._Tile=h.asm.Tile).apply(null,arguments)},h._TopK=function(){return(h._TopK=h.asm.TopK).apply(null,arguments)},h._Transform=function(){return(h._Transform=h.asm.Transform).apply(null,arguments)},h._Transpose=function(){return(h._Transpose=h.asm.Transpose).apply(null,arguments)},h.__FusedMatMul=function(){return(h.__FusedMatMul=h.asm._FusedMatMul).apply(null,arguments)},h._malloc=function(){return(h._malloc=h.asm.malloc).apply(null,arguments)},h._free=function(){return(h._free=h.asm.free).apply(null,arguments)},h.__emscripten_tls_init=function(){return(h.__emscripten_tls_init=h.asm._emscripten_tls_init).apply(null,arguments)},h._pthread_self=function(){return(Oe=h._pthread_self=h.asm.pthread_self).apply(null,arguments)}),Le=(h.___errno_location=function(){return(h.___errno_location=h.asm.__errno_location).apply(null,arguments)},h.__emscripten_thread_init=function(){return(Le=h.__emscripten_thread_init=h.asm._emscripten_thread_init).apply(null,arguments)}),ze=(h.__emscripten_thread_crashed=function(){return(h.__emscripten_thread_crashed=h.asm._emscripten_thread_crashed).apply(null,arguments)},h._emscripten_main_thread_process_queued_calls=function(){return(h._emscripten_main_thread_process_queued_calls=h.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},h._emscripten_main_browser_thread_id=function(){return(h._emscripten_main_browser_thread_id=h.asm.emscripten_main_browser_thread_id).apply(null,arguments)},h._emscripten_run_in_main_runtime_thread_js=function(){return(ze=h._emscripten_run_in_main_runtime_thread_js=h.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)}),Pe=(h._emscripten_dispatch_to_thread_=function(){return(h._emscripten_dispatch_to_thread_=h.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},h.__emscripten_proxy_execute_task_queue=function(){return(Pe=h.__emscripten_proxy_execute_task_queue=h.asm._emscripten_proxy_execute_task_queue).apply(null,arguments)}),We=h.__emscripten_thread_free_data=function(){return(We=h.__emscripten_thread_free_data=h.asm._emscripten_thread_free_data).apply(null,arguments)},Be=h.__emscripten_thread_exit=function(){return(Be=h.__emscripten_thread_exit=h.asm._emscripten_thread_exit).apply(null,arguments)},Ue=h._emscripten_stack_set_limits=function(){return(Ue=h._emscripten_stack_set_limits=h.asm.emscripten_stack_set_limits).apply(null,arguments)},Ve=h.stackSave=function(){return(Ve=h.stackSave=h.asm.stackSave).apply(null,arguments)},Ge=h.stackRestore=function(){return(Ge=h.stackRestore=h.asm.stackRestore).apply(null,arguments)},He=h.stackAlloc=function(){return(He=h.stackAlloc=h.asm.stackAlloc).apply(null,arguments)};function je(e){if(e=e||g,!(Z>0)){if(k)return u(h),J(),void startWorker(h);!function(){if(h.preRun)for("function"==typeof h.preRun&&(h.preRun=[h.preRun]);h.preRun.length;)e=h.preRun.shift(),q.unshift(e);var e;pe(q)}(),Z>0||(h.setStatus?(h.setStatus("Running..."),setTimeout((function(){setTimeout((function(){h.setStatus("")}),1),t()}),1)):t())}function t(){Re||(Re=!0,h.calledRun=!0,B||(J(),u(h),h.onRuntimeInitialized&&h.onRuntimeInitialized(),function(){if(!k){if(h.postRun)for("function"==typeof h.postRun&&(h.postRun=[h.postRun]);h.postRun.length;)e=h.postRun.shift(),X.unshift(e);var e;pe(X)}}()))}}if(h.dynCall_iijjiiii=function(){return(h.dynCall_iijjiiii=h.asm.dynCall_iijjiiii).apply(null,arguments)},h.dynCall_jiji=function(){return(h.dynCall_jiji=h.asm.dynCall_jiji).apply(null,arguments)},h.keepRuntimeAlive=Y,h.wasmMemory=R,h.cwrap=function(e,t,n,a){var r=(n=n||[]).every((e=>"number"===e||"boolean"===e));return"string"!==t&&r&&!a?_e(e):function(){return Ee(e,t,n,arguments)}},h.ExitStatus=oe,h.PThread=de,ee=function e(){Re||je(),Re||(ee=e)},h.preInit)for("function"==typeof h.preInit&&(h.preInit=[h.preInit]);h.preInit.length>0;)h.preInit.pop()();if(je(),c&&(Ae={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!c.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!c.unhandledRejection.indexOf(e)>-1}))}),"undefined"!=typeof WasmBackendModule)Fe=WasmBackendModule;else{if(void 0===e)throw new Error("Could not find wasm module in post.js");Fe=e}if(Ae){var qe=Fe._dispose;Fe._dispose=function(){qe(),Ae.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),Ae.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return e.ready});e.exports=r},593:e=>{e.exports.$='"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",data=>onmessage({data:data}));var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8")+"//# sourceURL="+f)},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}var initializedJS=false;var pendingNotifiedProxyingQueues=[];function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"\n");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=(info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports};self.onunhandledrejection=e=>{throw e.reason??e};self.startWorker=instance=>{Module=instance;postMessage({"cmd":"loaded"})};self.onmessage=e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;for(const handler of e.data.handlers){Module[handler]=function(){postMessage({cmd:"callHandler",handler:handler,args:[...arguments]})}}Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob=="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module)}else if(e.data.cmd==="run"){Module["__emscripten_thread_init"](e.data.pthread_ptr,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInitTLS();if(!initializedJS){pendingNotifiedProxyingQueues.forEach(queue=>{Module["executeNotifiedProxyingQueue"](queue)});pendingNotifiedProxyingQueues=[];initializedJS=true}try{Module["invokeEntryPoint"](e.data.start_routine,e.data.arg)}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processProxyingQueue"){if(initializedJS){Module["executeNotifiedProxyingQueue"](e.data.queue)}else{pendingNotifiedProxyingQueues.push(e.data.queue)}}else if(e.data.cmd){err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}};'},805:(e,t,n)=>{var a,r=(a=(a="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||"/index.js",function(e){var t,r,s,i=void 0!==(e=e||{})?e:{};i.ready=new Promise((function(e,n){t=e,r=n})),"undefined"!=typeof process&&process.listeners&&(s={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var o,u,l,c=Object.assign({},i),h=[],d="object"==typeof window,p="function"==typeof importScripts,f="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,m="";if(f){var g=n(893),b=n(281);m=p?b.dirname(m)+"/":"//",o=(e,t)=>(e=W(e)?new URL(e):b.normalize(e),g.readFileSync(e,t?void 0:"utf8")),l=e=>{var t=o(e,!0);return t.buffer||(t=new Uint8Array(t)),t},u=(e,t,n)=>{e=W(e)?new URL(e):b.normalize(e),g.readFile(e,(function(e,a){e?n(e):t(a.buffer)}))},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),h=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof U))throw e})),process.on("unhandledRejection",(function(e){throw e})),i.inspect=function(){return"[Emscripten Module object]"}}else(d||p)&&(p?m=self.location.href:"undefined"!=typeof document&&document.currentScript&&(m=document.currentScript.src),a&&(m=a),m=0!==m.indexOf("blob:")?m.substr(0,m.replace(/[?#].*/,"").lastIndexOf("/")+1):"",o=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},p&&(l=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),u=(e,t,n)=>{var a=new XMLHttpRequest;a.open("GET",e,!0),a.responseType="arraybuffer",a.onload=()=>{200==a.status||0==a.status&&a.response?t(a.response):n()},a.onerror=n,a.send(null)});var y,x,w=i.print||console.log.bind(console),k=i.printErr||console.warn.bind(console);Object.assign(i,c),c=null,i.arguments&&(h=i.arguments),i.thisProgram&&i.thisProgram,i.quit&&i.quit,i.wasmBinary&&(y=i.wasmBinary),i.noExitRuntime,"object"!=typeof WebAssembly&&O("no native wasm support detected");var v,I,S,N,C=!1,$="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function T(e,t,n){for(var a=(t>>>=0)+n,r=t;e[r]&&!(r>=a);)++r;if(r-t>16&&e.buffer&&$)return $.decode(e.subarray(t,r));for(var s="";t<r;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var u=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|u:(7&i)<<18|o<<12|u<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var l=i-65536;s+=String.fromCharCode(55296|l>>10,56320|1023&l)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function _(e){v=e,i.HEAP8=I=new Int8Array(e),i.HEAP16=new Int16Array(e),i.HEAP32=new Int32Array(e),i.HEAPU8=S=new Uint8Array(e),i.HEAPU16=new Uint16Array(e),i.HEAPU32=N=new Uint32Array(e),i.HEAPF32=new Float32Array(e),i.HEAPF64=new Float64Array(e)}i.INITIAL_MEMORY;var E=[],R=[],A=[],F=0,D=null,M=null;function O(e){i.onAbort&&i.onAbort(e),k(e="Aborted("+e+")"),C=!0,e+=". Build with -sASSERTIONS for more info.";var t=new WebAssembly.RuntimeError(e);throw r(t),t}var L,z;function P(e){return e.startsWith("data:application/octet-stream;base64,")}function W(e){return e.startsWith("file://")}function B(e){try{if(e==L&&y)return new Uint8Array(y);if(l)return l(e);throw"both async and sync fetching of the wasm failed"}catch(e){O(e)}}function U(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function V(e){for(;e.length>0;)e.shift()(i)}function G(e){try{return x.grow(e-v.byteLength+65535>>>16),_(x.buffer),1}catch(e){}}P(L="tfjs-backend-wasm.wasm")||(z=L,L=i.locateFile?i.locateFile(z,m):m+z);var H=[null,[],[]];function j(e,t){var n=H[e];0===t||10===t?((1===e?w:k)(T(n,0)),n.length=0):n.push(t)}function q(e){return i["_"+e]}function K(e,t,n,a,r){var s={string:e=>{var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);!function(e,t,n){!function(e,t,n,a){if(!(a>0))return 0;for(var r=(n>>>=0)+a-1,s=0;s<e.length;++s){var i=e.charCodeAt(s);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++s)),i<=127){if(n>=r)break;t[n++>>>0]=i}else if(i<=2047){if(n+1>=r)break;t[n++>>>0]=192|i>>6,t[n++>>>0]=128|63&i}else if(i<=65535){if(n+2>=r)break;t[n++>>>0]=224|i>>12,t[n++>>>0]=128|i>>6&63,t[n++>>>0]=128|63&i}else{if(n+3>=r)break;t[n++>>>0]=240|i>>18,t[n++>>>0]=128|i>>12&63,t[n++>>>0]=128|i>>6&63,t[n++>>>0]=128|63&i}}t[n>>>0]=0}(e,S,t,n)}(e,t=te(n),n)}return t},array:e=>{var t=te(e.length);return function(e,t){I.set(e,t>>>0)}(e,t),t}},i=q(e),o=[],u=0;if(a)for(var l=0;l<a.length;l++){var c=s[n[l]];c?(0===u&&(u=Q()),o[l]=c(a[l])):o[l]=a[l]}var h=i.apply(null,o);return function(e){return 0!==u&&ee(u),function(e){return"string"===t?(n=e,(n>>>=0)?T(S,n,a):""):"boolean"===t?Boolean(e):e;var n,a}(e)}(h)}var X,Y,J,Z={abort:function(){O("")},emscripten_get_heap_max:function(){return 4294901760},emscripten_memcpy_big:function(e,t,n){S.copyWithin(e>>>0,t>>>0,t+n>>>0)},emscripten_resize_heap:function(e){var t,n=S.length,a=4294901760;if((e>>>=0)>a)return!1;for(var r=1;r<=4;r*=2){var s=n*(1+.2/r);if(s=Math.min(s,e+100663296),G(Math.min(a,(t=Math.max(e,s))+(65536-t%65536)%65536)))return!0}return!1},fd_close:function(e){return 52},fd_seek:function(e,t,n,a,r){return 70},fd_write:function(e,t,n,a){for(var r=0,s=0;s<n;s++){var i=N[t>>>2],o=N[t+4>>>2];t+=8;for(var u=0;u<o;u++)j(e,S[i+u>>>0]);r+=o}return N[a>>>2]=r,0}},Q=(function(){var e={env:Z,wasi_snapshot_preview1:Z};function t(e,t){var n,a=e.exports;i.asm=a,_((x=i.asm.memory).buffer),i.asm.__indirect_function_table,n=i.asm.__wasm_call_ctors,R.unshift(n),function(){if(F--,i.monitorRunDependencies&&i.monitorRunDependencies(F),0==F&&(null!==D&&(clearInterval(D),D=null),M)){var e=M;M=null,e()}}()}function n(e){t(e.instance)}function a(t){return function(){if(!y&&(d||p)){if("function"==typeof fetch&&!W(L))return fetch(L,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+L+"'";return e.arrayBuffer()})).catch((function(){return B(L)}));if(u)return new Promise((function(e,t){u(L,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return B(L)}))}().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){k("failed to asynchronously prepare wasm: "+e),O(e)}))}if(F++,i.monitorRunDependencies&&i.monitorRunDependencies(F),i.instantiateWasm)try{return i.instantiateWasm(e,t)}catch(e){k("Module.instantiateWasm callback failed with error: "+e),r(e)}(y||"function"!=typeof WebAssembly.instantiateStreaming||P(L)||W(L)||f||"function"!=typeof fetch?a(n):fetch(L,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return k("wasm streaming compile failed: "+e),k("falling back to ArrayBuffer instantiation"),a(n)}))}))).catch(r)}(),i.___wasm_call_ctors=function(){return(i.___wasm_call_ctors=i.asm.__wasm_call_ctors).apply(null,arguments)},i._init=function(){return(i._init=i.asm.init).apply(null,arguments)},i._init_with_threads_count=function(){return(i._init_with_threads_count=i.asm.init_with_threads_count).apply(null,arguments)},i._get_threads_count=function(){return(i._get_threads_count=i.asm.get_threads_count).apply(null,arguments)},i._register_tensor=function(){return(i._register_tensor=i.asm.register_tensor).apply(null,arguments)},i._dispose_data=function(){return(i._dispose_data=i.asm.dispose_data).apply(null,arguments)},i._dispose=function(){return(i._dispose=i.asm.dispose).apply(null,arguments)},i._Abs=function(){return(i._Abs=i.asm.Abs).apply(null,arguments)},i._Acos=function(){return(i._Acos=i.asm.Acos).apply(null,arguments)},i._Acosh=function(){return(i._Acosh=i.asm.Acosh).apply(null,arguments)},i._Add=function(){return(i._Add=i.asm.Add).apply(null,arguments)},i._AddN=function(){return(i._AddN=i.asm.AddN).apply(null,arguments)},i._All=function(){return(i._All=i.asm.All).apply(null,arguments)},i._Any=function(){return(i._Any=i.asm.Any).apply(null,arguments)},i._ArgMax=function(){return(i._ArgMax=i.asm.ArgMax).apply(null,arguments)},i._ArgMin=function(){return(i._ArgMin=i.asm.ArgMin).apply(null,arguments)},i._Asin=function(){return(i._Asin=i.asm.Asin).apply(null,arguments)},i._Asinh=function(){return(i._Asinh=i.asm.Asinh).apply(null,arguments)},i._Atan=function(){return(i._Atan=i.asm.Atan).apply(null,arguments)},i._Atan2=function(){return(i._Atan2=i.asm.Atan2).apply(null,arguments)},i._Atanh=function(){return(i._Atanh=i.asm.Atanh).apply(null,arguments)},i._AvgPool=function(){return(i._AvgPool=i.asm.AvgPool).apply(null,arguments)},i._AvgPool3D=function(){return(i._AvgPool3D=i.asm.AvgPool3D).apply(null,arguments)},i._AvgPool3DGrad=function(){return(i._AvgPool3DGrad=i.asm.AvgPool3DGrad).apply(null,arguments)},i._AvgPoolGrad=function(){return(i._AvgPoolGrad=i.asm.AvgPoolGrad).apply(null,arguments)},i._BatchMatMul=function(){return(i._BatchMatMul=i.asm.BatchMatMul).apply(null,arguments)},i._Bincount=function(){return(i._Bincount=i.asm.Bincount).apply(null,arguments)},i._BitwiseAnd=function(){return(i._BitwiseAnd=i.asm.BitwiseAnd).apply(null,arguments)},i._Ceil=function(){return(i._Ceil=i.asm.Ceil).apply(null,arguments)},i._ClipByValue=function(){return(i._ClipByValue=i.asm.ClipByValue).apply(null,arguments)},i._Conv2D=function(){return(i._Conv2D=i.asm.Conv2D).apply(null,arguments)},i._Conv2DBackpropInput=function(){return(i._Conv2DBackpropInput=i.asm.Conv2DBackpropInput).apply(null,arguments)},i._Conv3D=function(){return(i._Conv3D=i.asm.Conv3D).apply(null,arguments)},i._Conv3DBackpropFilterV2=function(){return(i._Conv3DBackpropFilterV2=i.asm.Conv3DBackpropFilterV2).apply(null,arguments)},i._Conv3DBackpropInputV2=function(){return(i._Conv3DBackpropInputV2=i.asm.Conv3DBackpropInputV2).apply(null,arguments)},i._Cos=function(){return(i._Cos=i.asm.Cos).apply(null,arguments)},i._Cosh=function(){return(i._Cosh=i.asm.Cosh).apply(null,arguments)},i._CropAndResize=function(){return(i._CropAndResize=i.asm.CropAndResize).apply(null,arguments)},i._Cumprod=function(){return(i._Cumprod=i.asm.Cumprod).apply(null,arguments)},i._Cumsum=function(){return(i._Cumsum=i.asm.Cumsum).apply(null,arguments)},i._DenseBincount=function(){return(i._DenseBincount=i.asm.DenseBincount).apply(null,arguments)},i._DepthToSpace=function(){return(i._DepthToSpace=i.asm.DepthToSpace).apply(null,arguments)},i._DepthwiseConv2dNative=function(){return(i._DepthwiseConv2dNative=i.asm.DepthwiseConv2dNative).apply(null,arguments)},i._Diag=function(){return(i._Diag=i.asm.Diag).apply(null,arguments)},i._Dilation2D=function(){return(i._Dilation2D=i.asm.Dilation2D).apply(null,arguments)},i._Dilation2DBackpropFilter=function(){return(i._Dilation2DBackpropFilter=i.asm.Dilation2DBackpropFilter).apply(null,arguments)},i._Dilation2DBackpropInput=function(){return(i._Dilation2DBackpropInput=i.asm.Dilation2DBackpropInput).apply(null,arguments)},i._Elu=function(){return(i._Elu=i.asm.Elu).apply(null,arguments)},i._EluGrad=function(){return(i._EluGrad=i.asm.EluGrad).apply(null,arguments)},i._Equal=function(){return(i._Equal=i.asm.Equal).apply(null,arguments)},i._Erf=function(){return(i._Erf=i.asm.Erf).apply(null,arguments)},i._Exp=function(){return(i._Exp=i.asm.Exp).apply(null,arguments)},i._Expm1=function(){return(i._Expm1=i.asm.Expm1).apply(null,arguments)},i._FlipLeftRight=function(){return(i._FlipLeftRight=i.asm.FlipLeftRight).apply(null,arguments)},i._Floor=function(){return(i._Floor=i.asm.Floor).apply(null,arguments)},i._FloorDiv=function(){return(i._FloorDiv=i.asm.FloorDiv).apply(null,arguments)},i._FusedBatchNorm=function(){return(i._FusedBatchNorm=i.asm.FusedBatchNorm).apply(null,arguments)},i._FusedConv2D=function(){return(i._FusedConv2D=i.asm.FusedConv2D).apply(null,arguments)},i._FusedDepthwiseConv2D=function(){return(i._FusedDepthwiseConv2D=i.asm.FusedDepthwiseConv2D).apply(null,arguments)},i._Gather=function(){return(i._Gather=i.asm.Gather).apply(null,arguments)},i._GatherNd=function(){return(i._GatherNd=i.asm.GatherNd).apply(null,arguments)},i._Greater=function(){return(i._Greater=i.asm.Greater).apply(null,arguments)},i._GreaterEqual=function(){return(i._GreaterEqual=i.asm.GreaterEqual).apply(null,arguments)},i._IsFinite=function(){return(i._IsFinite=i.asm.IsFinite).apply(null,arguments)},i._IsInf=function(){return(i._IsInf=i.asm.IsInf).apply(null,arguments)},i._IsNan=function(){return(i._IsNan=i.asm.IsNan).apply(null,arguments)},i._LRN=function(){return(i._LRN=i.asm.LRN).apply(null,arguments)},i._LRNGrad=function(){return(i._LRNGrad=i.asm.LRNGrad).apply(null,arguments)},i._LeakyRelu=function(){return(i._LeakyRelu=i.asm.LeakyRelu).apply(null,arguments)},i._Less=function(){return(i._Less=i.asm.Less).apply(null,arguments)},i._LessEqual=function(){return(i._LessEqual=i.asm.LessEqual).apply(null,arguments)},i._LinSpace=function(){return(i._LinSpace=i.asm.LinSpace).apply(null,arguments)},i._Log=function(){return(i._Log=i.asm.Log).apply(null,arguments)},i._Log1p=function(){return(i._Log1p=i.asm.Log1p).apply(null,arguments)},i._LogicalAnd=function(){return(i._LogicalAnd=i.asm.LogicalAnd).apply(null,arguments)},i._LogicalNot=function(){return(i._LogicalNot=i.asm.LogicalNot).apply(null,arguments)},i._LogicalOr=function(){return(i._LogicalOr=i.asm.LogicalOr).apply(null,arguments)},i._LogicalXor=function(){return(i._LogicalXor=i.asm.LogicalXor).apply(null,arguments)},i._Max=function(){return(i._Max=i.asm.Max).apply(null,arguments)},i._MaxPool=function(){return(i._MaxPool=i.asm.MaxPool).apply(null,arguments)},i._MaxPool3D=function(){return(i._MaxPool3D=i.asm.MaxPool3D).apply(null,arguments)},i._MaxPool3DGrad=function(){return(i._MaxPool3DGrad=i.asm.MaxPool3DGrad).apply(null,arguments)},i._MaxPoolGrad=function(){return(i._MaxPoolGrad=i.asm.MaxPoolGrad).apply(null,arguments)},i._MaxPoolWithArgmax=function(){return(i._MaxPoolWithArgmax=i.asm.MaxPoolWithArgmax).apply(null,arguments)},i._Maximum=function(){return(i._Maximum=i.asm.Maximum).apply(null,arguments)},i._Mean=function(){return(i._Mean=i.asm.Mean).apply(null,arguments)},i._Min=function(){return(i._Min=i.asm.Min).apply(null,arguments)},i._Minimum=function(){return(i._Minimum=i.asm.Minimum).apply(null,arguments)},i._MirrorPad=function(){return(i._MirrorPad=i.asm.MirrorPad).apply(null,arguments)},i._Mod=function(){return(i._Mod=i.asm.Mod).apply(null,arguments)},i._Multinomial=function(){return(i._Multinomial=i.asm.Multinomial).apply(null,arguments)},i._Multiply=function(){return(i._Multiply=i.asm.Multiply).apply(null,arguments)},i._Neg=function(){return(i._Neg=i.asm.Neg).apply(null,arguments)},i._NonMaxSuppressionV3=function(){return(i._NonMaxSuppressionV3=i.asm.NonMaxSuppressionV3).apply(null,arguments)},i._NonMaxSuppressionV4=function(){return(i._NonMaxSuppressionV4=i.asm.NonMaxSuppressionV4).apply(null,arguments)},i._NonMaxSuppressionV5=function(){return(i._NonMaxSuppressionV5=i.asm.NonMaxSuppressionV5).apply(null,arguments)},i._NotEqual=function(){return(i._NotEqual=i.asm.NotEqual).apply(null,arguments)},i._OneHot=function(){return(i._OneHot=i.asm.OneHot).apply(null,arguments)},i._PadV2=function(){return(i._PadV2=i.asm.PadV2).apply(null,arguments)},i._Pow=function(){return(i._Pow=i.asm.Pow).apply(null,arguments)},i._Prelu=function(){return(i._Prelu=i.asm.Prelu).apply(null,arguments)},i._Prod=function(){return(i._Prod=i.asm.Prod).apply(null,arguments)},i._RealDiv=function(){return(i._RealDiv=i.asm.RealDiv).apply(null,arguments)},i._Reciprocal=function(){return(i._Reciprocal=i.asm.Reciprocal).apply(null,arguments)},i._Relu=function(){return(i._Relu=i.asm.Relu).apply(null,arguments)},i._Relu6=function(){return(i._Relu6=i.asm.Relu6).apply(null,arguments)},i._ResizeBilinear=function(){return(i._ResizeBilinear=i.asm.ResizeBilinear).apply(null,arguments)},i._ResizeBilinearGrad=function(){return(i._ResizeBilinearGrad=i.asm.ResizeBilinearGrad).apply(null,arguments)},i._ResizeNearestNeighbor=function(){return(i._ResizeNearestNeighbor=i.asm.ResizeNearestNeighbor).apply(null,arguments)},i._ResizeNearestNeighborGrad=function(){return(i._ResizeNearestNeighborGrad=i.asm.ResizeNearestNeighborGrad).apply(null,arguments)},i._Reverse=function(){return(i._Reverse=i.asm.Reverse).apply(null,arguments)},i._RotateWithOffset=function(){return(i._RotateWithOffset=i.asm.RotateWithOffset).apply(null,arguments)},i._Round=function(){return(i._Round=i.asm.Round).apply(null,arguments)},i._Rsqrt=function(){return(i._Rsqrt=i.asm.Rsqrt).apply(null,arguments)},i._ScatterNd=function(){return(i._ScatterNd=i.asm.ScatterNd).apply(null,arguments)},i._SearchSorted=function(){return(i._SearchSorted=i.asm.SearchSorted).apply(null,arguments)},i._SelectV2=function(){return(i._SelectV2=i.asm.SelectV2).apply(null,arguments)},i._Selu=function(){return(i._Selu=i.asm.Selu).apply(null,arguments)},i._Sigmoid=function(){return(i._Sigmoid=i.asm.Sigmoid).apply(null,arguments)},i._Sign=function(){return(i._Sign=i.asm.Sign).apply(null,arguments)},i._Sin=function(){return(i._Sin=i.asm.Sin).apply(null,arguments)},i._Sinh=function(){return(i._Sinh=i.asm.Sinh).apply(null,arguments)},i._Softmax=function(){return(i._Softmax=i.asm.Softmax).apply(null,arguments)},i._Softplus=function(){return(i._Softplus=i.asm.Softplus).apply(null,arguments)},i._SparseFillEmptyRows=function(){return(i._SparseFillEmptyRows=i.asm.SparseFillEmptyRows).apply(null,arguments)},i._SparseReshape=function(){return(i._SparseReshape=i.asm.SparseReshape).apply(null,arguments)},i._SparseSegmentReduction=function(){return(i._SparseSegmentReduction=i.asm.SparseSegmentReduction).apply(null,arguments)},i._SparseToDense=function(){return(i._SparseToDense=i.asm.SparseToDense).apply(null,arguments)},i._Sqrt=function(){return(i._Sqrt=i.asm.Sqrt).apply(null,arguments)},i._Square=function(){return(i._Square=i.asm.Square).apply(null,arguments)},i._SquaredDifference=function(){return(i._SquaredDifference=i.asm.SquaredDifference).apply(null,arguments)},i._Step=function(){return(i._Step=i.asm.Step).apply(null,arguments)},i._StridedSlice=function(){return(i._StridedSlice=i.asm.StridedSlice).apply(null,arguments)},i._Sub=function(){return(i._Sub=i.asm.Sub).apply(null,arguments)},i._Sum=function(){return(i._Sum=i.asm.Sum).apply(null,arguments)},i._Tan=function(){return(i._Tan=i.asm.Tan).apply(null,arguments)},i._Tanh=function(){return(i._Tanh=i.asm.Tanh).apply(null,arguments)},i._TensorScatterUpdate=function(){return(i._TensorScatterUpdate=i.asm.TensorScatterUpdate).apply(null,arguments)},i._Tile=function(){return(i._Tile=i.asm.Tile).apply(null,arguments)},i._TopK=function(){return(i._TopK=i.asm.TopK).apply(null,arguments)},i._Transform=function(){return(i._Transform=i.asm.Transform).apply(null,arguments)},i._Transpose=function(){return(i._Transpose=i.asm.Transpose).apply(null,arguments)},i.__FusedMatMul=function(){return(i.__FusedMatMul=i.asm._FusedMatMul).apply(null,arguments)},i._malloc=function(){return(i._malloc=i.asm.malloc).apply(null,arguments)},i._free=function(){return(i._free=i.asm.free).apply(null,arguments)},i.___errno_location=function(){return(i.___errno_location=i.asm.__errno_location).apply(null,arguments)},i.stackSave=function(){return(Q=i.stackSave=i.asm.stackSave).apply(null,arguments)}),ee=i.stackRestore=function(){return(ee=i.stackRestore=i.asm.stackRestore).apply(null,arguments)},te=i.stackAlloc=function(){return(te=i.stackAlloc=i.asm.stackAlloc).apply(null,arguments)};function ne(e){function n(){X||(X=!0,i.calledRun=!0,C||(V(R),t(i),i.onRuntimeInitialized&&i.onRuntimeInitialized(),function(){if(i.postRun)for("function"==typeof i.postRun&&(i.postRun=[i.postRun]);i.postRun.length;)e=i.postRun.shift(),A.unshift(e);var e;V(A)}()))}e=e||h,F>0||(function(){if(i.preRun)for("function"==typeof i.preRun&&(i.preRun=[i.preRun]);i.preRun.length;)e=i.preRun.shift(),E.unshift(e);var e;V(E)}(),F>0||(i.setStatus?(i.setStatus("Running..."),setTimeout((function(){setTimeout((function(){i.setStatus("")}),1),n()}),1)):n()))}if(i.dynCall_iijjiiii=function(){return(i.dynCall_iijjiiii=i.asm.dynCall_iijjiiii).apply(null,arguments)},i.dynCall_jiji=function(){return(i.dynCall_jiji=i.asm.dynCall_jiji).apply(null,arguments)},i.cwrap=function(e,t,n,a){var r=(n=n||[]).every((e=>"number"===e||"boolean"===e));return"string"!==t&&r&&!a?q(e):function(){return K(e,t,n,arguments)}},M=function e(){X||ne(),X||(M=e)},i.preInit)for("function"==typeof i.preInit&&(i.preInit=[i.preInit]);i.preInit.length>0;)i.preInit.pop()();if(ne(),s&&(Y={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!s.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!s.unhandledRejection.indexOf(e)>-1}))}),void 0!==e)J=e;else{if("undefined"==typeof WasmBackendModuleThreadedSimd)throw new Error("Could not find wasm module in post.js");J=WasmBackendModuleThreadedSimd}if(Y){var ae=J._dispose;J._dispose=function(){ae(),Y.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),Y.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return e.ready});e.exports=r},570:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=a;var r={},s={};function i(e,t){var n,a,i;return t?(i=0<=(e>>>=0)&&e<256)&&(a=s[e])?a:(n=u(e,(0|e)<0?-1:0,!0),i&&(s[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(a=r[e])?a:(n=u(e,e<0?-1:0,!1),i&&(r[e]=n),n)}function o(e,t){if(isNaN(e))return t?b:g;if(t){if(e<0)return b;if(e>=p)return v}else{if(e<=-f)return I;if(e+1>=f)return k}return e<0?o(-e,t).neg():u(e%d|0,e/d|0,t)}function u(e,t,a){return new n(e,t,a)}n.fromInt=i,n.fromNumber=o,n.fromBits=u;var l=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var a;if((a=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===a)return c(e.substring(1),t,n).neg();for(var r=o(l(n,8)),s=g,i=0;i<e.length;i+=8){var u=Math.min(8,e.length-i),h=parseInt(e.substring(i,i+u),n);if(u<8){var d=o(l(n,u));s=s.mul(d).add(o(h))}else s=(s=s.mul(r)).add(o(h))}return s.unsigned=t,s}function h(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?c(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=h;var d=4294967296,p=d*d,f=p/2,m=i(1<<24),g=i(0);n.ZERO=g;var b=i(0,!0);n.UZERO=b;var y=i(1);n.ONE=y;var x=i(1,!0);n.UONE=x;var w=i(-1);n.NEG_ONE=w;var k=u(-1,2147483647,!1);n.MAX_VALUE=k;var v=u(-1,-1,!0);n.MAX_UNSIGNED_VALUE=v;var I=u(0,-2147483648,!1);n.MIN_VALUE=I;var S=n.prototype;S.toInt=function(){return this.unsigned?this.low>>>0:this.low},S.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},S.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var t=o(e),n=this.div(t),a=n.mul(t).sub(this);return n.toString(e)+a.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var r=o(l(e,6),this.unsigned),s=this,i="";;){var u=s.div(r),c=(s.sub(u.mul(r)).toInt()>>>0).toString(e);if((s=u).isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}},S.getHighBits=function(){return this.high},S.getHighBitsUnsigned=function(){return this.high>>>0},S.getLowBits=function(){return this.low},S.getLowBitsUnsigned=function(){return this.low>>>0},S.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return 0!=this.high?t+33:t+1},S.isZero=function(){return 0===this.high&&0===this.low},S.eqz=S.isZero,S.isNegative=function(){return!this.unsigned&&this.high<0},S.isPositive=function(){return this.unsigned||this.high>=0},S.isOdd=function(){return!(1&~this.low)},S.isEven=function(){return!(1&this.low)},S.equals=function(e){return a(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},S.eq=S.equals,S.notEquals=function(e){return!this.eq(e)},S.neq=S.notEquals,S.ne=S.notEquals,S.lessThan=function(e){return this.comp(e)<0},S.lt=S.lessThan,S.lessThanOrEqual=function(e){return this.comp(e)<=0},S.lte=S.lessThanOrEqual,S.le=S.lessThanOrEqual,S.greaterThan=function(e){return this.comp(e)>0},S.gt=S.greaterThan,S.greaterThanOrEqual=function(e){return this.comp(e)>=0},S.gte=S.greaterThanOrEqual,S.ge=S.greaterThanOrEqual,S.compare=function(e){if(a(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},S.comp=S.compare,S.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(y)},S.neg=S.negate,S.add=function(e){a(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,i=e.high>>>16,o=65535&e.high,l=e.low>>>16,c=0,d=0,p=0,f=0;return p+=(f+=s+(65535&e.low))>>>16,d+=(p+=r+l)>>>16,c+=(d+=n+o)>>>16,c+=t+i,u((p&=65535)<<16|(f&=65535),(c&=65535)<<16|(d&=65535),this.unsigned)},S.subtract=function(e){return a(e)||(e=h(e)),this.add(e.neg())},S.sub=S.subtract,S.multiply=function(e){if(this.isZero())return g;if(a(e)||(e=h(e)),t)return u(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(I))return e.isOdd()?I:g;if(e.eq(I))return this.isOdd()?I:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,r=65535&this.high,s=this.low>>>16,i=65535&this.low,l=e.high>>>16,c=65535&e.high,d=e.low>>>16,p=65535&e.low,f=0,b=0,y=0,x=0;return y+=(x+=i*p)>>>16,b+=(y+=s*p)>>>16,y&=65535,b+=(y+=i*d)>>>16,f+=(b+=r*p)>>>16,b&=65535,f+=(b+=s*d)>>>16,b&=65535,f+=(b+=i*c)>>>16,f+=n*p+r*d+s*c+i*l,u((y&=65535)<<16|(x&=65535),(f&=65535)<<16|(b&=65535),this.unsigned)},S.mul=S.multiply,S.divide=function(e){if(a(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,r,s;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?b:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return b;if(e.gt(this.shru(1)))return x;s=b}else{if(this.eq(I))return e.eq(y)||e.eq(w)?I:e.eq(I)?y:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?y:w:(r=this.sub(e.mul(n)),s=n.add(r.div(e)));if(e.eq(I))return this.unsigned?b:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=g}for(r=this;r.gte(e);){n=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),c=i<=48?1:l(2,i-48),d=o(n),p=d.mul(e);p.isNegative()||p.gt(r);)p=(d=o(n-=c,this.unsigned)).mul(e);d.isZero()&&(d=y),s=s.add(d),r=r.sub(p)}return s},S.div=S.divide,S.modulo=function(e){return a(e)||(e=h(e)),t?u((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},S.mod=S.modulo,S.rem=S.modulo,S.not=function(){return u(~this.low,~this.high,this.unsigned)},S.and=function(e){return a(e)||(e=h(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},S.or=function(e){return a(e)||(e=h(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},S.xor=function(e){return a(e)||(e=h(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},S.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},S.shl=S.shiftLeft,S.shiftRight=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},S.shr=S.shiftRight,S.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},S.shru=S.shiftRightUnsigned,S.shr_u=S.shiftRightUnsigned,S.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},S.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},S.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},S.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},S.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,a){return a?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},391:(e,t,n)=>{var a=n(180),r=n(181),s=n(31),i=n(67),o=n(833),u=n(717),l=n(801);l.alea=a,l.xor128=r,l.xorwow=s,l.xorshift7=i,l.xor4096=o,l.tychei=u,e.exports=l},180:function(e,t,n){var a;!function(e,r){function s(e){var t,n=this,a=(t=4022871197,function(e){e=String(e);for(var n=0;n<e.length;n++){var a=.02519603282416938*(t+=e.charCodeAt(n));a-=t=a>>>0,t=(a*=t)>>>0,t+=4294967296*(a-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=a(" "),n.s1=a(" "),n.s2=a(" "),n.s0-=a(e),n.s0<0&&(n.s0+=1),n.s1-=a(e),n.s1<0&&(n.s1+=1),n.s2-=a(e),n.s2<0&&(n.s2+=1),a=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function o(e,t){var n=new s(e),a=t&&t.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=o:n.amdD&&n.amdO?void 0===(a=function(){return o}.call(t,n,t,r))||(r.exports=a):this.alea=o}(0,e=n.nmd(e),n.amdD)},717:function(e,t,n){var a;!function(e,r){function s(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,a=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-a|0,a=a<<24^a>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-a|0,t.d=a<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var a=0;a<n.length+20;a++)t.b^=0|n.charCodeAt(a),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function o(e,t){var n=new s(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=o:n.amdD&&n.amdO?void 0===(a=function(){return o}.call(t,n,t,r))||(r.exports=a):this.tychei=o}(0,e=n.nmd(e),n.amdD)},181:function(e,t,n){var a;!function(e,r){function s(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function o(e,t){var n=new s(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=o:n.amdD&&n.amdO?void 0===(a=function(){return o}.call(t,n,t,r))||(r.exports=a):this.xor128=o}(0,e=n.nmd(e),n.amdD)},833:function(e,t,n){var a;!function(e,r){function s(e){var t=this;t.next=function(){var e,n,a=t.w,r=t.X,s=t.i;return t.w=a=a+1640531527|0,n=r[s+34&127],e=r[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[s]=n^e,t.i=s,n+(a^a>>>16)|0},function(e,t){var n,a,r,s,i,o=[],u=128;for(t===(0|t)?(a=t,t=null):(t+="\0",a=0,u=Math.max(u,t.length)),r=0,s=-32;s<u;++s)t&&(a^=t.charCodeAt((s+32)%t.length)),0===s&&(i=a),a^=a<<10,a^=a>>>15,a^=a<<4,a^=a>>>13,s>=0&&(i=i+1640531527|0,r=0==(n=o[127&s]^=a+i)?r+1:0);for(r>=128&&(o[127&(t&&t.length||0)]=-1),r=127,s=512;s>0;--s)a=o[r+34&127],n=o[r=r+1&127],a^=a<<13,n^=n<<17,a^=a>>>15,n^=n>>>12,o[r]=a^n;e.w=i,e.X=o,e.i=r}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function o(e,t){null==e&&(e=+new Date);var n=new s(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&(a.X&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=o:n.amdD&&n.amdO?void 0===(a=function(){return o}.call(t,n,t,r))||(r.exports=a):this.xor4096=o}(0,e=n.nmd(e),n.amdD)},67:function(e,t,n){var a;!function(e,r){function s(e){var t=this;t.next=function(){var e,n,a=t.x,r=t.i;return e=a[r],n=(e^=e>>>7)^e<<24,n^=(e=a[r+1&7])^e>>>10,n^=(e=a[r+3&7])^e>>>3,n^=(e=a[r+4&7])^e<<7,e=a[r+7&7],n^=(e^=e<<13)^e<<9,a[r]=n,t.i=r+1&7,n},function(e,t){var n,a=[];if(t===(0|t))a[0]=t;else for(t=""+t,n=0;n<t.length;++n)a[7&n]=a[7&n]<<15^t.charCodeAt(n)+a[n+1&7]<<13;for(;a.length<8;)a.push(0);for(n=0;n<8&&0===a[n];++n);for(8==n?a[7]=-1:a[n],e.x=a,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function o(e,t){null==e&&(e=+new Date);var n=new s(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&(a.x&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=o:n.amdD&&n.amdO?void 0===(a=function(){return o}.call(t,n,t,r))||(r.exports=a):this.xorshift7=o}(0,e=n.nmd(e),n.amdD)},31:function(e,t,n){var a;!function(e,r){function s(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),a==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function o(e,t){var n=new s(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=o:n.amdD&&n.amdO?void 0===(a=function(){return o}.call(t,n,t,r))||(r.exports=a):this.xorwow=o}(0,e=n.nmd(e),n.amdD)},801:function(e,t,n){var a;!function(r,s,i){var o,u=256,l=i.pow(u,6),c=i.pow(2,52),h=2*c,d=u-1;function p(e,t,n){var a=[],d=b(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,y(s)]:null==e?function(){try{var e;return o&&(e=o.randomBytes)?e=e(u):(e=new Uint8Array(u),(r.crypto||r.msCrypto).getRandomValues(e)),y(e)}catch(e){var t=r.navigator,n=t&&t.plugins;return[+new Date,r,n,r.screen,y(s)]}}():e,3),a),p=new f(a),x=function(){for(var e=p.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|p.g(4)},x.quick=function(){return p.g(4)/4294967296},x.double=x,b(y(p.S),s),(t.pass||n||function(e,t,n,a){return a&&(a.S&&m(a,p),e.state=function(){return m(p,{})}),n?(i.random=e,t):e})(x,d,"global"in t?t.global:this==i,t.state)}function f(e){var t,n=e.length,a=this,r=0,s=a.i=a.j=0,i=a.S=[];for(n||(e=[n++]);r<u;)i[r]=r++;for(r=0;r<u;r++)i[r]=i[s=d&s+e[r%n]+(t=i[r])],i[s]=t;(a.g=function(e){for(var t,n=0,r=a.i,s=a.j,i=a.S;e--;)t=i[r=d&r+1],n=n*u+i[d&(i[r]=i[s=d&s+t])+(i[s]=t)];return a.i=r,a.j=s,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,a=[],r=typeof e;if(t&&"object"==r)for(n in e)try{a.push(g(e[n],t-1))}catch(e){}return a.length?a:"string"==r?e:e+"\0"}function b(e,t){for(var n,a=e+"",r=0;r<a.length;)t[d&r]=d&(n^=19*t[d&r])+a.charCodeAt(r++);return y(t)}function y(e){return String.fromCharCode.apply(0,e)}if(b(i.random(),s),e.exports){e.exports=p;try{o=n(234)}catch(e){}}else void 0===(a=function(){return p}.call(t,n,t,e))||(e.exports=a)}("undefined"!=typeof self?self:this,[],Math)},893:()=>{},74:()=>{},281:()=>{},244:()=>{},556:()=>{},817:()=>{},590:()=>{},530:()=>{},108:()=>{},551:()=>{},234:()=>{}},t={};function n(a){var r=t[a];if(void 0!==r)return r.exports;var s=t[a]={id:a,loaded:!1,exports:{}};return e[a].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e);var a={};return(()=>{"use strict";n.r(a),n.d(a,{evaluate:()=>tB,fit:()=>eB,getParameters:()=>QW});var e={};n.r(e),n.d(e,{assertParamsValid:()=>fi,computeFlatOffset:()=>$i,computeOutShape:()=>gi,getNormalizedAxes:()=>wi,isSliceContinous:()=>Ci,maskToAxes:()=>mi,parseSliceParams:()=>Ti,sliceInfo:()=>_i,startForAxis:()=>Si,startIndicesWithElidedDims:()=>ki,stopForAxis:()=>Ni,stopIndicesWithElidedDims:()=>vi,stridesForAxis:()=>Ii,stridesWithElidedDims:()=>bi});var t={};n.r(t),n.d(t,{collectGatherOpShapeInfo:()=>Bc,computeOutShape:()=>Wc,segOpComputeOptimalWindowSize:()=>Pc});var r={};n.r(r),n.d(r,{ERF_A1:()=>ac,ERF_A2:()=>rc,ERF_A3:()=>sc,ERF_A4:()=>ic,ERF_A5:()=>oc,ERF_P:()=>nc,PARALLELIZE_THRESHOLD:()=>jl,RowPartitionType:()=>Bl,SELU_SCALE:()=>tc,SELU_SCALEALPHA:()=>ec,applyActivation:()=>qu,assertAndGetBroadcastShape:()=>Ks,assertAxesAreInnerMostDims:()=>Wo,assertParamsConsistent:()=>Pl,assignToTypedArray:()=>pc,axesAreInnerMostDims:()=>Oo,calculateShapes:()=>hi,checkEinsumDimSizes:()=>vc,checkPadOnDimRoundingMode:()=>Ki,combineLocations:()=>Lo,combineRaggedTensorToTensorShapes:()=>Ul,complexWithEvenIndex:()=>cc,complexWithOddIndex:()=>hc,computeConv2DInfo:()=>Li,computeConv3DInfo:()=>zi,computeDefaultPad:()=>Pi,computeDilation2DInfo:()=>Di,computeOptimalWindowSize:()=>ql,computeOutAndReduceShapes:()=>zo,computeOutShape:()=>Wl,computePool2DInfo:()=>Mi,computePool3DInfo:()=>Oi,convertConv2DDataFormat:()=>qi,decodeEinsumEquation:()=>wc,eitherStridesOrDilationsAreOne:()=>Hi,expandShapeToKeepDim:()=>Po,exponent:()=>mc,exponents:()=>fc,fromStringArrayToUint8:()=>Vc,fromUint8ToStringArray:()=>Uc,getAxesPermutation:()=>Bo,getBroadcastDims:()=>js,getComplexWithIndex:()=>dc,getEinsumComputePath:()=>Ic,getEinsumPermutation:()=>kc,getFusedBiasGradient:()=>ju,getFusedDyActivation:()=>Hu,getImageCenter:()=>Kl,getInnerMostAxes:()=>Vo,getPermuted:()=>Yl,getRaggedRank:()=>Gl,getReductionAxes:()=>qs,getReshaped:()=>Xl,getReshapedPermuted:()=>Jl,getRowPartitionTypesHelper:()=>Vl,getSliceBeginCoords:()=>Zl,getSliceSize:()=>Ql,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>$c,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Tc,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>_c,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>Ac,getSparseReshapeInputOutputMismatchErrorMessage:()=>Dc,getSparseReshapeInputOutputMultipleErrorMessage:()=>Fc,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Ec,getSparseReshapeNegativeOutputDimErrorMessage:()=>Rc,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>zc,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>Mc,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>Oc,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Lc,getUndoAxesPermutation:()=>Uo,isIdentityPermutation:()=>Sc,log:()=>la,mergeRealAndImagArrays:()=>uc,prepareAndValidate:()=>ui,prepareSplitSize:()=>Cc,segment_util:()=>t,shouldFuse:()=>Ku,slice_util:()=>e,splitRealAndImagArrays:()=>lc,stridesOrDilationsArePositive:()=>ji,tupleValuesAreOne:()=>Gi,upcastType:()=>cr,validateDefaultValueShape:()=>Hl,validateInput:()=>ci,validateUpdateShape:()=>li,warn:()=>ua});var s={};n.r(s),n.d(s,{mx:()=>yw,XI:()=>ck,Nk:()=>hk,f6:()=>pk,ct:()=>pw,YG:()=>gk,hH:()=>vk,z3:()=>iv,sG:()=>bv,uM:()=>vv,vS:()=>Pv,qB:()=>qv,GG:()=>Xv,lg:()=>eI,rq:()=>Jv,cu:()=>pI,WR:()=>cI,GE:()=>gI,px:()=>yI,jC:()=>FI,He:()=>OI,hE:()=>jI,BF:()=>Zk,Dk:()=>nS,cl:()=>cS,_B:()=>IS,ub:()=>CS,_f:()=>_S,Ku:()=>MS,qy:()=>LS,Zy:()=>XS,bu:()=>ZS,zv:()=>rw,dH:()=>$w,HS:()=>ik,yH:()=>yN,l3:()=>wN,z9:()=>vN,x6:()=>$N,_m:()=>DN,eW:()=>zN,GK:()=>BN,SP:()=>GN,yr:()=>jN,dl:()=>Tv,Dw:()=>ZN,xT:()=>nC,_X:()=>Dw,wz:()=>lC});class i{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class o{refCount(e){return u("refCount")}incRef(e){return u("incRef")}timerAvailable(){return!0}time(e){return u("time")}read(e){return u("read")}readSync(e){return u("readSync")}readToGPU(e,t){return u("readToGPU")}numDataIds(){return u("numDataIds")}disposeData(e,t){return u("disposeData")}write(e,t,n){return u("write")}move(e,t,n,a,r){return u("move")}createTensorFromGPUData(e,t,n){return u("createTensorFromGPUData")}memory(){return u("memory")}floatPrecision(){return u("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return u("dispose")}}function u(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function l(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,d(e,t,n)}function c(e,t,n){return Math.max(e,Math.min(t,n))}function h(e){return e%2==0?e:e+1}function d(e,t,n){const a=e[t];e[t]=e[n],e[n]=a}function p(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function f(e,t,n=""){p(b(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function m(e){p(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function g(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function b(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function y(e){return e%1==0}function x(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function w(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function k(e,t=e=>0,n,a){return new Promise(((r,s)=>{let i=0;const o=()=>{if(e())return void r();i++;const u=t(i);null!=n&&i>=n?s():null!=a?a(o,u):setTimeout(o,u)};o()}))}function v(e,t){let n=1,a=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==a)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${a} and dim ${t}`);a=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===a){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const r=e.slice();return r[a]=t/n,r}function I(e,t){const n=t.length;return p((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),p(e.every((e=>y(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function S(e,t){const n=[],a=[],r=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||r?null:I(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[i]||s[i]>t)&&1===e[t]&&(n.push(e[t]),a.push(t)),s[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),a.push(t))}return{newShape:n,keptDims:a}}function N(e,t){return C(e,t)}function C(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function $(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function T(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function _(e){return"string"==typeof e||e instanceof String}function E(e){return"number"==typeof e}function R(e){return Array.isArray(e)?R(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":E(e)?"float32":_(e)?"string":"boolean"==typeof e?"bool":"float32"}function A(e){return!!(e&&e.constructor&&e.call&&e.apply)}function F(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function D(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let a=t-3;a>=0;--a)n[a]=n[a+1]*e[a+1];return n}function M(e,t,n,a=!1){const r=new Array;if(1===t.length){const s=t[0]*(a?2:1);for(let t=0;t<s;t++)r[t]=n[e+t]}else{const s=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(a?2:1);for(let t=0;t<s;t++)r[t]=M(e+t*o,i,n,a)}return r}function O(e,t,n=!1){if(0===e.length)return t[0];const a=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===a)return[];if(a!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return M(0,e,t,n)}function L(e,t){const n=z(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function z(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function P(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return O(e,new Float32Array(n));if("int32"===t)return O(e,new Int32Array(n));if("bool"===t)return O(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function W(e){e.forEach((t=>{p(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function B(e,t,n){if(0===t)return 0;if(1===t)return e[0];let a=e[e.length-1];for(let t=0;t<e.length-1;++t)a+=n[t]*e[t];return a}function U(e,t,n){if(0===t)return[];if(1===t)return[e];const a=new Array(t);for(let t=0;t<a.length-1;++t)a[t]=Math.floor(e/n[t]),e-=a[t]*n[t];return a[a.length-1]=e,a}function V(e){return e&&e.then&&"function"==typeof e.then}const G="tfjsflags";class H{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=j,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(q().getBool("IS_TEST")||q().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];q().getBool("IS_TEST")||q().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(V(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);G in e&&e[G].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:t}(0,n)}))}}function j(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function q(){return X}let K,X=null;function Y(){if(null==K){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}K=e}return K}function J(e,t){const n=function(){const e=Y();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const a=t();return n.set(e,a),n.get(e)}}const Z="Abs",Q="Acos",ee="Acosh",te="Add",ne="AddN",ae="All",re="Any",se="ArgMax",ie="ArgMin",oe="Asin",ue="Asinh",le="Atan",ce="Atanh",he="Atan2",de="AvgPool",pe="AvgPoolGrad",fe="AvgPool3D",me="AvgPool3DGrad",ge="BatchMatMul",be="BatchToSpaceND",ye="Bincount",xe="BitwiseAnd",we="BroadcastArgs",ke="Cast",ve="Ceil",Ie="ClipByValue",Se="Complex",Ne="ComplexAbs",Ce="Concat",$e="Conv2D",Te="Conv2DBackpropFilter",_e="Conv2DBackpropInput",Ee="Conv3D",Re="Conv3DBackpropFilterV2",Ae="Conv3DBackpropInputV2",Fe="Cos",De="Cosh",Me="Cumprod",Oe="Cumsum",Le="CropAndResize",ze="DenseBincount",Pe="DepthToSpace",We="DepthwiseConv2dNative",Be="DepthwiseConv2dNativeBackpropFilter",Ue="DepthwiseConv2dNativeBackpropInput",Ve="Diag",Ge="Dilation2D",He="Dilation2DBackpropInput",je="Dilation2DBackpropFilter",qe="RealDiv",Ke="Einsum",Xe="Elu",Ye="EluGrad",Je="Erf",Ze="Equal",Qe="Exp",et="ExpandDims",tt="Expm1",nt="FFT",at="Fill",rt="FlipLeftRight",st="Floor",it="FloorDiv",ot="FusedBatchNorm",ut="GatherV2",lt="GatherNd",ct="Greater",ht="GreaterEqual",dt="Identity",pt="IFFT",ft="Imag",mt="IsFinite",gt="IsInf",bt="IsNan",yt="LeakyRelu",xt="Less",wt="LessEqual",kt="LinSpace",vt="Log",It="Log1p",St="LogicalAnd",Nt="LogicalNot",Ct="LogicalOr",$t="LRN",Tt="LRNGrad",_t="Max",Et="Maximum",Rt="MaxPool",At="MaxPoolGrad",Ft="MaxPool3D",Dt="MaxPool3DGrad",Mt="MaxPoolWithArgmax",Ot="Mean",Lt="Min",zt="Minimum",Pt="MirrorPad",Wt="Mod",Bt="Multinomial",Ut="Multiply",Vt="Neg",Gt="NotEqual",Ht="NonMaxSuppressionV3",jt="NonMaxSuppressionV4",qt="NonMaxSuppressionV5",Kt="OnesLike",Xt="OneHot",Yt="Pack",Jt="PadV2",Zt="Pow",Qt="Prelu",en="Prod",tn="RaggedGather",nn="RaggedRange",an="RaggedTensorToTensor",rn="Range",sn="Real",on="Reciprocal",un="Relu",ln="Reshape",cn="ResizeNearestNeighbor",hn="ResizeNearestNeighborGrad",dn="ResizeBilinear",pn="ResizeBilinearGrad",fn="Relu6",mn="Reverse",gn="Round",bn="Rsqrt",yn="ScatterNd",xn="TensorScatterUpdate",wn="SearchSorted",kn="Select",vn="Selu",In="Slice",Sn="Sin",Nn="Sinh",Cn="Sign",$n="Sigmoid",Tn="Softplus",_n="Sqrt",En="Sum",Rn="SpaceToBatchND",An="SplitV",Fn="Softmax",Dn="SparseFillEmptyRows",Mn="SparseReshape",On="SparseSegmentMean",Ln="SparseSegmentSum",zn="SparseToDense",Pn="SquaredDifference",Wn="Square",Bn="StaticRegexReplace",Un="StridedSlice",Vn="StringNGrams",Gn="StringSplit",Hn="StringToHashBucketFast",jn="Sub",qn="Tan",Kn="Tanh",Xn="Tile",Yn="TopK",Jn="Transform",Zn="Transpose",Qn="Unique",ea="Unpack",ta="UnsortedSegmentSum",na="ZerosLike",aa="Step",ra="RotateWithOffset",sa="_FusedMatMul",ia="FusedConv2D",oa="FusedDepthwiseConv2D";function ua(...e){q().getBool("IS_TEST")||q().getBool("PROD")||console.warn(...e)}function la(...e){q().getBool("IS_TEST")||q().getBool("PROD")||console.log(...e)}const ca=J("kernelRegistry",(()=>new Map)),ha=J("gradRegistry",(()=>new Map));function da(e,t){const n=ba(e,t);return ca.get(n)}function pa(e){return ha.get(e)}function fa(e){const t=ca.entries(),n=[];for(;;){const{done:a,value:r}=t.next();if(a)break;const[s,i]=r,[o]=s.split("_");o===e&&n.push(i)}return n}function ma(e){const{kernelName:t,backendName:n}=e,a=ba(t,n);ca.has(a)&&ua(`The kernel '${t}' for backend '${n}' is already registered`),ca.set(a,e)}function ga(e){const{kernelName:t}=e;ha.has(t)&&q().getBool("DEBUG")&&ua(`Overriding the gradient for '${t}'`),ha.set(t,e)}function ba(e,t){return`${t}_${e}`}function ya(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}var xa=n(570);const wa=n.n(xa)()||xa;function ka(e){return wa.fromString(e,!0,16)}const va=ka("c3a5c85c97cb3127"),Ia=ka("b492b66fbe98f273"),Sa=ka("9ae16a3b2f90404f");function Na(e){return e.xor(e.shru(47))}function Ca(e,t,n){const a=e.slice(t,t+n);return wa.fromBytes(Array.from(a),!0,!0)}function $a(e,t){return Ca(e,t,8)}function Ta(e,t){return Ca(e,t,4)}function _a(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Ea(e,t,n=ka("9ddfea08eb382d69")){let a=e.xor(t).mul(n);a=a.xor(a.shru(47));let r=t.xor(a).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function Ra(e,t,n,a){return function(e,t,n,a,r,s){r=r.add(e),s=_a(s.add(r).add(a),21);const i=r;return r=(r=r.add(t)).add(n),s=s.add(_a(r,44)),[r.add(a),s.add(i)]}($a(e,t),$a(e,t+8),$a(e,t+16),$a(e,t+24),n,a)}function Aa(e,t=e.length){const n=wa.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=Sa.add(2*t),a=$a(e,0).add(Sa),r=$a(e,t-8);return Ea(_a(r,37).mul(n).add(a),_a(a,25).add(r).mul(n),n)}if(t>=4){const n=Sa.add(2*t);return Ea(Ta(e,0).shl(3).add(t),Ta(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),a=t+(e[t-1]<<2);return Na(Sa.mul(n).xor(va.mul(a))).mul(Sa)}return Sa}(e,t):function(e,t=e.length){const n=Sa.add(2*t),a=$a(e,0).mul(Ia),r=$a(e,8),s=$a(e,t-8).mul(n),i=$a(e,t-16).mul(Sa);return Ea(_a(a.add(r),43).add(_a(s,30)).add(i),a.add(_a(r.add(Sa),18)).add(s),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=Sa.add(2*t),a=$a(e,0).mul(Sa),r=$a(e,8),s=$a(e,t-8).mul(n),i=$a(e,t-16).mul(Sa),o=_a(a.add(r),43).add(_a(s,30)).add(i),u=Ea(o,a.add(_a(r.add(Sa),18)).add(s),n),l=$a(e,16).mul(n),c=$a(e,24),h=o.add($a(e,t-32)).mul(n),d=u.add($a(e,t-24)).mul(n);return Ea(_a(l.add(c),43).add(_a(h,30)).add(d),l.add(_a(c.add(a),18)).add(h),n)}(e,t);let a=n,r=n.mul(Ia).add(113),s=Na(r.mul(Sa).add(113)).mul(Sa),i=[wa.UZERO,wa.UZERO],o=[wa.UZERO,wa.UZERO];a=a.mul(Sa).add($a(e,0));let u=0;const l=64*(t-1>>6),c=l+(t-1&63)-63;do{a=_a(a.add(r).add(i[0]).add($a(e,u+8)),37).mul(Ia),r=_a(r.add(i[1]).add($a(e,u+48)),42).mul(Ia),a=a.xor(o[1]),r=r.add(i[0]).add($a(e,u+40)),s=_a(s.add(o[0]),33).mul(Ia),i=Ra(e,u,i[1].mul(Ia),a.add(o[0])),o=Ra(e,u+32,s.add(o[1]),r.add($a(e,u+16))),[s,a]=[a,s],u+=64}while(u!==l);const h=Ia.add(s.and(255).shl(1));return u=c,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),a=_a(a.add(r).add(i[0]).add($a(e,u+8)),37).mul(h),r=_a(r.add(i[1]).add($a(e,u+48)),42).mul(h),a=a.xor(o[1].mul(9)),r=r.add(i[0].mul(9).add($a(e,u+40))),s=_a(s.add(o[0]),33).mul(h),i=Ra(e,u,i[1].mul(h),a.add(o[0])),o=Ra(e,u+32,s.add(o[1]),r.add($a(e,u+16))),[s,a]=[a,s],Ea(Ea(i[0],o[0],h).add(Na(r).mul(va)).add(s),Ea(i[1],o[1],h).add(a),h)}function Fa(e,t){return"string"===t?Oa(e):Da([e],t)}function Da(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Pa(e)),q().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const a=e[n];if(isNaN(a)||!isFinite(a))throw Error(`A tensor of type ${t} being uploaded contains ${a}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Ma(){return q().platform.now()}function Oa(e,t="utf-8"){return t=t||"utf-8",q().platform.encode(e,t)}function La(e,t="utf-8"){return t=t||"utf-8",q().platform.decode(e,t)}function za(e){return null!=q().platform.isTypedArray?q().platform.isTypedArray(e):ya(e)}function Pa(e,t=[],n=!1){if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||V(e)||null==e||za(e)&&n)t.push(e);else if(Array.isArray(e)||za(e))for(let a=0;a<e.length;++a)Pa(e[a],t,n);else{let a=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(a=Math.max(a,Number(t)));for(let r=0;r<=a;r++)Pa(e[r],t,n)}return t}class Wa{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Ua)}profileKernel(e,t,n){let a;const r=()=>{a=n()};let s;const i=Ma();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(r);else{r();for(const e of a)e.dataSync();s=Promise.resolve({kernelMs:Ma()-i})}if(q().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<a.length;t++){const n=a[t];n.data().then((t=>{Ba(t,n.dtype,e)}))}return{kernelName:e,outputs:a,inputs:t,timeMs:s.then((e=>e.kernelMs)),extraInfo:s.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:a,inputs:r,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),a,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],r,n[2])}))}))}}function Ba(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const a=e[t];if(isNaN(a)||!isFinite(a))return console.warn(`Found ${a} in the result of '${n}'`),!0}return!1}class Ua{logKernelProfile(e,t,n,a,r,s){const i="number"==typeof a?w(`${a}ms`,9):a.error,o=w(e,25),u=t.rank,l=t.size,c=w(t.shape.toString(),14);let h="";for(const e in r){const n=r[e];if(null!=n){const a=n.shape||t.shape,r=a.length;h+=`${e}: ${r}D ${r>0?a:""} `}}console.log(`%c${o}\t%c${i}\t%c${u}D ${c}\t%c${l}\t%c${h}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}const Va=20,Ga=3,Ha=7;function ja(e,t,n,a){const r=D(t),s=function(e,t,n,a){const r=g(t),s=a[a.length-1],i=new Array(s).fill(0),o=t.length,u="complex64"===n?Ya(e):e;if(o>1)for(let e=0;e<r/s;e++){const t=e*s;for(let e=0;e<s;e++)i[e]=Math.max(i[e],qa(u[t+e],0,n).length)}return i}(e,t,n,r),i=t.length,o=Xa(e,t,n,r,s),u=["Tensor"];return a&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${i}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(o.map((e=>"    "+e)).join("\n")),u.join("\n")}function qa(e,t,n){let a;return a=Array.isArray(e)?`${parseFloat(e[0].toFixed(Ha))} + ${parseFloat(e[1].toFixed(Ha))}j`:_(e)?`'${e}'`:"bool"===n?Ka(e):parseFloat(e.toFixed(Ha)).toString(),w(a,t)}function Ka(e){return 0===e?"false":"true"}function Xa(e,t,n,a,r,s=!0){const i="complex64"===n?2:1,o=t[0],u=t.length;if(0===u)return"complex64"===n?[qa(Ya(e)[0],0,n)]:"bool"===n?[Ka(e[0])]:[e[0].toString()];if(1===u){if(o>Va){const t=Ga*i;let a=Array.from(e.slice(0,t)),s=Array.from(e.slice((o-Ga)*i,o*i));return"complex64"===n&&(a=Ya(a),s=Ya(s)),["["+a.map(((e,t)=>qa(e,r[t],n))).join(", ")+", ..., "+s.map(((e,t)=>qa(e,r[o-Ga+t],n))).join(", ")+"]"]}return["["+("complex64"===n?Ya(e):Array.from(e)).map(((e,t)=>qa(e,r[t],n))).join(", ")+"]"]}const l=t.slice(1),c=a.slice(1),h=a[0]*i,d=[];if(o>Va){for(let t=0;t<Ga;t++){const a=t*h,s=a+h;d.push(...Xa(e.slice(a,s),l,n,c,r,!1))}d.push("...");for(let t=o-Ga;t<o;t++){const a=t*h,s=a+h;d.push(...Xa(e.slice(a,s),l,n,c,r,t===o-1))}}else for(let t=0;t<o;t++){const a=t*h,s=a+h;d.push(...Xa(e.slice(a,s),l,n,c,r,t===o-1))}const p=2===u?",":"";d[0]="["+(o>0?d[0]+p:"");for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+p;let f=",\n";for(let e=2;e<u;e++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(s?"":f),d}function Ya(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class Ja{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=g(e),null!=n){const e=n.length;p(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||C(t,this.size),this.strides=D(e)}set(e,...t){0===t.length&&(t=[0]),p(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Za().makeTensor(this.values,this.shape,this.dtype)}}let Za=null,Qa=null,er=null;class tr{constructor(e,t,n,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=g(e),this.strides=D(e),this.dataId=n,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Qa.buffer(this.shape,this.dtype,e)}bufferSync(){return Qa.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return O(this.shape,e,"complex64"===this.dtype)}arraySync(){return O(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Za().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>La(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Za().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Za().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>La(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Za().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),Za().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Qa.print(this,e)}clone(){return this.throwIfDisposed(),Qa.clone(this)}toString(e=!1){return ja(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Qa.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Za().makeVariable(this,e,t,n)}}function nr(){return J("Tensor",(()=>tr))}Object.defineProperty(tr,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),nr();class ar extends tr{constructor(e,t,n,a){super(e.shape,e.dtype,e.dataId,a),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!b(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Za().disposeTensor(this),this.dataId=e.dataId,Za().incRef(this,null)}dispose(){Za().disposeVariable(this),this.isDisposedInternal=!0}}var rr,sr,ir,or,ur;Object.defineProperty(ar,Symbol.hasInstance,{value:e=>e instanceof tr&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(rr||(rr={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(sr||(sr={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(ir||(ir={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(or||(or={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(ur||(ur={}));const lr={float32:or,int32:sr,bool:ir,complex64:ur};function cr(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return lr[e][t]}function hr(e){return cr(e,"int32")}function dr(e){return null!=e&&"object"==typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function pr(e){return"undefined"!=typeof GPUBuffer&&null!=e&&"object"==typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}function fr(e,t){if(e.dtype===t.dtype)return[e,t];const n=cr(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function mr(e,t){return t.some((t=>t.id===e.id))}function gr(e){const t=[];return br(e,t,new Set),t}function br(e,t,n){if(null==e)return;if(e instanceof tr)return void t.push(e);if(a=e,!Array.isArray(a)&&"object"!=typeof a)return;var a;const r=e;for(const e in r){const a=r[e];n.has(a)||(n.add(a),br(a,t,n))}}function yr(e){return null!=e.kernelName}class xr{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class wr{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new xr}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(ua(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Wa(this.backendInstance),!0}setupRegisteredKernels(){fa(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){fa(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof o||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,a=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,ua(`Initialization of backend ${e} failed`),ua(n.stack||n.message)),!1)));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}}catch(t){return ua(`Initialization of backend ${e} failed`),ua(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:a,asyncInit:r}=this.initializeBackend(n);if(r||a)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),a=n.backend,r=this.readSync(t),s=a.refCount(t);a.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,a=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=e}return this.scopedRun((()=>this.startScope(a)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return wr.nextTensorId++}nextVariableId(){return wr.nextVariableId++}clone(e){const t=vr.runKernel(dt,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return vr.runKernel(ke,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==da(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const a=this.backend.numDataIds();let r=0;n.forEach((e=>{r+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=a-t-r-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const a=this.isTapeOn(),r=this.state.numBytes,s=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=yr(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(yr(e)){const{kernelName:t,inputs:r,attrs:s}=e;null==this.backendName&&this.backend;const u=da(t,this.backendName);p(null!=u,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();o=u.kernelFunc({inputs:r,attrs:s,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const l=i.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(a){const e=this.getTensorsForGradient(t,r,l);n=this.saveTensorsForBackwardMode(e)}return l}}else{const{forwardFunc:t}=e,r=e=>{a&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,r)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:l,attrs:c}=e,h=yr(e)?null:e.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(u,l,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=i()})),a&&this.addTapeNode(u,l,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map((e=>null!=l[e]?l[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const a=pa(e);if(null!=a){const e=a.inputsToSave||[],r=a.outputsToSave||[];let s;a.saveAllInputs?(p(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const i=n.filter(((e,t)=>r[t]));return s.concat(i)}return[]}makeTensor(e,t,n,a){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",a=a||this.backend;let r=e;"string"===n&&_(e[0])&&(r=e.map((e=>Oa(e))));const s=a.write(r,t,n),i=new tr(t,n,s,this.nextTensorId());if(this.trackTensor(i,a),"string"===n){const e=this.state.tensorInfo.get(s),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(r);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,a){const r={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(r,a)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:a,dtype:r}=e,s=new tr(a,r,n,this.nextTensorId());return this.trackTensor(s,t),s}makeVariable(e,t=!0,n,a){n=n||this.nextVariableId().toString(),null!=a&&a!==e.dtype&&(e=e.cast(a));const r=new ar(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*T(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof ar||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*T(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,a,r,s){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},o=pa(e);null!=o&&(a=o.gradFunc),null!=a&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],a=z(e.size,e.dtype);return this.makeTensor(a,e.shape,e.dtype)}return e})),a(e.length>1?e:e[0],r,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=gr(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const a=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==a.id||this.track(e)}))}gradients(e,t,n,a=!1){if(p(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));p(r instanceof tr,(()=>"The result y returned by f() must be a tensor."));const s=function(e,t,n){const a={},r={};for(let e=0;e<t.length;e++)a[t[e].id]=!0;for(let n=0;n<e.length;n++){const s=e[n],i=s.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(a[n.id]){s.outputs.forEach((e=>a[e.id]=!0)),o=!0,r[s.id]=!0;break}if(o)break}}const s={};s[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],a=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(const e in a)s[a[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(r[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const r=n.inputs[t];a[r.id]&&(e[t]=r)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,r);if(!a&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[r.id]=null==n?function(e){const t=L(g(e),"float32");return vr.makeTensor(t,e,"float32")}(r.shape):n,function(e,t,n,a){for(let r=t.length-1;r>=0;r--){const s=t[r],i=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(i);for(const t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const r=n((()=>o[t]()));if("float32"!==r.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${r.dtype}'`);const i=s.inputs[t];if(!b(r.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${r.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=r;else{const t=e[i.id];e[i.id]=a(t,r),t.dispose()}}}}(e,s,(e=>this.tidy(e)),Ir);const a=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:r,grads:a}}))}customGrad(e){return p(A(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;p(t.every((e=>e instanceof tr)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const a={};return t.forEach(((e,t)=>{a[t]=e})),this.runKernelFunc({forwardFunc:(a,r)=>(n=e(...t,r),p(n.value instanceof tr,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),p(A(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,a)=>{const r=n.gradFunc(e,a),s=Array.isArray(r)?r:[r];p(s.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),p(s.every((e=>e instanceof tr)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return s.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:a})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Ma(),n=await this.backend.time(e);return n.wallMs=Ma()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new xr;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function kr(){const e=Y();if(null==e._tfengine){const t=new H(e);e._tfengine=new wr(t)}var t;return t=e._tfengine.ENV,X=t,Za=()=>e._tfengine,e._tfengine}wr.nextTensorId=0,wr.nextVariableId=0;const vr=kr();function Ir(e,t){const n={a:e,b:t};return vr.runKernel(te,n)}function Sr(e){if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Nr(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const Cr=q();function $r(e,t){let n=e;if(za(e))return"string"===t?[]:[e.length];if(dr(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(pr(e))return[e.buffer.size/(null==t?4:T(t))];if(!Array.isArray(e))return[];const a=[];for(;Array.isArray(n)||za(n)&&"string"!==t;)a.push(n.length),n=n[0];return Array.isArray(e)&&q().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Tr(e,a,[]),a}function Tr(e,t,n){if(n=n||[],!Array.isArray(e)&&!za(e))return void p(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));p(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),p(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const a=t.slice(1);for(let t=0;t<e.length;++t)Tr(e[t],a,n.concat(t))}function _r(e,t,n,a){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${a}' must be ${e} tensor, but got ${t} tensor`)}}function Er(e,t,n,a="numeric"){if(e instanceof nr())return _r(a,e.dtype,t,n),e;let r=R(e);if("string"!==r&&["bool","int32","float32"].indexOf(a)>=0&&(r=a),_r(a,r,t,n),null==e||!za(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const a=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${a}'`)}const s=$r(e,r);za(e)||Array.isArray(e)||(e=[e]);const i="string"!==r?Da(e,r):Pa(e,[],!0);return vr.makeTensor(i,s,r)}function Rr(e,t,n,a="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,r)=>Er(e,`${t}[${r}]`,n,a)))}function Ar(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const a=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const r=(...e)=>{vr.startScope(n);try{const t=a(...e);return V(t)&&console.error("Cannot return a Promise inside of tidy."),vr.endScope(t),t}catch(e){throw vr.endScope(null),e}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}Cr.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Cr.registerFlag("IS_BROWSER",(()=>Nr())),Cr.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),Cr.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Cr.registerFlag("IS_SAFARI",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),Cr.registerFlag("PROD",(()=>!1)),Cr.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Cr.getBool("DEBUG"))),Cr.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Cr.registerFlag("IS_TEST",(()=>!1)),Cr.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>Cr.getBool("DEBUG"))),Cr.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),Cr.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),Cr.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));const Fr=Ar({complex_:function(e,t){const n=Er(e,"real","complex"),a=Er(t,"imag","complex");f(n.shape,a.shape,`real and imag shapes, ${n.shape} and ${a.shape}, must match in call to tf.complex().`);const r={real:n,imag:a};return vr.runKernel(Se,r)}});function Dr(e,t,n,a){if(null==a)a=R(e);else if("complex64"===a)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(pr(e)||dr(e)){if("float32"!==a&&"int32"!==a)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${a}.`);return vr.backend.createTensorFromGPUData(e,t||n,a)}if(!za(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){W(t);const e=g(t),a=g(n);p(e===a,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${a}`));for(let e=0;e<n.length;++e){const a=n[e],r=e!==n.length-1||a!==g(t.slice(e));p(n[e]===t[e]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return za(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==a?Da(e,a):Pa(e,[],!0),vr.makeTensor(e,t,a)}function Mr(e,t,n){return Dr(e,t,$r(e,n),n)}class Or{static join(e){return new Or(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map((e=>za(e)?e.buffer:e))).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const a=e[n];n!==e.length-1&&a.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const r=t+a.byteLength;this.shards.push({buffer:a,start:t,end:r}),t=r}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),(t=Math.min(this.byteLength,t))<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error(`Could not find start shard for byte ${e}`);const a=new ArrayBuffer(t-e),r=new Uint8Array(a);let s=0;for(let a=n;a<this.shards.length;a++){const n=this.shards[a],i=e+s-n.start,o=s,u=Math.min(t,n.end)-n.start,l=new Uint8Array(n.buffer,i,u-i);if(r.set(l,o),s+=l.length,t<n.end)break}return a}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,a=e.length;for(;n<=a;){const r=Math.floor((a-n)/2)+n,s=t(e[r]);if(0===s)return r;s<0?a=r:n=r+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}function Lr(){return vr}function zr(){return vr.memory()}function Pr(e,t){return vr.tidy(e,t)}function Wr(e){gr(e).forEach((e=>e.dispose()))}function Br(e){return vr.keep(e)}function Ur(e,t,n=1){return vr.registerBackend(e,t,n)}er=function(e){q().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};async function Vr(e,t){const n=[],a=[],r=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<r.length;++s){const i=r[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,a=new Uint8Array(n);let r=0;for(let e=0;e<t.length;e++){const n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);a.set(s,r),r+=4,a.set(n,r),r+=n.length}e(a)}));a.push(e)}else a.push(o.data());null!=t&&(u.group=t),n.push(u)}return{data:Gr(await Promise.all(a)),specs:n}}function Gr(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const a=new Uint8Array(t);let r=0;return n.forEach((e=>{a.set(new Uint8Array(e.buffer),r),r+=e.byteLength})),a.buffer}const Hr="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function jr(e){return Hr?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function qr(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function Kr(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:jr(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:jr(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new Or(e.weightData).byteLength}}function Xr(e){const t=[];for(const n of e)t.push(...n.weights);return t}class Yr{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Yr.instance&&(Yr.instance=new Yr),Yr.instance}static registerSaveRouter(e){Yr.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Yr.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Yr.getHandlers(e,"save")}static getLoadHandlers(e,t){return Yr.getHandlers(e,"load",t)}static getHandlers(e,t,n){const a=[];return("load"===t?Yr.getInstance().loadRouters:Yr.getInstance().saveRouters).forEach((t=>{const r=t(e,n);null!==r&&a.push(r)})),a}}const Jr="tensorflowjs",Zr="models_store",Qr="model_info_store";function es(){if(!q().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function ts(e){const t=e.result;t.createObjectStore(Zr,{keyPath:"modelPath"}),t.createObjectStore(Qr,{keyPath:"modelPath"})}class ns{constructor(e){if(this.indexedDB=es(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const a=this.indexedDB.open(Jr,1);a.onupgradeneeded=()=>ts(a),a.onsuccess=()=>{const r=a.result;if(null==t){const t=r.transaction(Zr,"readonly"),a=t.objectStore(Zr).get(this.modelPath);a.onsuccess=()=>{if(null==a.result)return r.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(a.result.modelArtifacts)},a.onerror=e=>(r.close(),n(a.error)),t.oncomplete=()=>r.close()}else{t.weightData=Or.join(t.weightData);const a=Kr(t),s=r.transaction(Qr,"readwrite");let i,o,u=s.objectStore(Qr);try{i=u.put({modelPath:this.modelPath,modelArtifactsInfo:a})}catch(e){return n(e)}i.onsuccess=()=>{o=r.transaction(Zr,"readwrite");const i=o.objectStore(Zr);let l;try{l=i.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:a})}catch(e){return n(e)}l.onsuccess=()=>e({modelArtifactsInfo:a}),l.onerror=e=>{u=s.objectStore(Qr);const t=u.delete(this.modelPath);t.onsuccess=()=>(r.close(),n(l.error)),t.onerror=e=>(r.close(),n(l.error))}},i.onerror=e=>(r.close(),n(i.error)),s.oncomplete=()=>{null==o?r.close():o.oncomplete=()=>r.close()}}},a.onerror=e=>n(a.error)}))}}ns.URL_SCHEME="indexeddb://";const as=e=>{return q().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ns.URL_SCHEME)?(t=e.slice(ns.URL_SCHEME.length),new ns(t)):null;var t};Yr.registerSaveRouter(as),Yr.registerLoadRouter(as);class rs{constructor(){this.indexedDB=es()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(Jr,1);n.onupgradeneeded=()=>ts(n),n.onsuccess=()=>{const a=n.result,r=a.transaction(Qr,"readonly"),s=r.objectStore(Qr).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(a.close(),t(s.error)),r.oncomplete=()=>a.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(ns.URL_SCHEME)?t.slice(ns.URL_SCHEME.length):t,new Promise(((t,n)=>{const a=this.indexedDB.open(Jr,1);a.onupgradeneeded=()=>ts(a),a.onsuccess=()=>{const r=a.result,s=r.transaction(Qr,"readwrite"),i=s.objectStore(Qr),o=i.get(e);let u;o.onsuccess=()=>{if(null==o.result)return r.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const a=i.delete(e),s=()=>{u=r.transaction(Zr,"readwrite");const a=u.objectStore(Zr).delete(e);a.onsuccess=()=>t(o.result.modelArtifactsInfo),a.onerror=e=>n(o.error)};a.onsuccess=s,a.onerror=e=>(s(),r.close(),n(o.error))}},o.onerror=e=>(r.close(),n(o.error)),s.oncomplete=()=>{null==u?r.close():u.oncomplete=()=>r.close()}},a.onerror=e=>n(a.error)}))}}const ss="/",is="tensorflowjs_models",os="info",us="model_topology",ls="weight_specs",cs="weight_data",hs="model_metadata";function ds(e){return{info:[is,e,os].join(ss),topology:[is,e,us].join(ss),weightSpecs:[is,e,ls].join(ss),weightData:[is,e,cs].join(ss),modelMetadata:[is,e,hs].join(ss)}}function ps(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function fs(e){const t=e.split(ss);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(ss)}class ms{constructor(e){if(!q().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=ds(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),a=Kr(e),r=Or.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Hr)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,a=t.length;e<a;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(r));const s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:a}}catch(e){throw ps(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${a.modelTopologyBytes}, weightSpecsBytes=${a.weightSpecsBytes}, weightDataBytes=${a.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==a)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=a;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const e=JSON.parse(r);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Hr){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}}ms.URL_SCHEME="localstorage://";const gs=e=>{return q().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ms.URL_SCHEME)?(t=e.slice(ms.URL_SCHEME.length),new ms(t)):null;var t};Yr.registerSaveRouter(gs),Yr.registerLoadRouter(gs);class bs{constructor(){p(q().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),p("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=is+ss,n=ss+os;for(let a=0;a<this.LS.length;++a){const r=this.LS.key(a);r.startsWith(t)&&r.endsWith(n)&&(e[fs(r)]=JSON.parse(this.LS.getItem(r)))}return e}async removeModel(e){var t;const n=ds(e=(t=e).startsWith(ms.URL_SCHEME)?t.slice(ms.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const a=JSON.parse(this.LS.getItem(n.info));return ps(n),a}}class ys{constructor(){this.managers={}}static getInstance(){return null==ys.instance&&(ys.instance=new ys),ys.instance}static registerManager(e,t){p(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),p(e.length>0,(()=>"scheme must not be an empty string."));const n=ys.getInstance();p(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=ys.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(ys.getInstance().managers)}}class xs{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!=typeof window&&q().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{e.source===window&&e.data.name===this.messageName&&(e.stopPropagation(),(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))}),!0))):setTimeout(e,t)}isTypedArray(e){return ya(e)}}if(q().get("IS_BROWSER")){q().setPlatform("browser",new xs);try{ys.registerManager(ms.URL_SCHEME,new bs)}catch(e){}try{ys.registerManager(ns.URL_SCHEME,new rs)}catch(e){}}let ws;function ks(e,t="float32",n){return t=t||"float32",W(e),new Ja(e,t,n)}q().get("IS_NODE")&&!q().get("IS_BROWSER")&&q().setPlatform("node",new class{constructor(){this.util=n(590),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=q().global.fetch?q().global.fetch(e,t):(null==ws&&(ws=n(817)),ws(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}});const vs=Ar({cast_:function(e,t){const n=Er(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const a={x:n},r={dtype:t};return vr.runKernel(ke,a,r)}}),Is=Ar({clone_:function(e){const t={x:Er(e,"x","clone","string_or_numeric")};return vr.runKernel(dt,t)}});kr(),Qa={buffer:ks,cast:vs,clone:Is,print:function(e,t=!1){console.log(e.toString(t))}};const Ss=Ar({add_:function(e,t){let n=Er(e,"a","add"),a=Er(t,"b","add");[n,a]=fr(n,a);const r={a:n,b:a};return vr.runKernel(te,r)}}),Ns=Ar({floorDiv_:function(e,t){let n=Er(e,"a","floorDiv"),a=Er(t,"b","floorDiv");[n,a]=fr(n,a);const r={a:n,b:a};return vr.runKernel(it,r)}}),Cs=Ar({div_:function(e,t){let n=Er(e,"a","div"),a=Er(t,"b","div");if([n,a]=fr(n,a),"int32"===n.dtype&&"int32"===a.dtype)return Ns(n,a);const r={a:n,b:a};return vr.runKernel(qe,r,{})}}),$s=Ar({mul_:function(e,t){let n=Er(e,"a","mul"),a=Er(t,"b","mul");[n,a]=fr(n,a);const r={a:n,b:a};return vr.runKernel(Ut,r)}}),Ts=Ar({sqrt_:function(e){const t={x:Er(e,"x","sqrt","float32")};return vr.runKernel(_n,t)}}),_s=Ar({square_:function(e){const t=Er(e,"x","square");return vr.runKernel("Square",{x:t},{})}}),Es=Ar({zerosLike_:function(e){const t={x:Er(e,"x","zerosLike")};return vr.runKernel(na,t)}});function Rs(e){return vr.customGrad(e)}function As(e,t){if((za(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&za(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Dr(e,[],[],t)}const Fs=new Map,Ds=new Map;class Ms{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Os{constructor(){this.classNameMap={}}static getMap(){return null==Os.instance&&(Os.instance=new Os),Os.instance}static register(e){Os.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Ls(e,t,n){p(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),p("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),p(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),void 0===t&&(t="Custom"),void 0===n&&(n=e.className);const a=t+">"+n;return Os.register(e),Fs.set(a,e),Ds.set(e,a),e}class zs extends Ms{minimize(e,t=!1,n){const{value:a,grads:r}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:r[e.name]})));this.applyGradients(e)}else this.applyGradients(r);return Wr(r),t?a:(a.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){p(A(e),(()=>"The f passed in variableGrads(f) must be a function")),p(null==t||Array.isArray(t)&&t.every((e=>e instanceof ar)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in vr.registeredVariables)t.push(vr.registeredVariables[e])}const a=n?t.filter((e=>!e.trainable)):null,r=t.length;p((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`));const{value:s,grads:i}=vr.gradients(e,t,null,!0);p(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),p(0===s.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=a&&a.forEach((e=>o[e.name]=null)),{value:s,grads:o}}(e,t)}dispose(){null!=this.iterations_&&Wr(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:As(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(zs,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class Ps extends zs{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=vr.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=vr.registeredVariables[t],r=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:Pr((()=>Es(a).variable(r)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:Pr((()=>Es(a).variable(r)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const i=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;Pr((()=>{const e=Ss($s(i,this.rho),$s(_s(s),1-this.rho)),t=$s(Cs(Ts(Ss(o,this.epsilon)),Ts(Ss(i,this.epsilon))),s),n=Ss($s(o,this.rho),$s(_s(t),1-this.rho));i.assign(e),o.assign(n);const r=Ss($s(t,-this.learningRate),a);a.assign(r)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Wr(this.accumulatedGrads.map((e=>e.variable))),Wr(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}function Ws(e,t,n){W(e);const a={shape:e,value:t,dtype:n=n||R(t)};return vr.runKernel(at,{},a)}class Bs extends zs{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=vr.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:Pr((()=>Ws(a.shape,this.initialAccumulatorValue).variable(e)))}}const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=this.accumulatedGrads[n].variable;Pr((()=>{const e=Ss(s,_s(r));s.assign(e);const t=Ss($s(Cs(r,Ts(Ss(e,vr.backend.epsilon()))),-this.learningRate),a);a.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Wr(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}const Us=Ar({pow_:function(e,t){let n=Er(e,"base","pow"),a=Er(t,"exp","pow");[n,a]=fr(n,a);const r={a:n,b:a};return vr.runKernel(Zt,r)}}),Vs=Ar({sub_:function(e,t){let n=Er(e,"a","sub"),a=Er(t,"b","sub");[n,a]=fr(n,a);const r={a:n,b:a};return vr.runKernel(jn,r)}});class Gs extends zs{static get className(){return"Adam"}constructor(e,t,n,a=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Pr((()=>{this.accBeta1=As(t).variable(),this.accBeta2=As(n).variable()})),null==a&&(this.epsilon=vr.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Pr((()=>{const n=Vs(1,this.accBeta1),a=Vs(1,this.accBeta2);t.forEach(((t,r)=>{const s=vr.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:Pr((()=>Es(s).variable(i)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:`${t}/v`,variable:Pr((()=>Es(s).variable(i)))});const o=Array.isArray(e)?e[r].tensor:e[t];if(null==o)return;const u=this.accumulatedFirstMoment[r].variable,l=this.accumulatedSecondMoment[r].variable,c=Ss($s(u,this.beta1),$s(o,1-this.beta1)),h=Ss($s(l,this.beta2),$s(_s(o),1-this.beta2)),d=Cs(c,n),p=Cs(h,a);u.assign(c),l.assign(h);const f=Ss($s(Cs(d,Ss(Ts(p),this.epsilon)),-this.learningRate),s);s.assign(f)})),this.accBeta1.assign($s(this.accBeta1,this.beta1)),this.accBeta2.assign($s(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Wr(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&Wr(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Pr((()=>{this.accBeta1.assign(Us(this.beta1,this.iterations_+1)),this.accBeta2.assign(Us(this.beta2,this.iterations_+1))}));const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}const Hs=Ar({abs_:function(e){const t=Er(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return vr.runKernel(Ne,e)}{const e={x:t};return vr.runKernel(Z,e)}}});function js(e,t){const n=e.length,a=[];for(let r=0;r<n;r++){const s=n-1-r,i=e[s]||1;(t[t.length-1-r]||1)>1&&1===i&&a.unshift(s)}return a}function qs(e,t){const n=[];for(let a=0;a<t.length;a++){const r=e[e.length-a-1],s=t.length-a-1,i=t[s];(null==r||1===r&&i>1)&&n.unshift(s)}return n}function Ks(e,t){const n=Math.max(e.length,t.length),a=new Array(n);for(let r=0;r<n;r++){let s=e[e.length-r-1];null==s&&(s=1);let i=t[t.length-r-1];if(null==i&&(i=1),1===s)a[n-r-1]=i;else if(1===i)a[n-r-1]=s;else{if(s!==i)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);a[n-r-1]=s}}return a}const Xs=Ar({maximum_:function(e,t){let n=Er(e,"a","maximum"),a=Er(t,"b","maximum");[n,a]=fr(n,a),"bool"===n.dtype&&(n=vs(n,"int32"),a=vs(a,"int32")),Ks(n.shape,a.shape);const r={a:n,b:a};return vr.runKernel(Et,r)}});class Ys extends zs{static get className(){return"Adamax"}constructor(e,t,n,a=null,r=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Pr((()=>{this.iteration=As(0).variable(),this.accBeta1=As(t).variable()})),null==a&&(this.epsilon=vr.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Pr((()=>{const n=Vs(1,this.accBeta1),a=Cs(-this.learningRate,Ss($s(this.iteration,this.decay),1));t.forEach(((t,r)=>{const s=vr.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:Es(s).variable(i)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:`${t}/v`,variable:Es(s).variable(i)});const o=Array.isArray(e)?e[r].tensor:e[t];if(null==o)return;const u=this.accumulatedFirstMoment[r].variable,l=this.accumulatedWeightedInfNorm[r].variable,c=Ss($s(u,this.beta1),$s(o,1-this.beta1)),h=$s(l,this.beta2),d=Hs(o),p=Xs(h,d);u.assign(c),l.assign(p);const f=Ss($s(Cs(a,n),Cs(c,Ss(p,this.epsilon))),s);s.assign(f)})),this.iteration.assign(Ss(this.iteration,1)),this.accBeta1.assign($s(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Wr(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&Wr(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class Js extends zs{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const r=vr.registeredVariables[t];Pr((()=>{const e=Ss($s(this.c,a),r);r.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Br(As(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class Zs extends Js{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=As(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=vr.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:Pr((()=>Es(a).variable(e)))}}const r=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&Pr((()=>{let e;const t=Ss($s(this.m,r),s);e=this.useNesterov?Ss($s(this.c,Ss(s,$s(t,this.m))),a):Ss($s(this.c,t),a),r.assign(t),a.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Wr(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class Qs extends zs{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,a=null,r=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=a,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==a&&(this.epsilon=vr.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=vr.registeredVariables[t],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:Pr((()=>Es(a).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:Pr((()=>Es(a).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:Pr((()=>Es(a).variable(r)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Pr((()=>{const e=Ss($s(i,this.decay),$s(_s(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,r=Ss($s(t,this.decay),$s(s,1-this.decay)),u=Cs($s(s,this.learningRate),Ts(Vs(e,Ss(_s(r),this.epsilon)))),l=Ss($s(o,this.momentum),u);i.assign(e),t.assign(r),o.assign(l);const c=Vs(a,l);a.assign(c)}else{const e=Ss($s(i,this.decay),$s(_s(s),1-this.decay)),t=Ss($s(o,this.momentum),Cs($s(s,this.learningRate),Ts(Ss(e,this.epsilon))));i.assign(e),o.assign(t);const n=Vs(a,t);a.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Wr(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Wr(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&Wr(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}const ei=[Ps,Bs,Gs,Ys,Zs,Qs,Js];function ti(e){return new Promise((e=>setTimeout(e))).then(e)}class ni{constructor(e){if(!q().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(ni.URL_SCHEME)&&(e=e.slice(ni.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=Or.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=qr(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),a=window.URL.createObjectURL(new Blob([JSON.stringify(t)],{type:"application/json"})),r=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(r.download=this.modelJsonFileName,r.href=a,await ti((()=>r.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await ti((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Kr(e)}}}}function ai(e,t,n,a){!function(e){p(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){p(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),p(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),p(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,a=null==a?1:a);let r=0;return Promise.all(e.map((s=>(s.then((s=>{const i=n+ ++r/e.length*(a-n);return t(i),s})),s))))}async function ri(e,t){null==t&&(t={});const n=null==t.fetchFunc?q().platform.fetch:t.fetchFunc,a=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),r=(null==t.onProgress?await Promise.all(a):await ai(a,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(r):await ai(r,t.onProgress,.5,1)}ni.URL_SCHEME="downloads://",Yr.registerSaveRouter((e=>q().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ni.URL_SCHEME)?function(e="model"){return new ni(e)}(e.slice(ni.URL_SCHEME.length)):null));class si{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(p("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=q().platform.fetch,p(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&p(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=qr(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=Or.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:Kr(e),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,a=t.weightsManifest;if(null==n&&null==a)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){return this.loadOptions.streamWeights?this.loadStream():async function(e,t){let n,a;return null!=e.weightsManifest&&([n,a]=await t(e.weightsManifest)),function(e,t,n){const a={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(a.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");a.weightSpecs=t,a.weightData=n}return null!=e.signature&&(a.signature=e.signature),null!=e.userDefinedMetadata&&(a.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(a.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(a.initializerSignature=e.initializerSignature),a}(e,n,a)}(await this.loadModelJSON(),(e=>this.loadWeights(e)))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=Xr(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:()=>function(e,t){var n;const a=null==t.fetchFunc?q().platform.fetch:t.fetchFunc;let r,s=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{for(var i;s<e.length;){if(!r){const n=(await a(e[s],t.requestInit,{isBinary:!0})).body;r=n.getReader()}const{done:o,value:u}=await r.read();if(!o)return void n.enqueue(u);s++,r=void 0,null===(i=t.onProgress)||void 0===i||i.call(t,s/e.length)}n.close()}})}(t,this.loadOptions)})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,a]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),r=this.weightPathPrefix||n,s=[],i=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):s.push(r+e+a);return this.weightUrlConverter&&s.push(...await Promise.all(i)),s}async loadWeights(e){const t=await this.getWeightUrls(e);return[Xr(e),await ri(t,this.loadOptions)]}}function ii(e){return null!=e.match(si.URL_SCHEME_REGEX)}si.URL_SCHEME_REGEX=/^https?:\/\//;const oi=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>ii(e))):ii(e),n)return function(e,t){return new si(e,t)}(e,t)}return null};function ui(e,t){const n=e.shape.length,a=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(a<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${a}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[a-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[a-1]} vs. ${n}`);if(0===g(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const r=t.shape,s=r[r.length-1];let i=1;for(let e=0;e<r.length-1;++e)i*=r[e];const o=e.shape,u=r.slice();u.pop();let l=1;for(let e=s;e<n;++e)l*=o[e],u.push(o[e]);const c=[...D(e.shape).map((e=>e/l)),1].slice(0,s);return[u,i,l,c]}function li(e,t,n){const a=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${a}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(s+` update.rank < ${r}. `);if(e.length<a+(n.rank-r))throw new Error(s+` Output shape length < ${a+(n.rank-r)}`);if(n.rank!==r+e.length-a)throw new Error(s+" update.rank != "+(r+e.length-a));for(let e=0;e<r;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-r;++t)if(n.shape[t+r]!==e[t+a])throw new Error(s+` updates.shape[${t+r}] (${n.shape[t+r]}) != shape[${t+r}] (${e[t+r]})`)}function ci(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}li(n,t,e)}function hi(e,t,n){const a=t.shape.length,r=a>1?t.shape[a-1]:1,s=n.length;let i=1;for(let e=r;e<s;++e)i*=n[e];const o=r<1?1:r;return{sliceRank:r,numUpdates:g(t.shape)/o,sliceSize:i,strides:[...D(n.slice(0,r)),1],outputSize:g(n)}}Yr.registerSaveRouter(oi),Yr.registerLoadRouter(oi);const di=-2,pi=-1;function fi(e,t,n){const a=e.shape.length;p(a===t.length,(()=>`Error in slice${a}D: Length of begin ${t} must match the rank of the array (${a}).`)),p(a===n.length,(()=>`Error in slice${a}D: Length of size ${n} must match the rank of the array (${a}).`));for(let r=0;r<a;++r)p(t[r]+n[r]<=e.shape[r],(()=>`Error in slice${a}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`))}function mi(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function gi(e,t,n){const a=[];for(let r=0;r<e.length;r++)a[r]=Math.ceil((t[r]-e[r])/n[r]);return a}function bi(e,t,n,a){const r=[...e];for(let e=r.length;e<a.length;e++)r.push(1);for(let e=0;e<n;e++)0===e?r[t]=1:(r.splice(t,0,1),r.pop());return r}function yi(e,t,n){return n<=e?n:n-(t-1)}function xi(e,t){const n=[];for(let a=0;a<e;a++)n.push(t+a);return n}function wi(e,t,n,a,r,s,i,o,u){const l=e.length;let c=new Array(l),h=new Array(l),d=new Array(l);if(t.length&&n>0){const u=t[0],l=n+1;c=ki(i,u,l,a,e),h=vi(o,u,l,r,e),d=bi(s,u,l,e)}else for(let t=0;t<l;t++)c[t]=Si(i,a,s,e,t,u),h[t]=Ni(o,r,s,e,t,u),d[t]=Ii(s,t,u);return{begin:c,end:h,strides:d}}function ki(e,t,n,a,r){const s=[...r],i=xi(n,t);for(let r=0;r<s.length;r++)if(i.indexOf(r)>-1)s[r]=0;else{const i=yi(t,n,r);let o=a[i];e&1<<i&&(o=0),s[r]=o}return s}function vi(e,t,n,a,r){const s=[...r],i=xi(n,t);for(let r=0;r<s.length;r++)if(i.indexOf(r)>-1)s[r]=Number.MAX_SAFE_INTEGER;else{const i=yi(t,n,r);let o=a[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),s[r]=o}for(let e=0;e<s.length;e++){const t=r[e];s[e]<0&&(s[e]+=t),s[e]=c(0,s[e],r[e])}return s}function Ii(e,t,n){let a=e[t];return(n&1<<t||null==a)&&(a=1),a}function Si(e,t,n,a,r,s){let i=t[r];const o=n[r]||1;(e&1<<r||s&1<<r||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=a[r];return i<0&&(i+=u),i=c(0,i,u-1),i}function Ni(e,t,n,a,r,s){let i=t[r];const o=n[r]||1;(e&1<<r||s&1<<r||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=a[r];return i<0&&(i+=u),i=o>0?c(0,i,u):c(-1,i,u-1),i}function Ci(e,t,n){let a=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){a=e;break}for(let r=a+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function $i(e,t){let n=e.length>0?e[e.length-1]:1;for(let a=0;a<e.length-1;a++)n+=e[a]*t[a];return n}function Ti(e,t,n){let a;const r=e.shape.length;let s;return a="number"==typeof t?[t,...new Array(r-1).fill(0)]:t.length<r?t.concat(new Array(r-t.length).fill(0)):t.slice(),a.forEach((e=>{p(-1!==e,(()=>"slice() does not support negative begin indexing."))})),s=null==n?new Array(r).fill(-1):"number"==typeof n?[n,...new Array(r-1).fill(-1)]:n.length<r?n.concat(new Array(r-n.length).fill(-1)):n,s=s.map(((t,n)=>t>=0?t:(p(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-a[n]))),[a,s]}function _i(e,t,n,a,r,s,i,o,u){let l;if(null==a?(l=new Array(t.length),l.fill(1)):l=a,null!=i&&i&i-1)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:r,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};for(let e=0;e<h.dims;e++)c&&1<<e&o&&h.numAddAxisAfterEllipsis++,1<<e&i&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let a=0;a<e.dims;a++)if(1<<a&e.ellipsisMask){const r=Math.min(t.dims-(e.dims-a)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=a}else if(1<<a&e.newAxisMask)t.finalShapeGatherIndices.push(di),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[a]),null!=e.end&&(t.end[n]=e.end[a]),t.strides[n]=e.strides[a],e.beginMask&1<<a&&(t.beginMask|=1<<n),e.endMask&1<<a&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<a?(t.finalShapeGatherIndices.push(pi),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(a)),t.inputShapeGatherIndicesSparse[n]=a,n++}}(h,d);let p=!0,f=!0,m=!0;const g=[],b=[];for(let t=0;t<e.length;++t){if(0===d.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(d.shrinkAxisMask&1<<t),a=e[t];if(-1===a){g.push(n?1:-1);continue}const r=[d.beginMask&1<<t,d.endMask&1<<t],s=[d.strides[t]>0?0:-1,d.strides[t]>0?a:a-1];if(n&&d.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[t];const i=!!(d.beginMask&1<<t&&d.endMask&1<<t);if(d.beginValid&&d.endValid){if(n){const e=d.begin[t]<0?a+d.begin[t]:d.begin[t];if(d.begin[t]=e,d.end[t]=d.begin[t]+1,e<0||e>=a)throw Error(`slice index ${d.begin[t]} of dimension ${t} out of bounds.`)}else d.begin[t]=Ei(d.begin[t],0,d.strides[t],a,r,s),d.end[t]=Ei(d.end[t],1,d.strides[t],a,r,s);const e=1===d.strides[t]&&0===d.begin[t]&&d.end[t]===a;p=p&&e,f=f&&(0===t&&1===d.strides[t]||e)}else p=p&&1===d.strides[t]&&i,f=f&&(0===t&&1===d.strides[t]||i);let o,u=!1;if(d.beginValid&&d.endValid?(o=d.end[t]-d.begin[t],u=!0):n?(o=1,u=!0):i&&a>=0&&(o=d.strides[t]<0?-a:a,u=!0),u){let e;e=0===o||o<0!=d.strides[t]<0?0:Math.trunc(o/d.strides[t])+(o%d.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<d.finalShapeGatherIndices.length;++e){const t=d.finalShapeGatherIndices[e];t>=0?b.push(g[t]):t===di&&b.push(1)}return{finalShapeSparse:b.filter(((e,t)=>d.finalShapeGatherIndices[t]!==di)),finalShape:b,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function Ei(e,t,n,a,r,s){if(r[t])return n>0?s[t]:s[t+1&1];{const t=e<0?a+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}const Ri=Ar({all_:function(e,t=null,n=!1){const a={x:Er(e,"x","all","bool")},r={axis:t,keepDims:n};return vr.runKernel(ae,a,r)}}),Ai=Ar({any_:function(e,t=null,n=!1){const a={x:Er(e,"x","any","bool")},r={axis:t,keepDims:n};return vr.runKernel(re,a,r)}}),Fi=Ar({argMax_:function(e,t=0){const n={x:Er(e,"x","argMax")},a={axis:t};return vr.runKernel(se,n,a)}});function Di(e,t,n,a,r="NHWC",s){return Li(e,[...t,e[3]],n,s,a,null,null,qi(r))}function Mi(e,t,n,a,r,s,i="channelsLast"){const[o,u]=Wi(t);let l;if("channelsLast"===i)l=[o,u,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);l=[o,u,e[1],e[1]]}return Li(e,l,n,a,r,s,!1,i)}function Oi(e,t,n,a,r,s,i="NDHWC"){const[o,u,l]=Bi(t);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,u,l,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,u,l,e[1],e[1]]}return zi(e,c,n,a,r,!1,h,s)}function Li(e,t,n,a,r,s,i=!1,o="channelsLast"){let[u,l,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[u,l,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,h,l,c]=e}const[d,p,,f]=t,[m,g]=Wi(n),[b,y]=Wi(a),x=Ui(d,b),w=Ui(p,y),{padInfo:k,outHeight:v,outWidth:I}=function(e,t,n,a,r,s,i,o,u){let l,c,h;if("number"==typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const r=function(e,t,n,a,r){null==a&&(a=Pi(e,t,n));const s=e[1];return[Vi((e[0]-t+2*a)/n+1,r),Vi((s-t+2*a)/n+1,r)]}([t,n],s,a,e,o);c=r[0],h=r[1]}else if("same"===e){c=Math.ceil(t/a),h=Math.ceil(n/r);const e=Math.max(0,(c-1)*a+s-t),o=Math.max(0,(h-1)*r+i-n),u=Math.floor(e/2),d=e-u,p=Math.floor(o/2);l={top:u,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-s+1)/a),h=Math.ceil((n-i+1)/r);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===u?e[1][0]:e[2][0],p="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],m="channelsLast"===u?e[2][1]:e[3][1];l={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},c=Vi((t-s+d+p)/a+1,o),h=Vi((n-i+f+m)/r+1,o)}}return{padInfo:l,outHeight:c,outWidth:h}}(r,l,c,m,g,x,w,s,o),S=i?f*h:f;let N;return"channelsFirst"===o?N=[u,S,v,I]:"channelsLast"===o&&(N=[u,v,I,S]),{batchSize:u,dataFormat:o,inHeight:l,inWidth:c,inChannels:h,outHeight:v,outWidth:I,outChannels:S,padInfo:k,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:w,dilationHeight:b,dilationWidth:y,inShape:e,outShape:N,filterShape:t}}function zi(e,t,n,a,r,s=!1,i="channelsLast",o){let[u,l,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[u,l,c,h,d]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,d,l,c,h]=e}const[p,f,m,,g]=t,[b,y,x]=Bi(n),[w,k,v]=Bi(a),I=Ui(p,w),S=Ui(f,k),N=Ui(m,v),{padInfo:C,outDepth:$,outHeight:T,outWidth:_}=function(e,t,n,a,r,s,i,o,u,l,c){let h,d,p,f;if("valid"===e&&(e=0),"number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const m=function(e,t,n,a,r,s){null==r&&(r=Pi(e,t[0],a[0]));const i=[0,0,0,1];for(let n=0;n<3;n++)e[n]+2*r>=t[n]&&(i[n]=Vi((e[n]-t[n]+2*r)/a[n]+1,s));return i}([t,n,a,1],[o,u,l],0,[r,s,i],e,c);d=m[0],p=m[1],f=m[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{d=Math.ceil(t/r),p=Math.ceil(n/s),f=Math.ceil(a/i);const e=(d-1)*r+o-t,c=(p-1)*s+u-n,m=(f-1)*i+l-a,g=Math.floor(e/2),b=e-g,y=Math.floor(c/2),x=c-y,w=Math.floor(m/2);h={top:y,bottom:x,left:w,right:m-w,front:g,back:b,type:"SAME"}}}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(r,l,c,h,b,y,x,I,S,N,o),E=s?g*d:g;let R;return"channelsFirst"===i?R=[u,E,$,T,_]:"channelsLast"===i&&(R=[u,$,T,_,E]),{batchSize:u,dataFormat:i,inDepth:l,inHeight:c,inWidth:h,inChannels:d,outDepth:$,outHeight:T,outWidth:_,outChannels:E,padInfo:C,strideDepth:b,strideHeight:y,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:S,effectiveFilterWidth:N,dilationDepth:w,dilationHeight:k,dilationWidth:v,inShape:e,outShape:R,filterShape:t}}function Pi(e,t,n,a=1){const r=Ui(t,a);return Math.floor((e[0]*(n-1)-n+r)/2)}function Wi(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Bi(e){return"number"==typeof e?[e,e,e]:e}function Ui(e,t){return t<=1?e:e+(e-1)*(t-1)}function Vi(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Gi(e){const[t,n,a]=Wi(e);return 1===t&&1===n&&1===a}function Hi(e,t){return Gi(e)||Gi(t)}function ji(e){return Wi(e).every((e=>e>0))}function qi(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function Ki(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)p(y(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{p(y(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}const Xi=Ar({reshape_:function(e,t){const n={x:Er(e,"x","reshape","string_or_numeric")},a={shape:t};return vr.runKernel(ln,n,a)}}),Yi=Ar({avgPool_:function(e,t,n,a,r){const s=Er(e,"x","avgPool","float32");p(Hi(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=s,o=!1;3===s.rank&&(o=!0,i=Xi(s,[1,s.shape[0],s.shape[1],s.shape[2]])),p(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),Ki("avgPool",a,r);const u={x:i},l={filterSize:t,strides:n,pad:a,dimRoundingMode:r};let c=vr.runKernel(de,u,l);return c=vs(c,s.dtype),o?Xi(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Ji=Ar({avgPool3d_:function(e,t,n,a,r,s="NDHWC"){const i=Er(e,"x","avgPool3d","float32");let o=i,u=!1;4===i.rank&&(u=!0,o=Xi(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),p(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),p("NDHWC"===s,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),p("number"==typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`)),Ki("avgPool3d",a,r);const l={x:o},c={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:s};let h=vr.runKernel(fe,l,c);return h=vs(h,o.dtype),u?Xi(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Zi=Ar({batchNorm_:function(e,t,n,a,r,s){null==s&&(s=.001);const i=Er(e,"x","batchNorm"),o=Er(t,"mean","batchNorm"),u=Er(n,"variance","batchNorm");let l,c;null!=r&&(l=Er(r,"scale","batchNorm")),null!=a&&(c=Er(a,"offset","batchNorm")),p(o.rank===u.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),p(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),p(null==l||o.rank===l.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h={x:function(e){let t;return t=0===e.rank||1===e.rank?Xi(e,[1,1,1,e.size]):2===e.rank?Xi(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Xi(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),scale:l,offset:c,mean:o,variance:u},d={varianceEpsilon:s},f=vr.runKernel(ot,h,d);return Xi(f,i.shape)}}),Qi=Ar({batchNorm2d_:function(e,t,n,a,r,s){const i=Er(e,"x","batchNorm"),o=Er(t,"mean","batchNorm"),u=Er(n,"variance","batchNorm");let l,c;return null!=r&&(l=Er(r,"scale","batchNorm")),null!=a&&(c=Er(a,"offset","batchNorm")),p(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),p(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),p(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=l&&p(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=c&&p(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),Zi(i,o,u,c,l,s)}}),eo=Ar({batchNorm3d_:function(e,t,n,a,r,s){const i=Er(e,"x","batchNorm"),o=Er(t,"mean","batchNorm"),u=Er(n,"variance","batchNorm");let l,c;return null!=r&&(l=Er(r,"scale","batchNorm")),null!=a&&(c=Er(a,"offset","batchNorm")),p(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),p(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),p(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=l&&p(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=c&&p(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),Zi(i,o,u,c,l,s)}}),to=Ar({batchNorm4d_:function(e,t,n,a,r,s){const i=Er(e,"x","batchNorm"),o=Er(t,"mean","batchNorm"),u=Er(n,"variance","batchNorm");let l,c;return null!=r&&(l=Er(r,"scale","batchNorm")),null!=a&&(c=Er(a,"offset","batchNorm")),p(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),p(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),p(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=l&&p(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=c&&p(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),Zi(i,o,u,c,l,s)}}),no=Ar({broadcastTo_:function(e,t){let n=Er(e,"broadcastTo","x");const a=n.shape;if(W(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Xi(n,e)}const r=n.shape,s=Array.from(t);for(let e=t.length-1;e>=0;e--)if(r[e]===t[e])s[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${t}].`);if(0===s.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return Is(n);const i={x:n},o={reps:s};return vr.runKernel(Xn,i,o)}}),ao=Ar({clipByValue_:function(e,t,n){const a=Er(e,"x","clipByValue");if(p(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return Ws(a.shape,t,a.dtype);const r={x:a},s={clipValueMin:t,clipValueMax:n};return vr.runKernel(Ie,r,s)}}),ro=Ar({concat_:function(e,t=0){p(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Rr(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Is(n[0]);const a=n,r={axis:t};return vr.runKernel(Ce,a,r)}}),so=Ar({concat1d_:function(e){return ro(e,0)}}),io=Ar({concat2d_:function(e,t){return ro(e,t)}}),oo=Ar({concat3d_:function(e,t){return ro(e,t)}}),uo=Ar({concat4d_:function(e,t){return ro(e,t)}}),lo=Ar({conv2d_:function(e,t,n,a,r="NHWC",s=[1,1],i){const o=Er(e,"x","conv2d","float32"),u=Er(t,"filter","conv2d","float32");let l=o,c=!1;3===o.rank&&(c=!0,l=Xi(o,[1,o.shape[0],o.shape[1],o.shape[2]])),p(4===l.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`)),p(4===u.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`)),Ki("conv2d",a,i);const h="NHWC"===r?l.shape[3]:l.shape[1];p(h===u.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${u.shape[2]}.`)),p(Hi(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),p(ji(s),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),p(ji(n),(()=>"Error in conv2D: Strides should be larger than 0."));const d={x:l,filter:u},f={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:i},m=vr.runKernel($e,d,f);return c?Xi(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),co=Ar({conv1d_:function(e,t,n,a,r="NWC",s=1,i){const o=Er(e,"x","conv1d"),u=Er(t,"filter","conv1d");let l=o,c=!1;2===o.rank&&(c=!0,l=Xi(o,[1,o.shape[0],o.shape[1]])),p(3===l.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`)),p(3===u.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`)),Ki("conv1d",a,i),p(l.shape[2]===u.shape[1],(()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`)),p(Hi(n,s),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`)),p(ji(s),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),p(ji(n),(()=>"Error in conv1D: Stride should be larger than 0.")),p("NWC"===r,(()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`));const h=Xi(u,[1,u.shape[0],u.shape[1],u.shape[2]]),d=Xi(l,[l.shape[0],1,l.shape[1],l.shape[2]]),f=lo(d,h,[1,n],a,"NHWC",[1,s],i);return Xi(f,c?[f.shape[2],f.shape[3]]:[f.shape[0],f.shape[2],f.shape[3]])}}),ho=Ar({conv2DBackpropInput_:function(e,t,n,a,r,s="NHWC",i){p(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,u=t,l=!1;3===t.rank&&(l=!0,u=Xi(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),p(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),p(4===u.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`)),p(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===s?o[3]:o[1],h="NHWC"===s?u.shape[3]:u.shape[1];p(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),p(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),Ki("conv2dDerInput",r,i);const d={dy:u,filter:n},f={strides:a,pad:r,dataFormat:s,dimRoundingMode:i,inputShape:o},m=vr.runKernel(_e,d,f);return l?Xi(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),po=Ar({conv2dTranspose_:function(e,t,n,a,r,s){const i=Er(e,"x","conv2dTranspose"),o=Er(t,"filter","conv2dTranspose");return ho(n,i,o,a,r,"NHWC",s)}}),fo=Ar({conv3d_:function(e,t,n,a,r="NDHWC",s=[1,1,1]){const i=Er(e,"x","conv3d"),o=Er(t,"filter","conv3d");let u=i,l=!1;4===i.rank&&(l=!0,u=Xi(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),p(5===u.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`)),p(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),p(u.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),p(Hi(n,s),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),p("NDHWC"===r,(()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`)),p(ji(s),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),p(ji(n),(()=>"Error in conv3D: Strides should be larger than 0."));const c={x:u,filter:o},h={strides:n,pad:a,dataFormat:r,dilations:s},d=vr.runKernel(Ee,c,h);return l?Xi(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),mo=Ar({conv3DBackpropInput_:function(e,t,n,a,r){p(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let s=e,i=t,o=!1;4===t.rank&&(o=!0,i=Xi(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);const u=s[4],l=i.shape[4];p(5===s.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`)),p(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),p(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),p(u===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`)),p(l===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},h={pad:r,strides:a,inputShape:s},d=vr.runKernel(Ae,c,h);return o?Xi(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),go=Ar({conv3dTranspose_:function(e,t,n,a,r){const s=Er(e,"x","conv3dTranspose"),i=Er(t,"filter","conv3dTranspose");return mo(n,s,i,a,r)}}),bo=Ar({denseBincount_:function(e,t,n,a=!1){const r=Er(e,"x","denseBincount"),s=Er(t,"weights","denseBincount");p("int32"===r.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`)),p(r.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`)),p(n>=0,(()=>`size must be non-negative, but got ${n}.`)),p(s.size===r.size||0===s.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${s.shape}.`));const i={x:r,weights:s},o={size:n,binaryOutput:a};return vr.runKernel(ze,i,o)}}),yo=Ar({depthwiseConv2d_:function(e,t,n,a,r="NHWC",s=[1,1],i){const o=Er(e,"x","depthwiseConv2d","float32"),u=Er(t,"filter","depthwiseConv2d","float32");let l=o,c=!1;3===o.rank&&(c=!0,l=Xi(o,[1,o.shape[0],o.shape[1],o.shape[2]])),p(4===l.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`)),p(4===u.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`));const h="NHWC"===r?l.shape[3]:l.shape[1];p(h===u.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${u.shape[2]}.`)),Ki("depthwiseConv2d",a,i);const d={x:l,filter:u},f={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:i},m=vr.runKernel(We,d,f);return c?Xi(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),xo=Ar({elu_:function(e){const t={x:Er(e,"x","elu","float32")};return vr.runKernel(Xe,t)}}),wo=Ar({equal_:function(e,t){let n=Er(e,"a","equal","string_or_numeric"),a=Er(t,"b","equal","string_or_numeric");[n,a]=fr(n,a),Ks(n.shape,a.shape);const r={a:n,b:a};return vr.runKernel(Ze,r)}}),ko=Ar({erf_:function(e){let t=Er(e,"x","erf");p("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=vs(t,"float32"));const n={x:t};return vr.runKernel(Je,n)}}),vo=Ar({exp_:function(e){const t={x:Er(e,"x","exp")};return vr.runKernel(Qe,t)}}),Io=Ar({expandDims_:function(e,t=0){const n=Er(e,"x","expandDims","string_or_numeric");p(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const a={input:n},r={dim:t};return vr.runKernel(et,a,r)}}),So=Ar({tile_:function(e,t){const n=Er(e,"x","tile","string_or_numeric");p(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const a={x:n},r={reps:t};return vr.runKernel(Xn,a,r)}}),No=Ar({eye_:function(e,t,n,a="float32"){null==t&&(t=e);const r=ks([e,t],a),s=e<=t?e:t;for(let e=0;e<s;++e)r.set(1,e,e);const i=Xi(r.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return So(Io(i,0),[n[0],1,1]);if(2===n.length)return So(Io(Io(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return So(Io(Io(Io(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),Co=Ar({floor_:function(e){const t={x:Er(e,"x","floor","float32")};return vr.runKernel(st,t)}}),$o=Ar({gather_:function(e,t,n=0,a=0){const r={x:Er(e,"x","gather"),indices:Er(t,"indices","gather","int32")},s={axis:n,batchDims:a};return vr.runKernel(ut,r,s)}}),To=Ar({greater_:function(e,t){let n=Er(e,"a","greater","string_or_numeric"),a=Er(t,"b","greater","string_or_numeric");[n,a]=fr(n,a),Ks(n.shape,a.shape);const r={a:n,b:a};return vr.runKernel(ct,r)}}),_o=Ar({greaterEqual_:function(e,t){let n=Er(e,"a","greaterEqual","string_or_numeric"),a=Er(t,"b","greaterEqual","string_or_numeric");[n,a]=fr(n,a),Ks(n.shape,a.shape);const r={a:n,b:a};return vr.runKernel(ht,r)}}),Eo=Ar({leakyRelu_:function(e,t=.2){const n={x:Er(e,"x","leakyRelu")},a={alpha:t};return vr.runKernel(yt,n,a)}}),Ro=Ar({log_:function(e){const t={x:Er(e,"x","log","float32")};return vr.runKernel(vt,t)}}),Ao=Ar({log1p_:function(e){const t={x:Er(e,"x","log1p")};return vr.runKernel(It,t)}}),Fo=Ar({max_:function(e,t=null,n=!1){const a={x:Er(e,"x","max")},r={reductionIndices:t,keepDims:n};return vr.runKernel(_t,a,r)}}),Do=Ar({sum_:function(e,t=null,n=!1){let a=Er(e,"x","sum");"bool"===a.dtype&&(a=vs(a,"int32"));const r={x:a},s={axis:t,keepDims:n};return vr.runKernel(En,r,s)}}),Mo=Ar({logSoftmax_:function(e,t=-1){const n=Er(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const a=Rs(((e,n)=>{const a=Fo(e,t,!0),r=Vs(e,a),s=Vs(vs(r,"float32"),Ro(Do(vo(r),t,!0)));return n([s]),{value:s,gradFunc:(e,n)=>{const[a]=n,r=vo(a);return Vs(e,$s(Do(e,t,!0),r))}}}));return a(n)}});function Oo(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Lo(e,t,n){const a=e.length+t.length,r=[];let s=0,i=0;for(let o=0;o<a;o++)-1===n.indexOf(o)?r.push(e[s++]):r.push(t[i++]);return r}function zo(e,t){const n=[],a=e.length;for(let r=0;r<a;r++)-1===t.indexOf(r)&&n.push(e[r]);return[n,t.map((t=>e[t]))]}function Po(e,t){return Lo(e,t.map((e=>1)),t)}function Wo(e,t,n){p(Oo(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Bo(e,t){if(Oo(e,t))return null;const n=[];for(let a=0;a<t;++a)-1===e.indexOf(a)&&n.push(a);return e.forEach((e=>n.push(e))),n}function Uo(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Vo(e,t){const n=[];for(let a=t-e;a<t;++a)n.push(a);return n}const Go=Ar({logSumExp_:function(e,t=null,n=!1){const a=Er(e,"x","logSumExp"),r=I(t,a.shape),s=Fo(a,r,!0),i=Vs(a,s),o=vo(i),u=Do(o,r),l=Ro(u),c=Ss(Xi(s,l.shape),l);if(n){const e=Po(c.shape,r);return Xi(c,e)}return c}}),Ho=Ar({logicalAnd_:function(e,t){const n=Er(e,"a","logicalAnd","bool"),a=Er(t,"b","logicalAnd","bool");Ks(n.shape,a.shape);const r={a:n,b:a};return vr.runKernel(St,r)}}),jo=Ar({matMul_:function(e,t,n=!1,a=!1){let r=Er(e,"a","matMul"),s=Er(t,"b","matMul");[r,s]=fr(r,s);const i={a:r,b:s},o={transposeA:n,transposeB:a};return vr.runKernel(ge,i,o)}}),qo=Ar({maxPool_:function(e,t,n,a,r){const s=Er(e,"x","maxPool");let i=s,o=!1;3===s.rank&&(o=!0,i=Xi(s,[1,s.shape[0],s.shape[1],s.shape[2]])),p(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),p(Hi(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),Ki("maxPool",a,r);const u={x:i},l={filterSize:t,strides:n,pad:a,dimRoundingMode:r},c=vr.runKernel(Rt,u,l);return o?Xi(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Ko=Ar({maxPool3d_:function(e,t=[1,1,1],n,a,r,s="NDHWC"){const i=Er(e,"x","maxPool3d");let o=i,u=!1;4===i.rank&&(u=!0,o=Xi(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),p(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),p("NDHWC"===s,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),Ki("maxPool3d",a,r);const l={x:o},c={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:s},h=vr.runKernel(Ft,l,c);return u?Xi(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Xo=Ar({mean_:function(e,t=null,n=!1){const a={x:Er(e,"x","mean")},r={axis:t,keepDims:n};return vr.runKernel(Ot,a,r)}}),Yo=Ar({min_:function(e,t=null,n=!1){const a={x:Er(e,"x","min")},r={axis:t,keepDims:n};return vr.runKernel(Lt,a,r)}}),Jo=Ar({minimum_:function(e,t){let n=Er(e,"a","minimum"),a=Er(t,"b","minimum");[n,a]=fr(n,a),"bool"===n.dtype&&(n=vs(n,"int32"),a=vs(a,"int32")),Ks(n.shape,a.shape);const r={a:n,b:a};return vr.runKernel(zt,r)}}),Zo=Ar({moments_:function(e,t=null,n=!1){const a=I(t,(e=Er(e,"x","moments")).shape),r=Xo(e,a,n);let s=r.shape;n||(s=Po(r.shape,a));const i=_s(Vs(vs(e,"float32"),Xi(r,s)));return{mean:r,variance:Xo(i,a,n)}}}),Qo=Ar({neg_:function(e){const t={x:Er(e,"x","neg")};return vr.runKernel(Vt,t)}}),eu=Ar({notEqual_:function(e,t){let n=Er(e,"a","notEqual","string_or_numeric"),a=Er(t,"b","notEqual","string_or_numeric");[n,a]=fr(n,a),Ks(n.shape,a.shape);const r={a:n,b:a};return vr.runKernel(Gt,r)}}),tu=Ar({oneHot_:function(e,t,n=1,a=0,r="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const s={indices:Er(e,"indices","oneHot","int32")},i={dtype:r,depth:t,onValue:n,offValue:a};return vr.runKernel(Xt,s,i)}});function nu(e,t="float32"){if(W(e),"complex64"===t){const t=nu(e,"float32"),n=nu(e,"float32");return Fr(t,n)}const n=z(g(e),t);return vr.makeTensor(n,e,t)}function au(e,t="float32"){if(W(e),"complex64"===t){const t=au(e,"float32"),n=nu(e,"float32");return Fr(t,n)}const n=L(g(e),t);return vr.makeTensor(n,e,t)}const ru=Ar({onesLike_:function(e){const t={x:Er(e,"x","onesLike")};return vr.runKernel(Kt,t)}}),su=Ar({pad_:function(e,t,n=0){const a=Er(e,"x","pad");if(0===a.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:t,constantValue:n},s={x:a};return vr.runKernel(Jt,s,r)}}),iu=Ar({prelu_:function(e,t){const n={x:Er(e,"x","prelu"),alpha:Er(t,"alpha","prelu")};return vr.runKernel(Qt,n)}});var ou=n(391);class uu{constructor(e,t,n,a,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=r||Math.random();this.random=ou.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let a,r,s;do{a=2*this.random()-1,r=2*this.random()-1,s=a*a+r*r}while(s>=1||0===s);const i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*a*i,t=this.mean+this.stdDev*r*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class lu{constructor(e=0,t=1,n,a){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==a&&(a=Math.random()),"number"==typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=ou.alea(a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const cu=Ar({randomNormal_:function(e,t=0,n=1,a,r){if(W(e),null!=a&&"bool"===a)throw new Error(`Unsupported data type ${a}`);const s=new uu(t,n,a,!1,r),i=ks(e,a);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),hu=Ar({randomUniform_:function(e,t=0,n=1,a="float32",r){W(e);const s=ks(e,a),i=new lu(t,n,null,r);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}});function du(e,t,n=1,a="float32"){if(0===n)throw new Error("Cannot have a step of zero");const r={start:e,stop:t,step:n,dtype:a};return vr.runKernel(rn,{},r)}const pu=Ar({relu_:function(e){const t={x:Er(e,"x","relu")};return vr.runKernel(un,t)}}),fu=Ar({reverse_:function(e,t){const n={x:Er(e,"x","reverse")},a={dims:t};return vr.runKernel(mn,n,a)}}),mu=Ar({selu_:function(e){const t={x:Er(e,"x","selu")};return vr.runKernel(vn,t)}}),gu=Ar({separableConv2d_:function(e,t,n,a,r,s=[1,1],i="NHWC"){const o=Er(e,"x","separableConv2d"),u=Er(t,"depthwiseFilter","separableConv2d"),l=Er(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=Xi(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");p(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),p(4===u.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`)),p(4===l.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`)),p(1===l.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`)),p(1===l.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`));const d=u.shape[2],f=u.shape[3];p(l.shape[2]===d*f,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*f}, but got ${l.shape[2]}.`));const m=yo(c,u,a,r,i,s),g=lo(m,l,1,"valid",i);return h?Xi(g,[g.shape[1],g.shape[2],g.shape[3]]):g}}),bu=Ar({sigmoid_:function(e){const t={x:Er(e,"x","sigmoid","float32")};return vr.runKernel($n,t)}}),yu=Ar({slice_:function(e,t,n){const a=Er(e,"x","slice","string_or_numeric");if(0===a.rank)throw new Error("Slicing scalar is not possible");const r={x:a},s={begin:t,size:n};return vr.runKernel(In,r,s)}}),xu=Ar({slice1d_:function(e,t,n){const a=Er(e,"x","slice1d");return p(1===a.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${a.rank} tensor`)),yu(a,[t],[n])}}),wu=Ar({slice2d_:function(e,t,n){const a=Er(e,"x","slice2d");return p(2===a.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${a.rank} tensor`)),yu(a,t,n)}}),ku=Ar({slice3d_:function(e,t,n){const a=Er(e,"x","slice3d");return p(3===a.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${a.rank} tensor`)),yu(a,t,n)}}),vu=Ar({slice4d_:function(e,t,n){const a=Er(e,"x","slice4d");return p(4===a.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${a.rank} tensor`)),yu(a,t,n)}}),Iu=Ar({softmax_:function(e,t=-1){const n=Er(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const a={logits:n},r={dim:t};return vr.runKernel(Fn,a,r)}}),Su=Ar({softplus_:function(e){const t={x:Er(e,"x","softplus")};return vr.runKernel(Tn,t)}}),Nu=Ar({split_:function(e,t,n=0){const a={x:Er(e,"x","split")},r={numOrSizeSplits:t,axis:n};return vr.runKernel(An,a,r)}}),Cu=Ar({squeeze_:function(e,t){const n=Er(e,"x","squeeze","string_or_numeric");return Xi(n,S(n.shape,t).newShape)}}),$u=Ar({stack_:function(e,t=0){const n=Rr(e,"tensors","stack","string_or_numeric");p(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&p(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const a=n,r={axis:t};return vr.runKernel(Yt,a,r)}}),Tu=Ar({tanh_:function(e){const t={x:Er(e,"x","tanh","float32")};return vr.runKernel(Kn,t)}});function _u(e,t){m(e);const n=$r(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Dr(e,null,n,t)}function Eu(e,t,n){if(m(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const a=$r(e,n);if(2!==a.length&&1!==a.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Dr(e,t,a,n)}const Ru=Ar({truncatedNormal_:function(e,t=0,n=1,a,r){if(W(e),null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const s=new uu(t,n,a,!0,r),i=ks(e,a);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),Au=Ar({unstack_:function(e,t=0){const n=Er(e,"x","unstack","string_or_numeric");p(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const a={value:n},r={axis:t};return vr.runKernel(ea,a,r)}}),Fu=Ar({where_:function(e,t,n){const a=Er(t,"a","where"),r=Er(n,"b","where"),s=Er(e,"condition","where","bool"),i=Ks(Ks(s.shape,a.shape),r.shape),o={condition:no(s,i),t:no(a,i),e:no(r,i)};return vr.runKernel(kn,o)}}),Du=Ar({imag_:function(e){const t={input:Er(e,"input","imag")};return vr.runKernel(ft,t)}}),Mu=Ar({real_:function(e){const t={input:Er(e,"input","real")};return vr.runKernel(sn,t)}}),Ou=Ar({transpose_:function(e,t,n){const a=Er(e,"x","transpose");if(null==t&&(t=a.shape.map(((e,t)=>t)).reverse()),p(a.rank===t.length,(()=>`Error in transpose: rank of input ${a.rank} must match length of perm ${t}.`)),t.forEach((e=>{p(e>=0&&e<a.rank,(()=>"All entries in 'perm' must be between 0 and "+(a.rank-1)+` but got ${t}`))})),a.rank<=1)return a.clone();const r={x:a},s={perm:t};return"complex64"===a.dtype?Pr((()=>{let e=Mu(a),t=Du(a);return e=vr.runKernel(Zn,{x:e},s),t=vr.runKernel(Zn,{x:t},s),n&&(t=Qo(t)),Fr(e,t)})):vr.runKernel(Zn,r,s)}}),Lu=Ar({dropout_:function(e,t,n,a){const r=Er(e,"x","dropout");if(p("float32"===r.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`)),p(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof tr?r.clone():r;const s=function(e,t){if(null==t)return e.shape.slice();if(b(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let a=0;a<e.shape.length;a++)null==t[a]&&null!=e.shape[a]?n.push(e.shape[a]):n.push(t[a]);return n}return t}(r,n),i=1-t,o=Cs(Co(Ss(hu(s,0,1,"float32",a),i)),i);return $s(r,o)}}),zu=Ar({fft_:function(e){p("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return vr.runKernel(nt,t)}}),Pu=Ar({rfft_:function(e,t){p("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const a=e.size/n;let r;if(null!=t&&t<n){const a=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,r=yu(e,a,s),n=t}else if(null!=t&&t>n){const a=e.shape.map((e=>e));a[e.shape.length-1]=t-n,r=ro([e,nu(a)],e.shape.length-1),n=t}else r=e;const s=Es(r),i=Xi(Fr(r,s),[a,n]),o=zu(i),u=Math.floor(n/2)+1,l=Mu(o),c=Du(o),h=Nu(l,[u,n-u],l.shape.length-1),d=Nu(c,[u,n-u],c.shape.length-1),f=r.shape.slice();return f[r.shape.length-1]=u,Xi(Fr(h[0],d[0]),f)}}),Wu=Ar({ifft_:function(e){p("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return vr.runKernel(pt,t)}}),Bu=Ar({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let a;if(t<=2){const r=Xi(e,[n,t]);a=Wu(r)}else{const r=[n,2*(t-1)],s=Xi(Mu(e),[n,t]),i=Xi(Du(e),[n,t]),o=fu(yu(s,[0,1],[n,t-2]),1),u=$s(fu(yu(i,[0,1],[n,t-2]),1),As(-1)),l=ro([s,o],1),c=ro([i,u],1),h=Xi(Fr(l,c),[r[0],r[1]]);a=Wu(h)}if(a=Mu(a),3===e.rank&&0!==e.shape[0]){const t=a,n=e.shape[0];a=Xi(a,[n,a.shape[0]/n,a.shape[1]]),t.dispose()}return a}}),Uu=Ar({conv2DBackpropFilter_:function(e,t,n,a,r,s="NHWC",i){let o=e;3===e.rank&&(o=Xi(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=Xi(t,[1,t.shape[0],t.shape[1],t.shape[2]])),p(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),p(4===u.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`)),p(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const l="NHWC"===s?o.shape[3]:o.shape[1],c="NHWC"===s?u.shape[3]:u.shape[1];p(l===n[2],(()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`)),p(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),Ki("conv2dDerFilter",r,i);const h={x:o,dy:u},d={strides:a,pad:r,dataFormat:s,dimRoundingMode:i,filterShape:n};return vr.runKernel(Te,h,d)}}),Vu=Ar({relu6_:function(e){const t={x:Er(e,"x","relu6")};return vr.runKernel(fn,t)}}),Gu=Ar({step_:function(e,t=0){const n={x:Er(e,"x","step")},a={alpha:t};return vr.runKernel(aa,n,a)}});function Hu(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return $s(e,Gu(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function ju(e,t){let n=t;const a=qs(e.shape,t.shape);return a.length>0&&(n=Do(n,a)),Xi(n,e.shape)}function qu(e,t,n,a){if("linear"===t)return e;if("relu"===t)return pu(e);if("elu"===t)return xo(e);if("relu6"===t)return Vu(e);if("prelu"===t)return iu(e,n);if("leakyrelu"===t)return Eo(e,a);if("sigmoid"===t)return bu(e);throw new Error(`Unknown fused activation ${t}.`)}const Ku=(e,t)=>!(e>0)||"linear"===t,Xu=Ar({fusedConv2d_:function({x:e,filter:t,strides:n,pad:a,dataFormat:r="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(u=u||"linear",!1===Ku(vr.state.gradientDepth,u)){p("NHWC"===r,(()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let h=lo(e,t,n,a,r,s,i);return null!=o&&(h=Ss(h,o)),qu(h,u,l,c)}const h=Er(e,"x","conv2d","float32"),d=Er(t,"filter","conv2d","float32");let f=h,m=!1;3===h.rank&&(m=!0,f=Xi(h,[1,h.shape[0],h.shape[1],h.shape[2]])),p(4===f.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`)),p(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),Ki("fused conv2d",a,i);const g="NHWC"===r?f.shape[3]:f.shape[1];p(d.shape[2]===g,(()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${d.shape[2]}.`)),p(Hi(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`));const b=Li(f.shape,d.shape,n,s,a,i);let y,x;if(null!=o&&(y=Er(o,"bias","fused conv2d"),[y]=fr(y,h),"NHWC"===r?Ks(b.outShape,y.shape):(p(y.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`)),p(0===y.shape.length||y.shape[0]===b.outChannels||1===y.shape[0],(()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${b.outChannels})`)))),null!=l){const e=l.shape;if(p(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)p(1===e[0]||e[0]===b.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${b.outChannels}).`));else if(3===e.length)try{Ks(e,b.outShape)}catch(t){const n=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${b.outShape}).`;throw Error(n)}x=Er(l,"prelu weights","fused conv2d")}const w=(e,t)=>{p("NHWC"===r,(()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`));const[i,o,l,c]=t,h=Hu(e,l,u);p(Gi(s),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const d=[ho(o.shape,h,i,n,a),Uu(o,h,i.shape,n,a)];if(null!=c){const e=ju(c,h);d.push(e)}return d},k={x:f,filter:d,bias:y,preluActivationWeights:x},v={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:c};if(null==o){const e=Rs(((e,t,n)=>{let a=vr.runKernel(ia,k,v);return n([t,e,a]),m&&(a=Xi(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:w}}));return e(f,d)}{const e=Rs(((e,t,n,a)=>{let r=vr.runKernel(ia,k,v);return a([t,e,r,n]),m&&(r=Xi(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:w}}));return e(f,d,y)}}}),Yu=Ar({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,a,r,s=[1,1],i){let o=e;3===e.rank&&(o=Xi(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=Xi(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={x:o,dy:u},c={strides:a,pad:r,dimRoundingMode:i,dilations:s,filterShape:n};return vr.runKernel(Be,l,c)}}),Ju=Ar({depthwiseConv2dNativeBackpropInput_:function(e,t,n,a,r,s=[1,1],i){let o=t,u=!1;3===t.rank&&(u=!0,o=Xi(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={dy:o,filter:n},c={strides:a,pad:r,dimRoundingMode:i,dilations:s,inputShape:e},h=vr.runKernel(Ue,l,c);return u?Xi(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Zu=Ar({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:a=!1,bias:r,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){if(!1===Ku(vr.state.gradientDepth,s)){let u=jo(e,t,n,a);return null!=r&&(u=Ss(u,r)),qu(u,s,i,o)}let u=Er(e,"a","fused matMul"),l=Er(t,"b","fused matMul");[u,l]=fr(u,l);const c=n?u.shape[u.rank-2]:u.shape[u.rank-1],h=a?l.shape[l.rank-1]:l.shape[l.rank-2],d=n?u.shape[u.rank-1]:u.shape[u.rank-2],f=a?l.shape[l.rank-2]:l.shape[l.rank-1],m=u.shape.slice(0,-2),b=l.shape.slice(0,-2),y=g(m),x=g(b);p(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${n} and transposeB=${a} must match.`));const w=Ks(u.shape.slice(0,-2),l.shape.slice(0,-2)).concat([d,f]),k=Xi(u,n?[y,c,d]:[y,d,c]),v=Xi(l,a?[x,f,h]:[x,h,f]);let I,S;null!=r&&(I=Er(r,"bias","fused matMul"),[I]=fr(I,u),Ks(w,I.shape)),null!=i&&(S=Er(i,"prelu weights","fused matMul"));const N=(e,t)=>{const[i,o,u,l]=t,c=Hu(Xi(e,u.shape),u,s);let h,d;return n||a?!n&&a?(h=jo(c,o,!1,!1),d=jo(c,i,!0,!1)):n&&!a?(h=jo(o,c,!1,!0),d=jo(i,c,!1,!1)):(h=jo(o,c,!0,!0),d=jo(c,i,!0,!0)):(h=jo(c,o,!1,!0),d=jo(i,c,!0,!1)),null!=r?[h,d,ju(l,c)]:[h,d]},C={a:k,b:v,bias:I,preluActivationWeights:S},$={transposeA:n,transposeB:a,activation:s,leakyreluAlpha:o};if(null==r){const e=Rs(((e,t,n)=>{const a=vr.runKernel(sa,C,$);return n([e,t,a]),{value:Xi(a,w),gradFunc:N}}));return e(k,v)}{const e=Rs(((e,t,n,a)=>{const r=vr.runKernel(sa,C,$);return a([e,t,r,n]),{value:Xi(r,w),gradFunc:N}}));return e(k,v,I)}}}),Qu=Ar({cropAndResize_:function(e,t,n,a,r="bilinear",s=0){const i=Er(e,"image","cropAndResize"),o=Er(t,"boxes","cropAndResize","float32"),u=Er(n,"boxInd","cropAndResize","int32"),l=o.shape[0];p(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),p(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${o.shape}.`)),p(1===u.rank&&u.shape[0]===l,(()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${o.shape}.`)),p(2===a.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${a.length}.`)),p(a[0]>=1&&a[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${a}`)),p("bilinear"===r||"nearest"===r,(()=>`method must be bilinear or nearest, but was ${r}`));const c={image:i,boxes:o,boxInd:u},h={method:r,extrapolationValue:s,cropSize:a};return vr.runKernel(Le,c,h)}}),el=Ar({flipLeftRight_:function(e){const t=Er(e,"image","flipLeftRight","float32");p(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return vr.runKernel(rt,n,{})}}),tl=Ar({grayscaleToRGB_:function(e){const t=Er(e,"image","grayscaleToRGB"),n=t.rank-1,a=t.shape[n];p(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),p(1===a,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${a}.`));const r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,So(t,r)}}),nl=Ar({einsum_:function(e,...t){const n=t.map(((e,t)=>Er(e,`tensors${t}`,"einsum"))),a={equation:e};return vr.runKernel(Ke,n,a)}}),al=Ar({rgbToGrayscale_:function(e){const t=Er(e,"image","RGBToGrayscale"),n=t.rank-1,a=t.shape[n];p(t.rank>=2,(()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`)),p(3===a,(()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${a}.`));const r=t.dtype,s=vs(t,"float32"),i=_u([.2989,.587,.114]);let o;switch(t.rank){case 2:o=nl("ij,j->i",s,i);break;case 3:o=nl("ijk,k->ij",s,i);break;case 4:o=nl("ijkl,l->ijk",s,i);break;case 5:o=nl("ijklm,m->ijkl",s,i);break;case 6:o=nl("ijklmn,n->ijklm",s,i);break;default:throw new Error("Not a valid tensor rank.")}return o=Io(o,-1),vs(o,r)}}),rl=Ar({rotateWithOffset_:function(e,t,n=0,a=.5){const r=Er(e,"image","rotateWithOffset","float32");p(4===r.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`));const s={image:r},i={radians:t,fillValue:n,center:a};return vr.runKernel(ra,s,i)}});function sl(e,t,n,a,r,s){null==a&&(a=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==s&&(s=0);const i=e.shape[0];return n=Math.min(n,i),p(0<=a&&a<=1,(()=>`iouThreshold must be in [0, 1], but was '${a}'`)),p(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),p(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),p(1===t.rank,(()=>"scores must be a 1D tensor")),p(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),p(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:s}}const il=Ar({nonMaxSuppression_:function(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY){const s=Er(e,"boxes","nonMaxSuppression","float32"),i=Er(t,"scores","nonMaxSuppression","float32"),o=sl(s,i,n,a,r),u={maxOutputSize:n=o.maxOutputSize,iouThreshold:a=o.iouThreshold,scoreThreshold:r=o.scoreThreshold};return vr.runKernel(Ht,{boxes:s,scores:i},u)}});function ol(e,t,n){const a=function(e,t,n){return function(e,t,n){let a=0,r=e.length,s=0,i=!1;for(;a<r;){s=a+(r-a>>>1);const o=n(t,e[s]);o>0?a=s+1:(r=s,i=!o)}return i?a:-a-1}(e,t,n||ul)}(e,t,n),r=a<0?-(a+1):a;e.splice(r,0,t)}function ul(e,t){return e>t?1:e<t?-1:0}function ll(e,t,n,a,r){return dl(e,t,n,a,r,0)}function cl(e,t,n,a,r,s){return dl(e,t,n,a,r,0,!1,s,!0)}function hl(e,t,n,a,r,s){return dl(e,t,n,a,r,s,!0)}function dl(e,t,n,a,r,s,i=!1,o=!1,u=!1){const l=[];for(let e=0;e<t.length;e++)t[e]>r&&l.push({score:t[e],boxIndex:e,suppressBeginIndex:0});l.sort(ml);const c=s>0?-.5/s:0,h=[],d=[];for(;h.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:s,suppressBeginIndex:i}=t;if(n<r)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=pl(e,s,h[n]);if(i>=a){o=!0;break}if(t.score=t.score*fl(a,c,i),t.score<=r)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(s),d.push(t.score)):t.score>r&&ol(l,t,ml))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=d),u&&(m.validOutputs=p),m}function pl(e,t,n){const a=e.subarray(4*t,4*t+4),r=e.subarray(4*n,4*n+4),s=Math.min(a[0],a[2]),i=Math.min(a[1],a[3]),o=Math.max(a[0],a[2]),u=Math.max(a[1],a[3]),l=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),p=(o-s)*(u-i),f=(h-l)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(s,l),g=Math.max(i,c),b=Math.min(o,h),y=Math.min(u,d),x=Math.max(b-m,0)*Math.max(y-g,0);return x/(p+f-x)}function fl(e,t,n){const a=Math.exp(t*n*n);return n<=e?a:0}function ml(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const gl=Ar({nonMaxSuppressionWithScore_:function(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY,s=0){const i=Er(e,"boxes","nonMaxSuppression"),o=Er(t,"scores","nonMaxSuppression"),u=sl(i,o,n,a,r,s),l={boxes:i,scores:o},c={maxOutputSize:n=u.maxOutputSize,iouThreshold:a=u.iouThreshold,scoreThreshold:r=u.scoreThreshold,softNmsSigma:s=u.softNmsSigma},h=vr.runKernel(qt,l,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),bl=Ar({nonMaxSuppressionPadded_:function(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY,s=!1){const i=Er(e,"boxes","nonMaxSuppression"),o=Er(t,"scores","nonMaxSuppression"),u=sl(i,o,n,a,r,null),l={boxes:i,scores:o},c={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:s},h=vr.runKernel(jt,l,c);return{selectedIndices:h[0],validOutputs:h[1]}}}),yl=Ar({resizeBilinear_:function(e,t,n=!1,a=!1){const r=Er(e,"images","resizeBilinear");p(3===r.rank||4===r.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`)),p(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),p(!1===a||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=r,i=!1;3===r.rank&&(i=!0,s=Xi(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,o={images:s},u={alignCorners:n,halfPixelCenters:a,size:t},l=vr.runKernel(dn,o,u);return i?Xi(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),xl=Ar({resizeNearestNeighbor_:function(e,t,n=!1,a=!1){const r=Er(e,"images","resizeNearestNeighbor");p(3===r.rank||4===r.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`)),p(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),p("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),p(!1===a||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=r,i=!1;3===r.rank&&(i=!0,s=Xi(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,o={images:s},u={alignCorners:n,halfPixelCenters:a,size:t},l=vr.runKernel(cn,o,u);return i?Xi(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),wl=Ar({bincount_:function(e,t,n){const a=Er(e,"x","bincount"),r=Er(t,"weights","bincount");p("int32"===a.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${a.dtype}`)),p(n>=0,(()=>`size must be non-negative, but got ${n}.`)),p(r.size===a.size||0===r.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${a.shape}, weights shape: ${r.shape}.`));const s={x:a,weights:r},i={size:n};return vr.runKernel(ye,s,i)}}),kl=Ar({lessEqual_:function(e,t){let n=Er(e,"a","lessEqual","string_or_numeric"),a=Er(t,"b","lessEqual","string_or_numeric");[n,a]=fr(n,a),Ks(n.shape,a.shape);const r={a:n,b:a};return vr.runKernel(wt,r)}}),vl=Ar({round_:function(e){const t={x:Er(e,"x","round")};return vr.runKernel(gn,t)}}),Il=Ar({threshold_:function(e,t="binary",n=!1,a=.5){const r=Er(e,"image","threshold"),s=r.shape[0]*r.shape[1];let i,o,u,l,c=$s(_u([a]),255);if(p(3===r.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`)),p(3===r.shape[2]||1===r.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`)),p("int32"===r.dtype||"float32"===r.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`)),p("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===r.shape[2]){[i,o,u]=Nu(r,[1,1,1],-1);const e=$s(i,.2989),t=$s(o,.587),n=$s(u,.114);l=Ss(Ss(e,t),n)}else l=e;"otsu"===t&&(c=function(e,t){let n,a,r,s,i,o,u=_u([-1]),l=_u([0]),c=_u([0]);for(let h=0;h<e.size-1;h++){n=yu(e,0,h+1),a=yu(e,h+1),i=Cs(Do(n),t),o=Cs(Do(a),t);const d=Do($s(n,du(0,n.size)));r=Cs(d,Do(n));const p=Ws(a.shape,n.size),f=Ss(du(0,a.size),p),m=$s(a,f);s=Cs(Do(m),Do(a));const g=Vs(r,s),b=Vs(r,s),y=$s(i,o);c=$s($s(y,g),b);const x=To(c,l);l=Fu(x,c,l),u=Fu(x,_u([h]),u)}return u}(wl(vs(vl(l),"int32"),Mr([]),256),s));const h=n?kl(l,c):To(l,c);return vs($s(h,255),"int32")}}),Sl=Ar({transform_:function(e,t,n="nearest",a="constant",r=0,s){const i=Er(e,"image","transform","float32"),o=Er(t,"transforms","transform","float32");p(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),p(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),p(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`));const u={image:i,transforms:o},l={interpolation:n,fillMode:a,fillValue:r,outputShape:s};return vr.runKernel(Jn,u,l)}}),Nl=Ar({less_:function(e,t){let n=Er(e,"a","less","string_or_numeric"),a=Er(t,"b","less","string_or_numeric");[n,a]=fr(n,a),Ks(n.shape,a.shape);const r={a:n,b:a};return vr.runKernel(xt,r)}}),Cl=Ar({bandPart_:function(e,t,n){const a=Er(e,"a","bandPart");p(a.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${a.rank}.`));const r=a.shape,[s,i]=a.shape.slice(-2);let o,u;"number"==typeof t?(p(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),p(t<=s,(()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`)),o=Er(t<0?s:t,"numLower","bandPart")):(p("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),o=Fu(Nl(t,0),s,Jo(t,s))),"number"==typeof n?(p(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`)),p(n<=i,(()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`)),u=Er(n<0?i:n,"numUpper","bandPart")):(p("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),u=Fu(Nl(n,0),i,Jo(n,i)));const l=Xi(du(0,s,1,"int32"),[-1,1]),c=du(0,i,1,"int32"),h=Vs(l,c),d=Ho(kl(h,o),_o(h,Qo(u))),f=nu([s,i],a.dtype);return Xi($u(Au(Xi(a,[-1,s,i])).map((e=>Fu(d,e,f)))),r)}});function $l(e,t,n=null){if(0===e.rank)return Hs(e);if(1!==e.rank&&null===n)return $l(Xi(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Do(Hs(e),n);if(t===1/0)return Fo(Hs(e),n);if(t===-1/0)return Yo(Hs(e),n);if("euclidean"===t||2===t)return Ts(Do(Us(Hs(e),As(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Fo(Do(Hs(e),n[0]),n[1]-1);if(t===1/0)return Fo(Do(Hs(e),n[1]),n[0]);if(t===-1/0)return Yo(Do(Hs(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Ts(Do(_s(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Tl=Ar({norm_:function(e,t="euclidean",n=null,a=!1){const r=$l(e=Er(e,"x","norm"),t,n);let s=r.shape;if(a){const t=I(n,e.shape);s=Po(r.shape,t)}return Xi(r,s)}}),_l=Ar({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,p(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)p(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Nu(e,e.shape[0],0).map((e=>Cu(e,[0])));p(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],a=e;for(let t=0;t<e.length;++t)n.push(vr.tidy((()=>{let e=a[t];if(t>0)for(let a=0;a<t;++a){const t=$s(Do($s(n[a],e)),n[a]);e=Vs(e,t)}return Cs(e,Tl(e,"euclidean"))})));return t?$u(n,0):n}});function El(e,t=!1){return vr.tidy((()=>{p(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],a=e.shape[1];let r=No(n),s=Is(e);const i=Eu([[1]],[1,1]);let o=Is(i);const u=n>=a?a:n;for(let e=0;e<u;++e){const t=s,u=o,l=r;[o,s,r]=vr.tidy((()=>{const t=yu(s,[e,e],[n-e,1]),u=Tl(t),l=yu(s,[e,e],[1,1]),c=Fu(To(l,0),Eu([[-1]]),Eu([[1]])),h=Vs(l,$s(c,u)),d=Cs(t,h);o=1===d.shape[0]?Is(i):ro([i,yu(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=Qo(Cs(jo(c,h),u)),f=yu(s,[e,0],[n-e,a]),m=$s(p,o),g=Ou(o);if(0===e)s=Vs(f,jo(m,jo(g,f)));else{const t=Vs(f,jo(m,jo(g,f)));s=ro([yu(s,[0,0],[e,a]),t],0)}const b=Ou(m),y=yu(r,[0,e],[n,r.shape[1]-e]);if(0===e)r=Vs(y,jo(jo(y,o),b));else{const t=Vs(y,jo(jo(y,o),b));r=ro([yu(r,[0,0],[n,e]),t],1)}return[o,s,r]})),Wr([t,u,l])}return!t&&n>a&&(r=yu(r,[0,0],[n,a]),s=yu(s,[0,0],[a,a])),[r,s]}))}const Rl=Ar({qr_:function(e,t=!1){if(p(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return El(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),a=Au(Xi(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],s=[];return a.forEach((e=>{const[n,a]=El(e,t);r.push(n),s.push(a)})),[Xi($u(r,0),e.shape),Xi($u(s,0),e.shape)]}}});var Al;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Al||(Al={}));const Fl=Ar({squaredDifference_:function(e,t){let n=Er(e,"a","squaredDifference"),a=Er(t,"b","squaredDifference");[n,a]=fr(n,a),Ks(n.shape,a.shape);const r={a:n,b:a};return vr.runKernel(Pn,r,{})}}),Dl={flipLeftRight:el,grayscaleToRGB:tl,resizeNearestNeighbor:xl,resizeBilinear:yl,rgbToGrayscale:al,rotateWithOffset:rl,cropAndResize:Qu,nonMaxSuppression:il,nonMaxSuppressionAsync:async function(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY){const s=Er(e,"boxes","nonMaxSuppressionAsync"),i=Er(t,"scores","nonMaxSuppressionAsync"),o=sl(s,i,n,a,r);n=o.maxOutputSize,a=o.iouThreshold,r=o.scoreThreshold;const u=await Promise.all([s.data(),i.data()]),l=u[0],c=u[1],{selectedIndices:h}=ll(l,c,n,a,r);return s!==e&&s.dispose(),i!==t&&i.dispose(),_u(h,"int32")},nonMaxSuppressionWithScore:gl,nonMaxSuppressionWithScoreAsync:async function(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY,s=0){const i=Er(e,"boxes","nonMaxSuppressionAsync"),o=Er(t,"scores","nonMaxSuppressionAsync"),u=sl(i,o,n,a,r,s);n=u.maxOutputSize,a=u.iouThreshold,r=u.scoreThreshold,s=u.softNmsSigma;const l=await Promise.all([i.data(),o.data()]),c=l[0],h=l[1],{selectedIndices:d,selectedScores:p}=hl(c,h,n,a,r,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:_u(d,"int32"),selectedScores:_u(p)}},nonMaxSuppressionPadded:bl,nonMaxSuppressionPaddedAsync:async function(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY,s=!1){const i=Er(e,"boxes","nonMaxSuppressionAsync"),o=Er(t,"scores","nonMaxSuppressionAsync"),u=sl(i,o,n,a,r,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,[d,p]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=cl(d,p,l,c,h,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:_u(f,"int32"),validOutputs:As(m,"int32")}},threshold:Il,transform:Sl},Ml={bandPart:Cl,gramSchmidt:_l,qr:Rl},Ol=class{static sgd(e){return new Js(e)}static momentum(e,t,n=!1){return new Zs(e,t,n)}static rmsprop(e,t=.9,n=0,a=null,r=!1){return new Qs(e,t,n,a,r)}static adam(e=.001,t=.9,n=.999,a=null){return new Gs(e,t,n,a)}static adadelta(e=.001,t=.95,n=null){return new Ps(e,t,n)}static adamax(e=.002,t=.9,n=.999,a=null,r=0){return new Ys(e,t,n,a,r)}static adagrad(e,t=.1){return new Bs(e,t)}},Ll="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function zl(){return new Promise((e=>Ll((()=>e()))))}function Pl(e,t){const n=e[0].length;e.forEach(((e,t)=>{p(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),p(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const a=e[0];e.forEach(((e,r)=>{for(let s=0;s<n;s++)p(s===t||e[s]===a[s],(()=>`Error in concat${n}D: Shape of tensors[${r}] (${e}) does not match the shape of the rest (${a}) along the non-concatenated axis ${r}.`))}))}function Wl(e,t){const n=e[0].slice();for(let a=1;a<e.length;a++)n[t]+=e[a][t];return n}var Bl;function Ul(e,t,n){let a=new Array;if(null==n&&null==t)return a;if(null==t)for(;a.length<e+n.length;)a.push(-1);else a=t.slice();if(null==n)return a;if(e+n.length!==a.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${a.length}`);for(let r=1;r<n.length;++r){const s=n[r],i=a[a.length-n.length+r],o=a[i];if(s>=0)if(o>=0){if(o!==s)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${r+e}] = ${s} but shape[${r+e}] = ${o}`)}else a[i]=s}return a}function Vl(e){const t={FIRST_DIM_SIZE:Bl.FIRST_DIM_SIZE,VALUE_ROWIDS:Bl.VALUE_ROWIDS,ROW_LENGTHS:Bl.ROW_LENGTHS,ROW_SPLITS:Bl.ROW_SPLITS,ROW_LIMITS:Bl.ROW_LIMITS,ROW_STARTS:Bl.ROW_STARTS},n=[];for(const a of e){if(!(a in t))break;n.push(t[a])}return n}function Gl(e){return 0===e.length?0:e[0]===Bl.FIRST_DIM_SIZE?e.length-1:e.length}function Hl(e,t){if(null==e||null==t)return;const n=e.length,a=t.length;if(n>=a)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${a})`);for(let r=0;r<Math.min(n,a-1);++r){const n=e[r],a=t[r+1];if(n>=0&&a>=0&&1!==n&&n!==a)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${r-e.length}] = ${n} but ragged tensor input.flatValues.shape[${r-e.length}] = ${a}`)}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(Bl||(Bl={}));const jl=30;function ql(e){return e<=jl?e:F(e,Math.floor(Math.sqrt(e)))}function Kl(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Xl(e,t,n,a=!0){let r=[];if(a)r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);const n=t.length;for(let a=0;a<n;++a)r=r.concat([e[a+1]/t[a],t[a]]);r=r.concat(e.slice(n+1))}return r}function Yl(e,t,n=!0){const a=[];if(n){a.push(t);for(let n=t+1;n<e;++n)n<=2*t?(a.push(n),a.push(n-(t+1))):a.push(n)}else{const n=[],r=[];for(let a=1;a<e;++a)a>=2*t+1||a%2==1?r.push(a):n.push(a);a.push(...n),a.push(0),a.push(...r)}return a}function Jl(e,t,n,a=!0){const r=[];a?r.push(e[0]/n):r.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?a?r.push(t[n-1]*e[n]):r.push(e[n]/t[n-1]):r.push(e[n]);return r}function Zl(e,t){const n=[0];for(let a=0;a<t;++a)n.push(e[a][0]);return n}function Ql(e,t,n){const a=e.slice(0,1);for(let r=0;r<n;++r)a.push(e[r+1]-t[r][0]-t[r][1]);return a}const ec=1.7580993408473768,tc=1.0507009873554805,nc=.3275911,ac=.254829592,rc=-.284496736,sc=1.421413741,ic=-1.453152027,oc=1.061405429;function uc(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let a=0;a<n.length;a+=2)n[a]=e[a/2],n[a+1]=t[a/2];return n}function lc(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let a=0;a<e.length;a+=2)t[a/2]=e[a],n[a/2]=e[a+1];return{real:t,imag:n}}function cc(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],a[Math.floor(t/4)]=e[t+1];return{real:n,imag:a}}function hc(e){const t=Math.floor(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],a[Math.floor(t/4)]=e[t+1];return{real:n,imag:a}}function dc(e,t){return{real:e[2*t],imag:e[2*t+1]}}function pc(e,t,n,a){e[2*a]=t,e[2*a+1]=n}function fc(e,t){const n=new Float32Array(e/2),a=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){const s=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(s),a[r]=Math.sin(s)}return{real:n,imag:a}}function mc(e,t,n){const a=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(a),imag:Math.sin(a)}}const gc="->",bc=/->/g,yc=",",xc="...";function wc(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(bc,"").length)/gc.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${gc}").`);const[a,r]=e.split(gc);p(-1===a.indexOf(xc),(()=>`The ellipsis notation ("${xc}") is not supported yet.`));const s=a.split(yc),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<r.length;++e){const t=r[e];if(!s.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<a.length;++e){const t=a[e];-1===o.indexOf(t)&&t!==yc&&o.push(t)}const u=new Array(s.length);for(let e=0;e<i;++e){if(new Set(s[e].split("")).size!==s[e].length)throw new Error(`Found duplicate axes in input component ${s[e]}. Support for duplicate axes in input is not implemented yet.`);u[e]=[];for(let t=0;t<s[e].length;++t)u[e].push(o.indexOf(s[e][t]))}const l=o.length,c=[];for(let e=r.length;e<l;++e)c.push(e);return{allDims:o,summedDims:c,idDims:u}}function kc(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const a=[];for(let t=0;t<e;++t)-1===n[t]&&a.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:a}}function vc(e,t,n){const a=new Array(e);for(let e=0;e<n.length;++e){const r=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===a[t[e][n]]?a[t[e][n]]=r[n]:p(a[t[e][n]]===r[n],(()=>`Expected dimension ${a[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(r)}, but got dimension ${r[n]}`))}}function Ic(e,t){const n=e,a=[];let r=0;0===e.length&&n.push(-1),r=e.length+1;for(let e=0;e<r;++e)a.push([]);const s=[];for(let e=0;e<n.length;++e){const r=Nc(t,n[e]);for(const t of r)-1===s.indexOf(t)&&(a[e].push(t),s.push(t))}return{path:n,steps:a}}function Sc(e){return e.every(((e,t)=>e===t))}function Nc(e,t){const n=[];for(let a=0;a<e.length;++a)0!==e[a].length&&-1===e[a].indexOf(t)&&-1!==t||n.push(a);return n}function Cc(e,t,n=0){let a=[];if("number"==typeof t)p(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),a=new Array(t).fill(e.shape[n]/t);else{const r=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);p(r<=1,(()=>"There should be only one negative value in split array."));const s=t.indexOf(-1);if(-1!==s){const a=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-a}p(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),a=t}return a}function $c(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function Tc(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function _c(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function Ec(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function Rc(e,t){return`size ${e} must be non-negative, not ${t}`}function Ac(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Fc(e,t){return`Input to reshape is a SparseTensor with ${g(e)}\n  dense values, but the requested shape requires a multiple of ${g(t)}. inputShape=${e} outputShape= ${t}`}function Dc(e,t){return`Input to reshape is a tensor with ${g(e)} dense values, but the requested shape has ${g(t)}. inputShape=${e} outputShape=${t}`}function Mc(){return"segment ids must be >= 0"}function Oc(){return"segment ids are not increasing"}function Lc(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function zc(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function Pc(e,t){let n,a=!1;for(e<=jl?(n=e,a=!0):n=F(e,Math.floor(Math.sqrt(e)));!a;)n>t||n===e?a=!0:n=F(e,n+1);return n}function Wc(e,t,n){const a=[],r=e.length;for(let s=0;s<r;s++)s!==t?a.push(e[s]):a.push(n);return a}function Bc(e,t,n,a){const r=t.shape.length,s=e.shape.length;if(0!==a&&(a<-r||a>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${a}`);if(a<0&&(a+=r),a>s)throw new Error(`batchDims (${a}) must be less than rank(x) (\n    ${s}).`);if(n<a)throw new Error(`batchDims (${a}) must be less than or equal to axis (${n}).`);for(let n=0;n<a;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let u=1,l=1,c=1;for(let t=0;t<a;++t)o.push(e.shape[t]),u*=e.shape[t];for(let t=a;t<n;t++)o.push(e.shape[t]),l*=e.shape[t];for(let e=a;e<r;e++)o.push(t.shape[e]);for(let t=n+1;t<s;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:i,outputShape:o}}function Uc(e){try{return e.map((e=>La(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Vc(e){return e.map((e=>Oa(e)))}function Gc(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const a=ks(e,"int32"),r=ks([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const s=a.indexToLoc(n[t]),i=t*e.length;r.values.set(s,i)}return r.toTensor()}!function(){for(const e of ei)Ls(e)}();const Hc={kernelName:Z,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$s(e,Gu(vs(n,"float32"),-1))}}},jc={kernelName:Q,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=_s(vs(n,"float32")),a=Ts(Vs(As(1),t));return Qo(Cs(e,a))}}}},qc={kernelName:ee,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ts(Vs(_s(vs(n,"float32")),1));return Cs(e,t)}}}},Kc={kernelName:te,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=Ks(n.shape,a.shape);return{a:()=>{let t=e;const a=qs(n.shape,r);return a.length>0&&(t=Do(t,a)),Xi(t,n.shape)},b:()=>{let t=e;const n=qs(a.shape,r);return n.length>0&&(t=Do(t,n)),Xi(t,a.shape)}}}},Xc={kernelName:ne,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,a)=>{n[a]=()=>e.clone()})),n}},Yc={kernelName:se,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Es(n)}}},Jc={kernelName:ie,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Es(n)}}},Zc={kernelName:oe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Cs(e,Ts(Vs(As(1),_s(vs(n,"float32")))))}}},Qc={kernelName:ue,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ts(Ss(As(1),_s(vs(n,"float32"))));return Cs(e,t)}}}},eh={kernelName:he,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=Ks(n.shape,a.shape);return{a:()=>{const t=Ss(_s(n),_s(a));let s=$s(e,Cs(a,t));const i=qs(n.shape,r);return i.length>0&&(s=Do(s,i)),Xi(s,n.shape)},b:()=>{const t=Ss(_s(n),_s(a));let s=Qo($s(e,Cs(n,t)));const i=qs(a.shape,r);return i.length>0&&(s=Do(s,i)),Xi(s,a.shape)}}}},th={kernelName:le,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Cs(e,Ss(_s(vs(n,"float32")),1))}}},nh={kernelName:ce,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Cs(e,Vs(As(1),_s(vs(n,"float32"))))}}},ah=Ar({avgPool3dGrad_:function(e,t,n,a,r,s){const i=Er(e,"dy","avgPool3dGrad"),o=Er(t,"input","avgPool3dGrad");let u=i,l=o,c=!1;4===o.rank&&(c=!0,u=Xi(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),l=Xi(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),p(5===u.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`)),p(5===l.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`)),Ki("avgPool3dGrad",r,s);const h={dy:u,input:l},d={filterSize:n,strides:a,pad:r,dimRoundingMode:s},f=vr.runKernel(me,h,d);return c?Xi(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),rh={kernelName:fe,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{filterSize:r,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>ah(e,a,r,s,i,o)}}},sh=Ar({avgPoolGrad_:function(e,t,n,a,r){const s=Er(e,"dy","avgPoolGrad"),i=Er(t,"input","avgPoolGrad");p(i.rank===s.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`));let o=i,u=s,l=!1;3===i.rank&&(l=!0,o=Xi(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=Xi(s,[1,s.shape[0],s.shape[1],s.shape[2]])),p(4===u.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`)),p(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:u,input:o},h={filterSize:n,strides:a,pad:r},d=vr.runKernel(pe,c,h);return l?Xi(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),ih={kernelName:de,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{filterSize:r,strides:s,pad:i}=n;return{x:()=>sh(e,a,r,s,i)}}},oh={kernelName:ge,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[a,r]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>jo(e,r,!1,!1),b:()=>jo(e,a,!0,!1)}:s&&!i?{a:()=>jo(r,e,!1,!0),b:()=>jo(a,e,!1,!1)}:{a:()=>jo(r,e,!0,!0),b:()=>jo(e,a,!0,!0)}:{a:()=>jo(e,r,!1,!0),b:()=>jo(a,e,!0,!1)}}},uh=Ar({spaceToBatchND_:function(e,t,n){const a=Er(e,"x","spaceToBatchND");p(a.rank>=1+t.length,(()=>`input rank ${a.rank} should be > than [blockShape] ${t.length}`)),p(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),p(a.shape.reduce(((e,a,r)=>r>0&&r<=t.length?e&&(a+n[r-1][0]+n[r-1][1])%t[r-1]==0:e),!0),(()=>`input spatial dimensions ${a.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const r={x:a},s={blockShape:t,paddings:n};return vr.runKernel(Rn,r,s)}}),lh={kernelName:be,gradFunc:(e,t,n)=>{const{blockShape:a,crops:r}=n;return{x:()=>uh(e,a,r)}}},ch={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const a=n,r=a.inputShape,s=a.shape,i=Array.from(s);for(let e=r.length-1;e>=0;e--)if(r[e]===s[e])i[e]=1;else if(1!==r[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${s}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>Do(e,o,!0)}}},hh={kernelName:ke,gradFunc:e=>({x:()=>e.clone()})},dh={kernelName:ve,gradFunc:e=>({x:()=>Es(e)})},ph={kernelName:Ie,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{clipValueMin:r,clipValueMax:s}=n;return{x:()=>Fu(Ho(_o(a,r),kl(a,s)),e,Es(e))}}},fh={kernelName:Ne,inputsToSave:["x"],gradFunc:Hc.gradFunc},mh={kernelName:Ce,saveAllInputs:!0,gradFunc:(e,t,n)=>{const a=t.map((e=>e.shape)),{axis:r}=n,s=I(r,t[0].shape)[0],i=a.map((e=>e[s]));return Nu(e,i,s).map((e=>()=>e))}},gh={kernelName:$e,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,{dilations:s,strides:i,pad:o,dataFormat:u}=n;return p(Gi(s),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`)),{x:()=>ho(a.shape,e,r,i,o,u),filter:()=>Uu(a,e,r.shape,i,o,u)}}},bh={kernelName:_e,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>lo(e,r,s,i,o,1,u),filter:()=>Uu(e,a,r.shape,s,i,o,u)}}},yh=Ar({conv3DBackpropFilter_:function(e,t,n,a,r){let s=e;4===e.rank&&(s=Xi(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=Xi(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),p(5===s.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`)),p(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),p(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),p(s.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`)),p(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:s,dy:i},u={strides:a,pad:r,filterShape:n};return vr.runKernel(Re,o,u)}}),xh={kernelName:Ee,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:a,strides:r,pad:s}=n;p(Gi(a),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const[i,o]=t;return{x:()=>mo(i.shape,e,o,r,s),filter:()=>yh(i,e,o.shape,r,s)}}},wh=Ar({sin_:function(e){const t={x:Er(e,"x","sin","float32")};return vr.runKernel(Sn,t)}}),kh={kernelName:Fe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$s(Qo(wh(vs(n,"float32"))),e)}}},vh=Ar({sinh_:function(e){const t={x:Er(e,"x","sinh")};return vr.runKernel(Nn,t)}}),Ih={kernelName:De,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$s(vh(vs(n,"float32")),e)}}},Sh=Ar({cumsum_:function(e,t=0,n=!1,a=!1){const r={x:Er(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:a};return vr.runKernel(Oe,r,s)}}),Nh={kernelName:Oe,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r,exclusive:s,reverse:i}=n;return{x:()=>{const t=Bo([r],a.rank);let n=Sh(e,r,s,!i);return null!=t&&(n=Ou(n,t)),n}}}},Ch={kernelName:We,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:a,strides:r,pad:s,dimRoundingMode:i}=n,o=null==a?[1,1]:a;p(Gi(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[u,l]=t;return p(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),p(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`)),p(u.shape[3]===l.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),p(Hi(r,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${o}'.`)),Ki("depthwiseConv2d",s,i),{x:()=>Ju(u.shape,e,l,r,s,o,i),filter:()=>Yu(u,e,l.shape,r,s,o,i)}}},$h={kernelName:Ge,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,s={x:a,filter:r,dy:e},i={x:a,filter:r,dy:e};return{x:()=>vr.runKernel(He,s,n),filter:()=>vr.runKernel(je,i,n)}}},Th={kernelName:Xe,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,a={dy:e,y:n};return{x:()=>vr.runKernel(Ye,a)}}},_h={kernelName:Je,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,a=$s(vo(Qo(_s(n))),2/Math.sqrt(Math.PI));return{x:()=>$s(e,a)}}},Eh={kernelName:Qe,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$s(e,n)}}},Rh={kernelName:et,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>Xi(e,n.shape)}}},Ah={kernelName:tt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$s(e,vo(n))}}},Fh={kernelName:st,gradFunc:e=>({x:()=>Es(e)})},Dh={kernelName:it,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=Ks(n.shape,a.shape);return{a:()=>{const t=Cs(e,vs(a,"float32")),s=qs(n.shape,r);return s.length>0?Xi(Do(t,s),n.shape):t},b:()=>{let t=$s(e,vs(n,"float32"));const s=qs(a.shape,r);s.length>0&&(t=Xi(Do(t,s),a.shape));const i=_s(a);return Qo(Cs(t,vs(i,"float32")))}}}},Mh=Ar({rsqrt_:function(e){const t={x:Er(e,"x","rsqrt","float32")};return vr.runKernel(bn,t)}}),Oh={kernelName:ot,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:a}=n,[r,s,i,o]=t,u=null==o?As(1):o,l=qs(s.shape,r.shape),c=[];if(1===s.rank){for(let e=0;e<r.shape.length-1;++e)c.push(r.shape[e]);c.push(1)}const h=Vs(r,s),d=$s(e,u),p=Mh(Ss(i,As(a))),f=$s($s($s(p,p),p),As(-.5));return{x:()=>1===s.rank?Xi($s($s(e,So(Xi(p,[1,1,1,s.shape[0]]),c)),u),r.shape):Xi($s($s(e,p),u),r.shape),mean:()=>{let e=$s($s(p,As(-1)),d);return 1===s.rank&&(e=Do(e,l)),Xi(e,s.shape)},variance:()=>{let e=$s($s(f,h),d);return 1===s.rank&&(e=Do(e,l)),Xi(e,s.shape)},scale:()=>{const t=$s(h,p);let n=$s(e,t);return 1===s.rank&&(n=Do(n,l)),Xi(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=Do(t,l)),Xi(t,s.shape)}}}},Lh=Ar({unsortedSegmentSum_:function(e,t,n){const a=Er(e,"x","unsortedSegmentSum"),r=Er(t,"segmentIds","unsortedSegmentSum","int32");p(y(n),(()=>"numSegments must be of dtype int"));const s={x:a,segmentIds:r},i={numSegments:n};return vr.runKernel(ta,s,i)}}),zh={kernelName:ut,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[a,r]=t,{axis:s,batchDims:i}=n,o=I(s,a.shape)[0],u=(e,t,n)=>()=>{const a=e.shape,r=t.size,i=a.slice(0,o),u=i.length,l=a.slice(s,a.length).slice(1),c=l.length,h=Ph(0,u),d=Ph(u+1,u+1+c),p=Wh([i,[r],l]),f=Xi(n,p),m=Xi(t,[r]),g=Wh([[u],h,d]),b=Ou(f,g);let y=Lh(b,m,e.shape[o]);const x=Uo(g);return y=Ou(y,x),y};if(1===i){const t=a.shape[0],n=a.split(t,0);return{x:()=>{const t=$u(n.map(((t,n)=>u(t,r.slice(n,1),e.slice(n,1))())));return t.reshape(a.shape)},indices:()=>r}}return{x:u(a,r,e),indices:()=>r}}};function Ph(e,t){const n=[];for(let a=e;a<t;++a)n.push(a);return n}function Wh(e){const t=[];for(let n=0;n<e.length;++n)for(let a=0;a<e[n].length;++a)t.push(e[n][a]);return t}const Bh={kernelName:ht,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>Es(n),b:()=>Es(a)}}},Uh={kernelName:dt,gradFunc:e=>({x:()=>vs(e,"float32")})},Vh={kernelName:mt,gradFunc:e=>({x:()=>Es(e)})},Gh={kernelName:gt,gradFunc:e=>({x:()=>Es(e)})},Hh={kernelName:bt,gradFunc:e=>({x:()=>Es(e)})},jh={kernelName:yt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{alpha:r}=n,s=To(a,0);return{x:()=>Fu(s,e,$s(e,r))}}},qh={kernelName:It,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Cs(e,Ss(n,1))}}},Kh={kernelName:vt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Cs(e,vs(n,"float32"))}}},Xh={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n;return{logits:()=>{const t=vo(a);return Vs(e,$s(Do(e,r,!0),t))}}}},Yh=Ar({localResponseNormalizationBackprop_:function(e,t,n,a=5,r=1,s=1,i=.5){const o={x:e,y:t,dy:n},u={depthRadius:a,bias:r,alpha:s,beta:i};return vr.runKernel(Tt,o,u)}}),Jh={kernelName:$t,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{depthRadius:s,bias:i,alpha:o,beta:u}=n;return{x:()=>Yh(a,r,e,s,i,o,u)}}};function Zh(e,t,n,a){return t.rank<n.rank&&(t=Xi(t,Po(t.shape,a))),e.rank<n.rank&&(e=Xi(e,Po(e.shape,a))),{x:()=>$s(e,vs(wo(n,t),e.dtype))}}const Qh={kernelName:_t,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const a=n,{reductionIndices:r}=a,s=t[0],i=Zh(e,t[1],s,I(r,s.shape));return{x:()=>i.x()}}},ed={kernelName:Et,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>$s(e,vs(_o(n,a),"float32")),b:()=>$s(e,vs(Nl(n,a),"float32"))}}},td=Ar({maxPool3dGrad_:function(e,t,n,a,r,s,i){const o=Er(e,"dy","maxPool3dGrad"),u=Er(t,"input","maxPool3dGrad"),l=Er(n,"output","maxPool3dGrad");let c=o,h=u,d=l,f=!1;4===u.rank&&(f=!0,c=Xi(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=Xi(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),d=Xi(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),p(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),p(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),p(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),Ki("maxPool3dGrad",s,i);const m={dy:c,input:h,output:d},g={filterSize:a,strides:r,pad:s,dimRoundingMode:i},b=vr.runKernel(Dt,m,g);return f?Xi(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}}),nd={kernelName:Ft,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=n;return{x:()=>td(e,a,r,s,i,o,u)}}},ad=Ar({maxPoolGrad_:function(e,t,n,a,r,s,i){const o=Er(e,"dy","maxPoolGrad"),u=Er(t,"input","maxPoolGrad"),l=Er(n,"output","maxPoolGrad");p(u.rank===o.rank,(()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`)),p(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),p(4===u.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`)),Ki("maxPoolGrad",s,i);const c={dy:o,input:u,output:l},h={filterSize:a,strides:r,pad:s,dimRoundingMode:i};return vr.runKernel(At,c,h)}}),rd={kernelName:Rt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>ad(e,a,r,s,i,o)}}},sd={kernelName:Ot,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n,s=I(r,a.shape),i=g(zo(a.shape,s)[1]);return{x:()=>{const t=a.shape.slice();s.forEach((e=>{t[e]=1}));const n=Xi(e,t);return Cs($s(n,au(a.shape,"float32")),i)}}}},id={kernelName:Lt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const a=n,{axis:r}=a,[s,i]=t,o=Zh(e,i,s,I(r,s.shape));return{x:()=>o.x()}}},od={kernelName:zt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>$s(e,vs(kl(n,a),"float32")),b:()=>$s(e,vs(To(n,a),"float32"))}}},ud={kernelName:Pt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const a=t[0],{paddings:r}=n,s=r.map((e=>e[0]));return{x:()=>yu(e,s,a.shape)}}},ld={kernelName:Wt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=Ks(n.shape,a.shape);return{a:()=>{const t=qs(n.shape,r);return t.length>0?Xi(Do(e,t),n.shape):e},b:()=>{const t=$s(e,Qo(Co(Cs(n,a)))),s=qs(a.shape,r);return s.length>0?Xi(Do(t,s),a.shape):t}}}},cd={kernelName:Ut,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=Ks(n.shape,a.shape);return{a:()=>{const t=$s(e,vs(a,"float32")),s=qs(n.shape,r);return s.length>0?Xi(Do(t,s),n.shape):t},b:()=>{const t=$s(e,vs(n,"float32")),s=qs(a.shape,r);return s.length>0?Xi(Do(t,s),a.shape):t}}}},hd={kernelName:Vt,gradFunc:e=>({x:()=>Qo(e)})},dd={kernelName:Xt,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>nu(n.shape,"float32")}}},pd={kernelName:Kt,gradFunc:e=>({x:()=>Es(e)})},fd={kernelName:Yt,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:a}=n;return Au(e,a).map((e=>()=>e))}},md={kernelName:Jt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const a=t[0],{paddings:r}=n,s=r.map((e=>e[0]));return{x:()=>yu(e,s,a.shape)}}},gd={kernelName:Zt,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,a,r]=t,s=n,i=a,o=Ks(s.shape,i.shape);return{a:()=>{const t=vs(i,"float32");let n=$s(e,$s(t,Us(s,Vs(t,As(1)))));const a=qs(s.shape,o);return a.length>0&&(n=Do(n,a)),Xi(n,s.shape)},b:()=>{const t=To(s,0),n=Fu(t,Ro(s),Es(s));let a=$s(e,$s(r,n));const u=qs(i.shape,o);return u.length>0&&(a=Do(a,u)),Xi(a,i.shape)}}}},bd={kernelName:Qt,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,a]=t,r=To(n,0);return{x:()=>Fu(r,e,$s(e,a)),alpha:()=>{let t=Fu(r,Es(e),$s(e,n));const s=qs(a.shape,e.shape);return s.length>0&&(t=Do(t,s)),Xi(t,a.shape)}}}},yd=Ar({cumprod_:function(e,t=0,n=!1,a=!1){const r={x:Er(e,"x","cumprod")},s={axis:t,exclusive:n,reverse:a};return vr.runKernel(Me,r,s)}});const xd={kernelName:en,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n;let s=[];return s=null==r?a.shape.map(((e,t)=>t)):"number"==typeof r?[r]:r,{x:()=>function(e,t,n){const a=e.shape.length,r=a-n.length,s=Bo(n,a);let i=e;null!=s&&(i=Ou(e,s));const o=i.shape.slice(),u=o.splice(a-n.length,n.length).reduce(((e,t)=>e*t),1);o.push(u);let l=function(e,t,n){const a=e.shape.slice();a[n]=1;const r=Xi(t,a),s=yd(e,n,!0,!1),i=yd(e,n,!0,!0),o=$s(s,i);return $s(r,o)}(i.reshape(o),t,r);if(l=l.reshape(i.shape),null!=s){const e=Uo(s);l=Ou(l,e)}return l}(a,e,s)}}},wd={kernelName:qe,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=Ks(n.shape,a.shape);return{a:()=>{const t=Cs(e,vs(a,"float32")),s=qs(n.shape,r);return s.length>0?Xi(Do(t,s),n.shape):t},b:()=>{let t=$s(e,vs(n,"float32"));const s=qs(a.shape,r);s.length>0&&(t=Xi(Do(t,s),a.shape));const i=_s(a);return Qo(Cs(t,vs(i,"float32")))}}}},kd={kernelName:on,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Cs(e,Qo(_s(n)))}}},vd={kernelName:fn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,a=$s(kl(n,6),Gu(n));return{x:()=>$s(e,vs(a,"float32"))}}},Id={kernelName:un,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$s(e,vs(Gu(n),"float32"))}}},Sd={kernelName:ln,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Xi(e,n.shape)}}},Nd={kernelName:dn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[a]=t,r={dy:e,images:a};return{images:()=>vr.runKernel(pn,r,n)}}},Cd={kernelName:cn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[a]=t,r={dy:e,images:a};return{images:()=>vr.runKernel(hn,r,n)}}},$d={kernelName:mn,gradFunc:(e,t,n)=>{const{dims:a}=n,r=I(a,e.shape);return{x:()=>fu(e,r)}}},Td={kernelName:gn,gradFunc:e=>({x:()=>Es(e)})},_d={kernelName:bn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qo(Cs(e,$s(Us(n,1.5),2)))}}},Ed=Ar({logicalNot_:function(e){const t={x:Er(e,"x","logicalNot","bool")};return vr.runKernel(Nt,t)}}),Rd={kernelName:kn,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>vs(Es(n),"float32"),t:()=>$s(e,vs(n,e.dtype)),e:()=>$s(e,vs(Ed(n),e.dtype))}}},Ad={kernelName:vn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=To(n,As(0)),a=As(ec),r=As(tc),s=$s(e,r),i=$s($s(e,a),vo(vs(n,"float32")));return Fu(t,s,i)}}}},Fd={kernelName:$n,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$s(e,$s(n,Vs(As(1),n)))}}},Dd={kernelName:Cn,gradFunc:e=>({x:()=>Es(e)})},Md=Ar({cos_:function(e){const t={x:Er(e,"x","cos","float32")};return vr.runKernel(Fe,t)}}),Od={kernelName:Sn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$s(Md(vs(n,"float32")),e)}}},Ld=Ar({cosh_:function(e){const t={x:Er(e,"x","cosh","float32")};return vr.runKernel(De,t)}}),zd={kernelName:Nn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$s(Ld(vs(n,"float32")),e)}}},Pd={kernelName:In,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{begin:r,size:s}=n,i=a.shape,[o,u]=Ti(a,r,s),l=[];for(let t=0;t<e.rank;t++)l.push([o[t],i[t]-o[t]-u[t]]);return{x:()=>su(e,l)}}},Wd={kernelName:Fn,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a]=t,{dim:r}=n,s=$s(e,a);return{logits:()=>Vs(s,$s(Do(s,[r],!0),a))}}},Bd={kernelName:Tn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$s(e,bu(n))}}},Ud=Ar({batchToSpaceND_:function(e,t,n){const a=Er(e,"x","batchToSpaceND"),r=t.reduce(((e,t)=>e*t));p(a.rank>=1+t.length,(()=>`input rank is ${a.rank} but should be > than blockShape.length ${t.length}`)),p(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),p(a.shape[0]%r==0,(()=>`input tensor batch is ${a.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`));const s={x:a},i={blockShape:t,crops:n};return vr.runKernel(be,s,i)}}),Vd={kernelName:Rn,gradFunc:(e,t,n)=>{const{blockShape:a,paddings:r}=n;return{x:()=>Ud(e,a,r)}}},Gd={kernelName:An,gradFunc:(e,t,n)=>{const{axis:a}=n;return{x:()=>ro(e,a)}}},Hd=[Hc,jc,qc,Kc,Xc,Yc,Jc,Zc,Qc,eh,th,nh,rh,ih,oh,lh,ch,hh,dh,ph,fh,mh,bh,gh,xh,kh,Ih,Nh,Ch,$h,wd,Th,_h,Eh,Rh,Ah,Dh,Fh,Oh,zh,Bh,Uh,Vh,Gh,Hh,jh,qh,Kh,Xh,Jh,Qh,Qh,ed,nd,rd,sd,id,od,ud,ld,cd,hd,dd,pd,fd,md,md,gd,bd,xd,kd,vd,Id,Sd,Nd,Cd,$d,Td,_d,Rd,Ad,Fd,Dd,Od,zd,Pd,Wd,Bd,Vd,Vd,Gd,Gd,{kernelName:_n,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Cs(e,$s(Ts(vs(n,"float32")),2))}}},{kernelName:Pn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=As(2);return{a:()=>$s(e,$s(r,Vs(n,a))),b:()=>$s(e,$s(r,Vs(a,n)))}}},{kernelName:Wn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$s(e,$s(vs(n,"float32"),2))}}},{kernelName:aa,gradFunc:e=>({x:()=>Es(e)})},{kernelName:jn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=Ks(n.shape,a.shape);return{a:()=>{let t=e;const a=qs(n.shape,r);return a.length>0&&(t=Do(t,a)),Xi(t,n.shape)},b:()=>{let t=e;const n=qs(a.shape,r);return n.length>0&&(t=Do(t,n)),Xi(Qo(t),a.shape)}}}},{kernelName:En,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,r=a.shape.slice(),{axis:s}=n;I(s,a.shape).forEach((e=>{r[e]=1}));const i=Xi(e,r),o=$s(i,au(a.shape,"float32"));return{x:()=>o}}},{kernelName:qn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Cs(e,_s(Md(n)))}}},{kernelName:Kn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$s(Vs(As(1),_s(n)),e)}}},{kernelName:Xn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{reps:r}=n;return{x:()=>{let t=Es(a);if(1===a.rank)for(let n=0;n<r[0];++n)t=Ss(t,yu(e,[n*a.shape[0]],[a.shape[0]]));else if(2===a.rank)for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)t=Ss(t,yu(e,[n*a.shape[0],s*a.shape[1]],[a.shape[0],a.shape[1]]));else if(3===a.rank)for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)for(let i=0;i<r[2];++i)t=Ss(t,yu(e,[n*a.shape[0],s*a.shape[1],i*a.shape[2]],[a.shape[0],a.shape[1],a.shape[2]]));else{if(4!==a.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${a.rank} tensors yet.`);for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)for(let i=0;i<r[2];++i)for(let o=0;o<r[3];++o)t=Ss(t,yu(e,[n*a.shape[0],s*a.shape[1],i*a.shape[2],o*a.shape[3]],[a.shape[0],a.shape[1],a.shape[2],a.shape[3]]))}return t}}}},{kernelName:Zn,gradFunc:(e,t,n)=>{const a=n,{perm:r}=a,s=Uo(r);return{x:()=>Ou(e,s)}}},{kernelName:ea,gradFunc:(e,t,n)=>{const a=n,{axis:r}=a;return{value:()=>$u(e,r)}}},{kernelName:ta,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Xs(t,Es(t)),a=$o(e,n);let r=_o(t,As(0,"int32"));const s=a.rank-r.rank;for(let e=0;e<s;++e)r=Io(r,e+1);r=Ho(r,au(a.shape,"bool"));const i=Es(a);return Fu(r,a,i)}(e,n)}}},{kernelName:na,gradFunc:e=>({x:()=>Es(e)})}];for(const e of Hd)ga(e);nr().prototype.abs=function(){return this.throwIfDisposed(),Hs(this)};const jd=Ar({acos_:function(e){const t={x:Er(e,"x","acos")};return vr.runKernel(Q,t)}});nr().prototype.acos=function(){return this.throwIfDisposed(),jd(this)};const qd=Ar({acosh_:function(e){const t={x:Er(e,"x","acosh")};return vr.runKernel(ee,t)}});nr().prototype.acosh=function(){return this.throwIfDisposed(),qd(this)},nr().prototype.add=function(e){return this.throwIfDisposed(),Ss(this,e)},nr().prototype.all=function(e,t){return this.throwIfDisposed(),Ri(this,e,t)},nr().prototype.any=function(e,t){return this.throwIfDisposed(),Ai(this,e,t)},nr().prototype.argMax=function(e){return this.throwIfDisposed(),Fi(this,e)};const Kd=Ar({argMin_:function(e,t=0){const n={x:Er(e,"x","argMin")},a={axis:t};return vr.runKernel(ie,n,a)}});nr().prototype.argMin=function(e){return this.throwIfDisposed(),Kd(this,e)},nr().prototype.asScalar=function(){return this.throwIfDisposed(),p(1===this.size,(()=>"The array must have only 1 element.")),Xi(this,[])},nr().prototype.asType=function(e){return this.throwIfDisposed(),vs(this,e)},nr().prototype.as1D=function(){return this.throwIfDisposed(),Xi(this,[this.size])},nr().prototype.as2D=function(e,t){return this.throwIfDisposed(),Xi(this,[e,t])},nr().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Xi(this,[e,t,n])},nr().prototype.as4D=function(e,t,n,a){return this.throwIfDisposed(),Xi(this,[e,t,n,a])},nr().prototype.as5D=function(e,t,n,a,r){return this.throwIfDisposed(),Xi(this,[e,t,n,a,r])};const Xd=Ar({asin_:function(e){const t={x:Er(e,"x","asin")};return vr.runKernel(oe,t)}});nr().prototype.asin=function(){return this.throwIfDisposed(),Xd(this)};const Yd=Ar({asinh_:function(e){const t={x:Er(e,"x","asinh")};return vr.runKernel(ue,t)}});nr().prototype.asinh=function(){return this.throwIfDisposed(),Yd(this)};const Jd=Ar({atan_:function(e){const t={x:Er(e,"x","atan")};return vr.runKernel(le,t)}});nr().prototype.atan=function(){return this.throwIfDisposed(),Jd(this)};const Zd=Ar({atan2_:function(e,t){let n=Er(e,"a","atan2"),a=Er(t,"b","atan2");[n,a]=fr(n,a);const r={a:n,b:a};return vr.runKernel(he,r)}});nr().prototype.atan2=function(e){return this.throwIfDisposed(),Zd(this,e)};const Qd=Ar({atanh_:function(e){const t={x:Er(e,"x","atanh")};return vr.runKernel(ce,t)}});nr().prototype.atanh=function(){return this.throwIfDisposed(),Qd(this)},nr().prototype.avgPool=function(e,t,n,a){return this.throwIfDisposed(),Yi(this,e,t,n,a)},nr().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Ud(this,e,t)},nr().prototype.batchNorm=function(e,t,n,a,r){return this.throwIfDisposed(),Zi(this,e,t,n,a,r)},nr().prototype.broadcastTo=function(e){return this.throwIfDisposed(),no(this,e)},nr().prototype.cast=function(e){return this.throwIfDisposed(),vs(this,e)};const ep=Ar({ceil_:function(e){const t={x:Er(e,"x","ceil","float32")};return vr.runKernel(ve,t)}});nr().prototype.ceil=function(){return this.throwIfDisposed(),ep(this)},nr().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),ao(this,e,t)},nr().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof tr&&(e=[e]),ro([this,...e],t)},nr().prototype.conv1d=function(e,t,n,a,r,s){return this.throwIfDisposed(),co(this,e,t,n,a,r,s)},nr().prototype.conv2dTranspose=function(e,t,n,a,r){return this.throwIfDisposed(),po(this,e,t,n,a,r)},nr().prototype.conv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),lo(this,e,t,n,a,r,s)},nr().prototype.cos=function(){return this.throwIfDisposed(),Md(this)},nr().prototype.cosh=function(){return this.throwIfDisposed(),Ld(this)},nr().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),yd(this,e,t,n)},nr().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Sh(this,e,t,n)};const tp=Ar({depthToSpace_:function(e,t,n="NHWC"){const a=Er(e,"x","depthToSpace","float32"),r="NHWC"===n?a.shape[1]:a.shape[2],s="NHWC"===n?a.shape[2]:a.shape[3],i="NHWC"===n?a.shape[3]:a.shape[1];p(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),p(r*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${r} and ${t}  for depthToSpace with input shape\n    ${a.shape}`)),p(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${a.shape}`)),p(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${a.shape}`));const o={x:a},u={blockSize:t,dataFormat:n};return vr.runKernel(Pe,o,u)}});nr().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),tp(this,e,t)},nr().prototype.depthwiseConv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),yo(this,e,t,n,a,r,s)};const np=Ar({dilation2d_:function(e,t,n,a,r=[1,1],s="NHWC"){const i=Er(e,"x","dilation2d"),o=Er(t,"filter","dilation2d");p(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),p(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),p("NHWC"===s,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`));let u=i,l=!1;3===i.rank&&(u=Xi(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=!0),p(u.shape[3]===o.shape[2],(()=>`Error in dilation2d:  input and filter must have the same depth: ${u.shape[3]} vs ${o.shape[2]}`));const c={x:u,filter:o},h={strides:n,pad:a,dilations:r},d=vr.runKernel(Ge,c,h);return l?Xi(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});nr().prototype.dilation2d=function(e,t,n,a,r){return this.throwIfDisposed(),np(this,e,t,n,a,r)};const ap=Ar({divNoNan_:function(e,t){let n=Er(e,"a","div"),a=Er(t,"b","div");[n,a]=fr(n,a);const r=Cs(n,a),s=Es(r),i=wo(a,s);return Fu(i,s,r)}});nr().prototype.divNoNan=function(e){return this.throwIfDisposed(),ap(this,e)},nr().prototype.div=function(e){return this.throwIfDisposed(),Cs(this,e)};const rp=Ar({dot_:function(e,t){const n=Er(e,"t1","dot"),a=Er(t,"t2","dot");p(!(1!==n.rank&&2!==n.rank||1!==a.rank&&2!==a.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${a.rank}.`));const r=1===n.rank?n.size:n.shape[1],s=1===a.rank?a.size:a.shape[0];if(p(r===s,(()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${s}.`)),1===n.rank&&1===a.rank){const e=Xi(n,[1,-1]),t=Xi(a,[-1,1]),r=jo(e,t);return Xi(r,[])}if(1===n.rank&&2===a.rank){const e=Xi(n,[1,-1]),t=Xi(a,[a.shape[0],a.shape[1]]),r=jo(e,t);return Xi(r,[r.size])}if(2===n.rank&&1===a.rank){const e=Xi(a,[-1,1]),t=jo(n,e);return Xi(t,[t.size])}{const e=Xi(a,[a.shape[0],a.shape[1]]);return jo(n,e)}}});nr().prototype.dot=function(e){return this.throwIfDisposed(),rp(this,e)},nr().prototype.elu=function(){return this.throwIfDisposed(),xo(this)},nr().prototype.equal=function(e){return this.throwIfDisposed(),wo(this,e)},nr().prototype.erf=function(){return this.throwIfDisposed(),ko(this)};const sp=Ar({euclideanNorm_:function(e,t=null,n=!1){return Tl(e,"euclidean",t,n)}});nr().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),sp(this,e,t)},nr().prototype.exp=function(){return this.throwIfDisposed(),vo(this)},nr().prototype.expandDims=function(e){return this.throwIfDisposed(),Io(this,e)};const ip=Ar({expm1_:function(e){const t={x:Er(e,"x","expm1")};return vr.runKernel(tt,t)}});nr().prototype.expm1=function(){return this.throwIfDisposed(),ip(this)},nr().prototype.fft=function(){return this.throwIfDisposed(),zu(this)},nr().prototype.flatten=function(){return this.throwIfDisposed(),Xi(this,[this.size])},nr().prototype.floor=function(){return this.throwIfDisposed(),Co(this)},nr().prototype.floorDiv=function(e){return this.throwIfDisposed(),Ns(this,e)},nr().prototype.gather=function(e,t,n){return this.throwIfDisposed(),$o(this,e,t,n)},nr().prototype.greaterEqual=function(e){return this.throwIfDisposed(),_o(this,e)},nr().prototype.greater=function(e){return this.throwIfDisposed(),To(this,e)},nr().prototype.ifft=function(){return this.throwIfDisposed(),Wu(this)},nr().prototype.irfft=function(){return this.throwIfDisposed(),Bu(this)};const op=Ar({isFinite_:function(e){const t={x:Er(e,"x","isFinite")};return vr.runKernel(mt,t)}});nr().prototype.isFinite=function(){return this.throwIfDisposed(),op(this)};const up=Ar({isInf_:function(e){const t={x:Er(e,"x","isInf")};return vr.runKernel(gt,t)}});nr().prototype.isInf=function(){return this.throwIfDisposed(),up(this)};const lp=Ar({isNaN_:function(e){const t={x:Er(e,"x","isNaN")};return vr.runKernel(bt,t)}});nr().prototype.isNaN=function(){return this.throwIfDisposed(),lp(this)},nr().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Eo(this,e)},nr().prototype.lessEqual=function(e){return this.throwIfDisposed(),kl(this,e)},nr().prototype.less=function(e){return this.throwIfDisposed(),Nl(this,e)};const cp=Ar({localResponseNormalization_:function(e,t=5,n=1,a=1,r=.5){const s=Er(e,"x","localResponseNormalization");p(4===s.rank||3===s.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`)),p(y(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=s,o=!1;3===s.rank&&(o=!0,i=Xi(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const u={x:i},l={depthRadius:t,bias:n,alpha:a,beta:r},c=vr.runKernel($t,u,l);return o?Xi(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});nr().prototype.localResponseNormalization=function(e,t,n,a){return this.throwIfDisposed(),cp(this,e,t,n,a)};const hp=Ar({logSigmoid_:function(e){const t=Er(e,"x","logSigmoid");return Rs((e=>({value:Qo(Su(Qo(e))),gradFunc:t=>$s(t,bu(Qo(e)))})))(t)}});nr().prototype.logSigmoid=function(){return this.throwIfDisposed(),hp(this)},nr().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Mo(this,e)},nr().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Go(this,e,t)},nr().prototype.log=function(){return this.throwIfDisposed(),Ro(this)},nr().prototype.log1p=function(){return this.throwIfDisposed(),Ao(this)},nr().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Ho(this,e)},nr().prototype.logicalNot=function(){return this.throwIfDisposed(),Ed(this)};const dp=Ar({logicalOr_:function(e,t){const n=Er(e,"a","logicalOr","bool"),a=Er(t,"b","logicalOr","bool");Ks(n.shape,a.shape);const r={a:n,b:a};return vr.runKernel(Ct,r)}});nr().prototype.logicalOr=function(e){return this.throwIfDisposed(),dp(this,e)};const pp=Ar({logicalXor_:function(e,t){const n=Er(e,"a","logicalXor","bool"),a=Er(t,"b","logicalXor","bool");return Ks(n.shape,a.shape),Ho(dp(e,t),Ed(Ho(e,t)))}});nr().prototype.logicalXor=function(e){return this.throwIfDisposed(),pp(this,e)},nr().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),jo(this,e,t,n)},nr().prototype.maxPool=function(e,t,n,a){return this.throwIfDisposed(),qo(this,e,t,n,a)},nr().prototype.max=function(e,t){return this.throwIfDisposed(),Fo(this,e,t)},nr().prototype.maximum=function(e){return this.throwIfDisposed(),Xs(this,e)},nr().prototype.mean=function(e,t){return this.throwIfDisposed(),Xo(this,e,t)},nr().prototype.min=function(e,t){return this.throwIfDisposed(),Yo(this,e,t)},nr().prototype.minimum=function(e){return this.throwIfDisposed(),Jo(this,e)};const fp=Ar({mirrorPad_:function(e,t,n){p("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const a=Er(e,"x","mirrorPad");if(0===a.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");p(t.length===a.rank,(()=>`Padding doesn't match input. Must be ${a.rank}. Got ${t.length}.`));const r="reflect"===n?1:0;for(let e=0;e<a.rank;e++)p(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),p(t[e][0]>=0&&t[e][0]<=a.shape[e]-r&&t[e][1]>=0&&t[e][1]<=a.shape[e]-r,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${a.shape[e]-r} or less than 0 for input of shape ${a.shape}`));const s={paddings:t,mode:n},i={x:a};return vr.runKernel(Pt,i,s)}});nr().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),fp(this,e,t)};const mp=Ar({mod_:function(e,t){let n=Er(e,"a","mod"),a=Er(t,"b","mod");[n,a]=fr(n,a);const r={a:n,b:a};return vr.runKernel(Wt,r)}});nr().prototype.mod=function(e){return this.throwIfDisposed(),mp(this,e)},nr().prototype.mul=function(e){return this.throwIfDisposed(),$s(this,e)},nr().prototype.neg=function(){return this.throwIfDisposed(),Qo(this)},nr().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Tl(this,e,t,n)},nr().prototype.notEqual=function(e){return this.throwIfDisposed(),eu(this,e)},nr().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),tu(this,e,t,n)},nr().prototype.onesLike=function(){return this.throwIfDisposed(),ru(this)},nr().prototype.pad=function(e,t){return this.throwIfDisposed(),su(this,e,t)};const gp=Ar({pool_:function(e,t,n,a,r,s,i){null==r&&(r=[1,1]),null==s&&(s=1),0===a&&(a="valid");const o=Er(e,"x","maxPool");let u=o,l=!1;3===o.rank&&(l=!0,u=Xi(o,[1,o.shape[0],o.shape[1],o.shape[2]])),p(Hi(s,r),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${r}'`));const c=Mi(u.shape,t,s,r,a),h=[c.dilationHeight,c.dilationWidth];let d;d="same"===a?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),a=n.map((e=>Math.floor(e/2))),r=n.map(((e,t)=>e-a[t]));return n.map(((e,t)=>[a[t],r[t]]))}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const f=1===h[0]&&1===h[1],[m,g]=function(e,t,n){const a=n.map((e=>e[0])),r=n.map((e=>e[1])),s=e.concat(a,r),i=t.map(((e,t)=>(e-s[t]%e)%e)),o=r.map(((e,t)=>e+i[t]));return[t.map(((e,t)=>[a[t],o[t]])),t.map(((e,t)=>[0,i[t]]))]}([c.inHeight,c.inWidth],h,d),b=f?a:"valid",y=f?u:uh(u,h,m),x=("avg"===n?()=>Yi(y,t,s,b,i):()=>qo(y,t,s,b,i))(),w=f?x:Ud(x,h,g);return l?Xi(w,[w.shape[1],w.shape[2],w.shape[3]]):w}});nr().prototype.pool=function(e,t,n,a,r,s){return this.throwIfDisposed(),gp(this,e,t,n,a,r,s)},nr().prototype.pow=function(e){return this.throwIfDisposed(),Us(this,e)},nr().prototype.prelu=function(e){return this.throwIfDisposed(),iu(this,e)};const bp=Ar({prod_:function(e,t=null,n=!1){let a=Er(e,"x","prod");"bool"===a.dtype&&(a=vs(a,"int32"));const r={x:a},s={axis:t,keepDims:n};return vr.runKernel(en,r,s)}});nr().prototype.prod=function(e,t){return this.throwIfDisposed(),bp(this,e,t)};const yp=Ar({reciprocal_:function(e){const t={x:Er(e,"x","reciprocal")};return vr.runKernel(on,t)}});nr().prototype.reciprocal=function(){return this.throwIfDisposed(),yp(this)},nr().prototype.relu=function(){return this.throwIfDisposed(),pu(this)},nr().prototype.relu6=function(){return this.throwIfDisposed(),Vu(this)},nr().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Xi(this,e.shape)},nr().prototype.reshape=function(e){return this.throwIfDisposed(),Xi(this,e)},nr().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),yl(this,e,t,n)},nr().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),xl(this,e,t,n)},nr().prototype.reverse=function(e){return this.throwIfDisposed(),fu(this,e)},nr().prototype.rfft=function(){return this.throwIfDisposed(),Pu(this)},nr().prototype.round=function(){return this.throwIfDisposed(),vl(this)},nr().prototype.rsqrt=function(){return this.throwIfDisposed(),Mh(this)},nr().prototype.selu=function(){return this.throwIfDisposed(),mu(this)},nr().prototype.separableConv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),gu(this,e,t,n,a,r,s)},nr().prototype.sigmoid=function(){return this.throwIfDisposed(),bu(this)};const xp=Ar({sign_:function(e){const t={x:Er(e,"x","sign")};return vr.runKernel(Cn,t)}});nr().prototype.sign=function(){return this.throwIfDisposed(),xp(this)},nr().prototype.sin=function(){return this.throwIfDisposed(),wh(this)},nr().prototype.sinh=function(){return this.throwIfDisposed(),vh(this)},nr().prototype.slice=function(e,t){return this.throwIfDisposed(),yu(this,e,t)},nr().prototype.softmax=function(e){return this.throwIfDisposed(),Iu(this,e)},nr().prototype.softplus=function(){return this.throwIfDisposed(),Su(this)},nr().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),uh(this,e,t)},nr().prototype.split=function(e,t){return this.throwIfDisposed(),Nu(this,e,t)},nr().prototype.sqrt=function(){return this.throwIfDisposed(),Ts(this)},nr().prototype.square=function(){return this.throwIfDisposed(),_s(this)},nr().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Fl(this,e)},nr().prototype.squeeze=function(e){return this.throwIfDisposed(),Cu(this,e)},nr().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof tr?[this,e]:[this,...e];return $u(n,t)},nr().prototype.step=function(e){return this.throwIfDisposed(),Gu(this,e)};const wp=Ar({stridedSlice_:function(e,t,n,a,r=0,s=0,i=0,o=0,u=0){const l={x:Er(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:a,beginMask:r,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};return vr.runKernel(Un,l,c)}});nr().prototype.stridedSlice=function(e,t,n,a,r,s,i,o){return this.throwIfDisposed(),wp(this,e,t,n,a,r,s,i,o)},nr().prototype.sub=function(e){return this.throwIfDisposed(),Vs(this,e)},nr().prototype.sum=function(e,t){return this.throwIfDisposed(),Do(this,e,t)};const kp=Ar({tan_:function(e){const t={x:Er(e,"x","tan","float32")};return vr.runKernel(qn,t)}});nr().prototype.tan=function(){return this.throwIfDisposed(),kp(this)},nr().prototype.tanh=function(){return this.throwIfDisposed(),Tu(this)},nr().prototype.tile=function(e){return this.throwIfDisposed(),So(this,e)},nr().prototype.toBool=function(){return this.throwIfDisposed(),vs(this,"bool")},nr().prototype.toFloat=function(){return this.throwIfDisposed(),vs(this,"float32")},nr().prototype.toInt=function(){return this.throwIfDisposed(),vs(this,"int32")};const vp=Ar({topk_:function(e,t=1,n=!0){const a=Er(e,"x","topk");if(0===a.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const r=a.shape[a.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);const s={x:a},i={k:t,sorted:n},[o,u]=vr.runKernel(Yn,s,i);return{values:o,indices:u}}});nr().prototype.topk=function(e,t){return this.throwIfDisposed(),vp(this,e,t)},nr().prototype.transpose=function(e){return this.throwIfDisposed(),Ou(this,e)};const Ip=Ar({unique_:function(e,t=0){const n=Er(e,"x","unique","string_or_numeric");p(n.rank>0,(()=>"The input tensor must be at least 1D"));const a={x:n},r={axis:t},[s,i]=vr.runKernel(Qn,a,r);return{values:s,indices:i}}});nr().prototype.unique=function(e){return this.throwIfDisposed(),Ip(this,e)},nr().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Lh(this,e,t)},nr().prototype.unstack=function(e){return this.throwIfDisposed(),Au(this,e)},nr().prototype.where=function(e,t){return this.throwIfDisposed(),Fu(e,this,t)},nr().prototype.zerosLike=function(){return this.throwIfDisposed(),Es(this)};class Sp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Sp.prototype)}}class Np extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Np.prototype)}}class Cp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Cp.prototype)}}class $p extends Error{constructor(e){super(e),Object.setPrototypeOf(this,$p.prototype)}}class Tp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Tp.prototype)}}Error;class _p{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function Ep(e,t){if(Array.isArray(e)){let n=[];for(let a=0;a<t;a++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function Rp(e,t){if(!e)throw new Tp(t)}function Ap(e,t){let n=0;for(const a of e)a===t&&n++;return n}function Fp(e){return 1===e.length?e[0]:e}function Dp(e){return Array.isArray(e)?e:[e]}function Mp(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function Op(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let Lp={};function zp(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Pp(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>Pp(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?Pp(t):e[n]=t.value)}}}function Wp(e,t={},n={},a="object",r=!1){if("string"==typeof e){const r=e;let s;if(r in n)s=n[r];else if(r in Lp)s=Lp[r];else if(s=t[r],null==s)throw new Cp(`Unknown ${a}: ${e}. This may be due to one of the following reasons:\n1. The ${a} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${a} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return s}{const s=e;if(null==s.className||null==s.config)throw new Cp(`${a}: Improper config format: ${JSON.stringify(s)}.\n'className' and 'config' must set.`);const i=s.className;let o,u;if(i in n?[o,u]=n[i]:i in Lp?[o,u]=Lp.className:i in t&&([o,u]=t[i]),null==o)throw new Cp(`Unknown ${a}: ${i}. This may be due to one of the following reasons:\n1. The ${a} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${a} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const e={};for(const t of Object.keys(Lp))e[t]=Lp[t];for(const t of Object.keys(n))e[t]=n[t];s.config.customObjects=e;const t=Object.assign({},Lp);for(const e of Object.keys(n))Lp[e]=n[e];Pp(s.config);const a=u(o,s.config,n,r);return Lp=Object.assign({},t),a}{const e=Object.assign({},Lp);for(const e of Object.keys(n))Lp[e]=n[e];const t=new o(s.config);return Lp=Object.assign({},e),t}}}function Bp(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function Up(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function Vp(e){if(null==e)throw new Cp(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function Gp(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new Cp(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Hp(e,t,n=0,a=1/0){return Rp(n>=0),Rp(a>=n),Array.isArray(e)&&e.length>=n&&e.length<=a&&e.every((e=>typeof e===t))}function jp(e,t){Array.isArray(e)?(p(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>jp(e,`element ${n+1} of ${t}`)))):p(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${qp(e)}.`))}function qp(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>qp(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function Kp(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let Xp=0;function Yp(){return Xp++}const Jp={};function Zp(e=""){return e in Jp||(Jp[e]=0),Jp[e]+=1,e+Jp[e].toString()}const Qp=["channelsFirst","channelsLast"],ef=["nearest","bilinear"],tf=["valid","same","causal"],nf=["max","avg"],af=["sum","mul","concat","ave"],rf=new Map;function sf(e){Gp(Qp,"DataFormat",e)}function of(e){Gp(tf,"PaddingMode",e)}function uf(e){Gp(nf,"PoolMode",e)}const lf=[];function cf(e,t){lf.push(e);try{const e=t();return lf.pop(),e}catch(e){throw lf.pop(),e}}function hf(e){if(!ff(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===lf.length?"":lf.join("/")+"/")+e}function df(e){if(!ff(e))throw new Error("Not a valid tensor name: '"+e+"'");rf.has(e)||rf.set(e,0);const t=rf.get(e);if(rf.set(e,rf.get(e)+1),t>0){const n=`${e}_${t}`;return rf.set(n,1),n}return e}const pf=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function ff(e){return!!e.match(pf)}function mf(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let a=1;for(let r=t;r<n;++r)a*=e[r];return a}function gf(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const a=e[n];a<t&&(t=a)}return t}function bf(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const a=e[n];a>t&&(t=a)}return t}function yf(e,t){if(t<e)throw new Cp(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let a=e;a<t;++a)n.push(a);return n}let xf;function wf(){return null==xf&&(xf=vr.backend.epsilon()),xf}function kf(e,t){return vs(e,t)}function vf(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),Xi(e,n)}function If(e,t,n){return Pr((()=>{switch(e.rank){case 1:return xu(e,t,n);case 2:return wu(e,[t,0],[n,e.shape[1]]);case 3:return ku(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return vu(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return yu(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return yu(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new Cp(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Sf(e,t,n){return Pr((()=>{switch(e.rank){case 1:return xu(e,t,n);case 2:return wu(e,[0,t],[e.shape[0],n]);case 3:return ku(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return vu(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new Cp(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Nf(e,t,n,a){return Pr((()=>{switch(e.rank){case 1:return xu(e,t,n);case 2:switch(a){case 1:return If(e,t,n);case 2:return Sf(e,t,n);default:throw new Cp(`The axis is not within the rank of the tensor ${a}`)}case 3:switch(a){case 1:return If(e,t,n);case 2:return ku(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Sf(e,t,n);default:throw new Cp(`The axis is not within the rank of the tensor ${a}`)}case 4:switch(a){case 1:return If(e,t,n);case 2:return vu(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return vu(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Sf(e,t,n);default:throw new Cp(`The axis is not within the rank of the tensor ${a}`)}default:throw new Cp(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Cf(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),ro(e,t)}function $f(e,t){switch(e.rank){case 1:return so([e,t]);case 2:return io([e,t],0);case 3:return oo([e,t],0);case 4:return uo([e,t],0);default:throw new Cp(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function Tf(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new Cp(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return So(e,t)}function _f(e,t=0,n=1,a,r){return cu(e,t,n,a,r)}function Ef(e,t,n,a){if(e.rank<2||t.rank<2)throw new $p(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new $p(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return Zu({a:e,b:t,transposeA:!1,transposeB:!1,bias:a?Ff(e.rank,a,"channelsLast"):null,activation:n});{const r=e.shape.slice(),s=r.pop();e=Xi(e,[-1,s]);const i=t.shape.slice(),o=i.pop(),u=i.pop(),l=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=Xi(Ou(t,c),[u,-1]);const h=[...r,...l];return Xi(Zu({a:e,b:t,transposeA:!1,transposeB:!1,bias:a?Ff(e.rank,a,"channelsLast"):null,activation:n}),h)}}function Rf(e,t,n){return Pr((()=>(t=Array.isArray(t)?_u(t,"int32"):vs(t,"int32"),$o(e,t,n))))}function Af(e){return $s(e,e)}function Ff(e,t,n){const a=t.shape;if(1!==t.rank&&t.rank!==e)throw new Cp(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===a.length?Xi(t,[1,a[0],1,1,1]):Xi(t,[1,a[3],a[0],a[1],a[2]]);if("channelsLast"===n)return 1===a.length?Xi(t,[1,1,1,1,a[0]]):Xi(t,[1].concat(a))}else if(4===e){if("channelsFirst"===n)return 1===a.length?Xi(t,[1,a[0],1,1]):Xi(t,[1,a[2],a[0],a[1]]);if("channelsLast"===n)return 1===a.length?Xi(t,[1,1,1,a[0]]):Xi(t,[1].concat(a))}else if(3===e){if("channelsFirst"===n)return 1===a.length?Xi(t,[1,a[0],1]):Xi(t,[1,a[1],a[0]]);if("channelsLast"===n)return 1===a.length?Xi(t,[1,1,a[0]]):Xi(t,[1].concat(a))}else if(e<3)return t;throw new Cp(`Unsupported input rank by biasAdd: ${t.rank}`)}function Df(e,t,n){return Pr((()=>(null==n&&(n="channelsLast"),sf(n),Ss(e,Ff(e.rank,t,n)))))}function Mf(e,t,n,a){return Pr((()=>Lu(e,t,n,a)))}function Of(e,t,n=!1){return n?e():t()}const Lf=["fanIn","fanOut","fanAvg"],zf=["normal","uniform","truncatedNormal"];class Pf extends Ms{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Wf extends Pf{apply(e,t){return nu(e,t)}}Wf.className="Zeros",Ls(Wf);class Bf extends Pf{apply(e,t){return au(e,t)}}Bf.className="Ones",Ls(Bf);class Uf extends Pf{constructor(e){if(super(),"object"!=typeof e)throw new Cp(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new Cp(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Pr((()=>$s(As(this.value),au(e,t))))}getConfig(){return{value:this.value}}}Uf.className="Constant",Ls(Uf);class Vf extends Pf{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return hu(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Vf.className="RandomUniform",Ls(Vf);class Gf extends Pf{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new $p(`randomNormal does not support dType ${t}.`);return _f(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Gf.className="RandomNormal",Ls(Gf);class Hf extends Pf{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new $p(`truncatedNormal does not support dType ${t}.`);return Ru(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Hf.className="TruncatedNormal",Ls(Hf);class jf extends Pf{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Pr((()=>{if(2!==e.length||e[0]!==e[1])throw new Cp("Identity matrix initializer can only be used for 2D square matrices.");return $s(this.gain,No(e[0]))}))}getConfig(){return{gain:this.gain}}}jf.className="Identity",Ls(jf);class qf extends Pf{constructor(e){if(super(),e.scale<0)throw new Cp(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,Gp(Lf,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){Gp(zf,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,a;if(sf(t),2===e.length)n=e[0],a=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=mf(e,2);n=e[1]*t,a=e[0]*t}else if("channelsLast"===t){const t=mf(e,0,e.length-2);n=e[e.length-2]*t,a=e[e.length-1]*t}}else{const t=mf(e);n=Math.sqrt(t),a=Math.sqrt(t)}return[n,a]}(e),a=n[0],r=n[1];let s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,a):"fanOut"===this.mode?s/=Math.max(1,r):s/=Math.max(1,(a+r)/2),"normal"===this.distribution){const n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new $p(`${this.getClassName()} does not support dType ${t}.`);return Ru(e,0,n,t,this.seed)}{const n=Math.sqrt(3*s);return hu(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}qf.className="VarianceScaling",Ls(qf);class Kf extends qf{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return qf.className}}Kf.className="GlorotUniform",Ls(Kf);class Xf extends qf{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return qf.className}}Xf.className="GlorotNormal",Ls(Xf);class Yf extends qf{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return qf.className}}Yf.className="HeNormal",Ls(Yf);class Jf extends qf{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return qf.className}}Jf.className="HeUniform",Ls(Jf);class Zf extends qf{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return qf.className}}Zf.className="LeCunNormal",Ls(Zf);class Qf extends qf{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return qf.className}}Qf.className="LeCunUniform",Ls(Qf);class em extends Pf{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return Pr((()=>{if(e.length<2)throw new $p("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError(`Unsupported data type ${t}.`);const n=g(e.slice(0,-1)),a=e[e.length-1],r=n*a;r>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${r}) elements: Slowness may result.`);const s=_f([Math.max(a,n),Math.min(a,n)],0,1,t,this.seed),i=Ml.qr(s,!1);let o=i[0];const u=i[1].flatten().stridedSlice([0],[Math.min(a,n)*Math.min(a,n)],[Math.min(a,n)+1]);return o=$s(o,u.sign()),n<a&&(o=o.transpose()),$s(As(this.gain),o.reshape(e))}))}getConfig(){return{gain:this.gain,seed:this.seed}}}em.className="Orthogonal",Ls(em);const tm={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function nm(e,t={}){return Wp(e,Os.getMap().classNameMap,t,"initializer")}function am(e){return zp(e)}function rm(e){if("string"==typeof e){const t=e in tm?tm[e]:e;if("GlorotNormal"===t)return new Xf;if("GlorotUniform"===t)return new Kf;if("HeNormal"===t)return new Yf;if("HeUniform"===t)return new Jf;if("LeCunNormal"===t)return new Zf;if("LeCunUniform"===t)return new Qf;{const e={};return e.className=t,e.config={},nm(e)}}return e instanceof Pf?e:nm(e)}function sm(e){return Array.isArray(e)&&Array.isArray(e[0])}function im(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function om(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new Cp(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function um(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new Cp(`Expected exactly 1 Shape; got ${e.length}`)}return e}function lm(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}const cm="Variable";class hm{constructor(e,t="float32",n=cm,a=!0,r=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Yp(),n=null==n?cm:n,this.originalName=hf(n),this.name=df(this.originalName),this.trainable_=a,this.constraint=r,this.val=function(e,t=!0,n,a){return vr.makeVariable(e,t,n,a)}(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function dm(e){return e.map((e=>e.read()))}function pm(e){e.forEach((e=>{e[0].write(e[1])}))}class fm{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class mm{constructor(e,t,n,a,r,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=a,this.callArgs=r,this.outputTensorIndex=i,this.id=Yp(),null!=s&&(this.originalName=hf(s),this.name=df(this.originalName)),this.rank=t.length}}let gm=0;class bm{constructor(e,t){this.callArgs=t,this.id=gm++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let ym=0;class xm extends Ms{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=ym++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=Mp(e)+"_"+Zp(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Np(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new Cp(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Fp(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Fp(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Sp(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Sp(`Layer ${this.name} is not connected, no input to return.`);return Fp(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Sp(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Sp(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Fp(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=Dp(e);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=Dp(this.inputSpec);if(t.length!==n.length)throw new Cp(`Layer ${this.name} expects ${n.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let e=0;e<t.length;e++){const a=t[e],r=n[e];if(null==r)continue;const s=a.rank;if(null!=r.ndim&&s!==r.ndim)throw new Cp(`Input ${e} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${s}`);if(null!=r.maxNDim&&s>r.maxNDim)throw new Cp(`Input ${e} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${s}`);if(null!=r.minNDim&&s<r.minNDim)throw new Cp(`Input ${e} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${s}.`);if(null!=r.dtype&&a.dtype!==r.dtype)throw new Cp(`Input ${e} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${a.dtype}.`);if(r.axes){const t=a.shape;for(const n in r.axes){const a=Number(n),s=r.axes[n],i=a>=0?t[a]:t[t.length+a];if(null!=s&&-1===[s,null].indexOf(i))throw new Cp(`Input ${e} is incompatible with layer ${this.name}: expected axis ${a} of input shape to have value ${s} but got shape ${t}.`)}}if(null!=r.shape)for(let t=0;t<r.shape.length;++t){const n=r.shape[t],s=a.shape[t];if(null!=n&&null!=s&&n!==s)throw new Cp(`Input ${e} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${a.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=Dp(e),a=function(e){let t=!0;for(const n of Dp(e))if(!(n instanceof mm)){t=!1;break}return t}(e),r=function(e){let t=!0;for(const n of Dp(e))if(n instanceof mm){t=!1;break}return t}(e);if(a===r)throw new Cp("Arguments to apply() must be all SymbolicTensors or all Tensors");return cf(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of Dp(e))t.push(n.shape);this.build(Fp(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let a=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,a);const r=Dp(a),s=[];for(let e of r)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(a=Fp(s),null!=this.activityRegularizer)throw new $p("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}{const n=function(e){e=Dp(e);const t=[];for(const n of e)t.push(n.shape);return Fp(t)}(e),a=this.computeOutputShape(n);let r;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),r=null!=a&&a.length>0&&Array.isArray(a[0])?a.map(((n,a)=>new mm(s,n,this,Dp(e),t,this.name,a))):new mm(s,a,this,Dp(e),t,this.name),this.addInboundNode(e,r,null,null,n,a,t),this._refCount++,null!=this.activityRegularizer)throw new $p("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,a)=>{null!=n&&null!=e[a]&&e[a]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Sp(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Sp(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Np(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return lm(this.weights)}build(e){this.built=!0}getWeights(e=!1){return dm(e?this.trainableWeights:this.weights)}setWeights(e){Pr((()=>{const t=this.weights;if(t.length!==e.length)throw new Cp(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],a=dm(t);for(let r=0;r<a.length;++r){const s=a[r],i=t[r],o=e[r];if(!b(s.shape,o.shape))throw new Cp(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}pm(n)}))}addWeight(e,t,n,a,r,s,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new Cp(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(a=null!=o?o():rm("zeros"));const u=a.apply(t,n),l=new hm(u,n,e,s,i);return u.dispose(),null!=r&&this.addLoss((()=>r.apply(l.read()))),null==s&&(s=!0),s?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=Dp(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;const a=this.computeMask(e,n),r=Dp(t),s=Dp(a);if(r.length!==s.length)throw new Error(`${this.name} outputs ${r.length} tensors but ${r.length} masks for those tensors`);for(let e=0;e<r.length;e++)r[e].kerasMask=s[e]}addInboundNode(e,t,n,a,r,s,i=null){const o=Dp(e);t=Dp(t),n=Dp(n),a=Dp(a),r=im(r),s=im(s);const u=[],l=[],c=[];for(const e of o)u.push(e.sourceLayer),l.push(e.nodeIndex),c.push(e.tensorIndex);new bm({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:a,inputShapes:r,outputShapes:s},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function wm(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const a=wm(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of a)-1===t.indexOf(e)&&t.push(e)}return t}}}class km extends xm{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Zp("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new Cp("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new Cp("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new Cp("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const a=new mm(this.dtype,this.batchInputShape,this,[],{},this.name);a.nodeIndex=0,a.tensorIndex=0,new bm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[a],outputTensors:[a],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new Cp(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}km.className="InputLayer",Ls(km);class vm{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof vm)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new Cp(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return vs(t,e.dtype)}catch(n){throw new Cp(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof mm){if(null==this.id2Value[e.id])throw new Cp(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new Cp(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof mm){if(null==this.id2Value[e.id])throw new Cp(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new Cp(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&Wr(this.id2Mask)}}const Im=new _p,Sm=new _p;function Nm(e,t,n,a){const r=null!=n&&n.training,s=Array.isArray(e),i=s?e:[e],o=i.map((e=>e.name)),u=[],l=t.names();for(const e of o)-1!==l.indexOf(e)?u.push(t.getValue(e)):u.push(null);null!=a&&(a.maxNumTensors=-1/0,a.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().sort().join(",");let h,d=Im.get(c);if(null==d){const e=function(e,t){p(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],a={};if(1===e.length){const r=$m(e[0],t);n=r.sorted,a=r.recipientMap}else{const r=new Set;for(const s of e){const{sorted:e,recipientMap:i}=$m(s,t);for(const t of e)r.has(t.name)||(n.push(t),r.add(t.name));for(const e in i)null==a[e]&&(a[e]=new Set),i[e].forEach((t=>a[e].add(t)))}}return{sorted:n,recipientCounts:Cm(a)}}(i,t);d=e.sorted,h=e.recipientCounts,Im.put(c,d),Sm.put(c,h)}h={},r||Object.assign(h,Sm.get(c));const f=new vm(t);for(let e=0;e<d.length;++e){if(null!=a){const e=zr().numTensors;e>a.maxNumTensors&&(a.maxNumTensors=e),e<a.minNumTensors&&(a.minNumTensors=e)}const s=d[e],i=s.sourceLayer;if(i instanceof km)continue;const l=[],c=[],p=[];let m=!1;for(const e of s.inputs){const n=f.getValue(e),a=f.getMask(e);l.push(n),c.push(a),null!=a&&(m=!0),r||(h[e.name]--,0!==h[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||p.push(n))}m&&((n=n||{}).mask=c[0]);const g=Dp(i.apply(l,n));let b=null;i.supportsMasking&&(b=i.computeMask(l,c));const y=Tm(s),x=Array.isArray(y)?y:[y];for(let e=0;e<x.length;++e){f.hasKey(x[e])||f.add(x[e],g[e],Array.isArray(b)?b[0]:b);const t=o.indexOf(x[e].name);-1!==t&&(u[t]=g[e])}r||Wr(p)}return f.disposeMasks(),s?u:u[0]}function Cm(e){const t={};for(const n in e)t[n]=e[n].size;return t}function $m(e,t){const n=new Set,a=[],r={};for(const e of t.names())n.add(e);const s=[],i=[];for(s.push(e);s.length>0;){const e=s[s.length-1];if(n.has(e.name)){s.pop();continue}const t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),a.push(e),n.add(e.name),t&&i.pop();else{i.push(s.length-1);for(const t of e.inputs)null==r[t.name]&&(r[t.name]=new Set),r[t.name].add(e.name),n.has(t.name)||s.push(t)}}return{sorted:a,recipientMap:r}}function Tm(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const a of e.sourceLayer.inboundNodes[t].outputTensors)if(a.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function _m(e,t){return Pr((()=>Ts(Do($s(e,e),t,!0))))}q().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=Im&&Im.setMaxEntries(e),null!=Sm&&Sm.setMaxEntries(e)}));class Em extends Ms{getConfig(){return{}}}class Rm extends Em{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Pr((()=>{const t=_m(e,this.axis),n=ao(t,0,this.maxValue);return $s(e,Cs(n,Ss(wf(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Rm.className="MaxNorm",Ls(Rm);class Am extends Em{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Pr((()=>Cs(e,Ss(wf(),_m(e,this.axis)))))}getConfig(){return{axis:this.axis}}}Am.className="UnitNorm",Ls(Am);class Fm extends Em{apply(e){return pu(e)}}Fm.className="NonNeg",Ls(Fm);class Dm extends Em{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Pr((()=>{const t=_m(e,this.axis),n=Ss($s(this.rate,ao(t,this.minValue,this.maxValue)),$s(1-this.rate,t));return $s(e,Cs(n,Ss(wf(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Dm.className="MinMaxNorm",Ls(Dm);const Mm={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Om(e){return zp(e)}function Lm(e,t={}){return Wp(e,Os.getMap().classNameMap,t,"constraint")}function zm(e){return null==e?null:"string"==typeof e?Lm({className:e in Mm?Mm[e]:e,config:{}}):e instanceof Em?e:Lm(e)}async function Pm(e){if(null==e)return;const t=[],n=[],a=[];for(const r in e){const s=e[r];if("number"!=typeof s){const e=s;t.push(e.data()),n.push(r),a.push(e)}}if(t.length>0){const r=await Promise.all(t);for(let t=0;t<r.length;++t)e[n[t]]=r[t][0];Wr(a)}}function Wm(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var Bm;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(Bm||(Bm={}));class Um{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Vm{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class Gm extends Um{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const a=t[e];if("number"==typeof a)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+a*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const r=Pr((()=>Ss(this.totals[e],$s(a,n))));this.totals[e]=r,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:Pr((()=>{const n=$s(Cs(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),Br(t[e])})))}}class Hm extends Um{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const a in this.history){const r=this.history[a];for(let s=0;s<r.length;++s)if("number"!=typeof r[s]){const i=r[s];e.push(i.data()),t.push(a),n.push(s)}}const a=await Promise.all(e);for(let e=0;e<a.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=a[e][0]}}class jm extends Um{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||zl,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");E(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let a,r=null!=n?n():Ma();return(...s)=>{const i=null!=n?n():Ma();return i-r<t||(r=i,a=e(...s)),a}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const a=[];null!=this.yield&&(await Pm(n),a.push(this.yield(e,t,n))),a.push(this.nextFrameFunc()),await Promise.all(a)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Pm(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await Pm(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Pm(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await Pm(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):E(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Pm(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Pm(e),await this.trainEnd(e))}}function qm(e,t){return null==e&&(e={}),e instanceof Um?[e]:Array.isArray(e)&&e[0]instanceof Um?e:Dp(e).map((e=>new jm(e,t)))}class Km{constructor(){}static registerCallbackConstructor(e,t){p(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),Km.checkForDuplicate(t),null==Km.constructors[e]&&(Km.constructors[e]=[]),Km.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Km.constructors)Km.constructors[+t].forEach((t=>{if(t===e)throw new Cp("Duplicate callback constructor.")}))}static clear(){Km.constructors={}}static createCallbacks(e){const t=[];for(const n in Km.constructors){const a=+n;e>=a&&t.push(...Km.constructors[a])}return t.map((e=>new e))}}function Xm(e,t,n,a,r,s,i,o,u){const l=new Hm,c=[new Gm,...Km.createCallbacks(t)];null!=e&&c.push(...e),c.push(l);const h=new Vm(c);return h.setParams({epochs:n,initialEpoch:a,samples:r,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:u}),{callbackList:h,history:l}}function Ym(e,t={},n=!1){return Wp(e,Os.getMap().classNameMap,t,"layer",n)}function Jm(e,t){return Pr((()=>{"float32"!==e.dtype&&(e=vs(e,"float32"));const n=Do(Af(e),t,!0),a=Ws(n.shape,wf()),r=Ts(Xs(n,a));return Cs(e,r)}))}function Zm(e,t){return Pr((()=>Xo(Af(Vs(t,e)),-1)))}function Qm(e,t){return Pr((()=>Xo(Hs(Vs(t,e)),-1)))}function eg(e,t){return Pr((()=>{const n=Vs(e,t),a=ao(Hs(e),wf(),Number.MAX_VALUE),r=Hs(Cs(n,a));return $s(100,Xo(r,-1))}))}function tg(e,t,n=!1){return Pr((()=>{if(n)t=Iu(t);else{const e=Do(t,t.shape.length-1,!0);t=Cs(t,e)}return t=ao(t,wf(),1-wf()),Qo(Do($s(vs(e,"float32"),Ro(t)),t.shape.length-1))}))}function ng(e,t,n=!1){return Pr((()=>{const a=vs(Co(function(e){const t=[mf(e.shape)];return Xi(e,t)}(e)),"int32"),r=(t=ao(t,wf(),1-wf())).shape;return tg(Xi(tu(a,r[r.length-1]),r),t,n)}))}function ag(e,t){return Pr((()=>{let n;return n=ao(t,wf(),1-wf()),n=Ro(Cs(n,Vs(1,n))),Xo(function(e,t){if(!b(e.shape,t.shape))throw new Cp(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Pr((()=>{const n=pu(t),a=Qo(Hs(t));return Ss(Vs(n,$s(t,e)),Ao(vo(a)))}))}(e,n),-1)}))}function rg(e,t){return Pr((()=>{const n=Jm(e,-1),a=Jm(t,-1),r=$s(n,a);return Qo(Do(r,-1))}))}Km.constructors={};const sg={meanSquaredError:Zm,meanAbsoluteError:Qm,meanAbsolutePercentageError:eg,meanSquaredLogarithmicError:function(e,t){return Pr((()=>{const n=ao(t,wf(),Number.MAX_VALUE),a=Ro(Ss(1,n)),r=ao(e,wf(),Number.MAX_VALUE),s=Ro(Ss(1,r));return Xo(Af(Vs(a,s)),-1)}))},squaredHinge:function(e,t){return Pr((()=>{const n=Xs(0,Vs(1,$s(e,t)));return Xo(Af(n),-1)}))},hinge:function(e,t){return Pr((()=>{const n=Xs(0,Vs(1,$s(e,t)));return Xo(n,-1)}))},categoricalHinge:function(e,t){return Pr((()=>{const n=Do($s(e,t),-1),a=Fo($s(Vs(1,e),t),-1);return Xs(0,Ss(1,Vs(a,n)))}))},logcosh:function(e,t){return Pr((()=>{const n=Math.log(2),a=Vs(t,e),r=Vs(Ss(a,Su($s(-2,a))),n);return Xo(r,-1)}))},categoricalCrossentropy:tg,sparseCategoricalCrossentropy:ng,binaryCrossentropy:ag,kullbackLeiblerDivergence:function(e,t){return Pr((()=>{const n=ao(e,wf(),1),a=ao(t,wf(),1);return Do($s(e,Ro(Cs(n,a))),-1)}))},poisson:function(e,t){return Pr((()=>{const n=Ro(Ss(wf(),t));return Xo(Vs(t,$s(e,n)),-1)}))},cosineProximity:rg};function ig(e){if("string"==typeof e){if(e in sg)return sg[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Cp(t)}return e}function og(e,t){return Pr((()=>{const n=$s(.5,ru(t)),a=kf(To(t,n),e.dtype);return Xo(wo(e,a),-1)}))}function ug(e,t){return Pr((()=>kf(wo(Fi(e,-1),Fi(t,-1)),"float32")))}function lg(e,t){return ag(e,t)}function cg(e,t){return e.rank===t.rank&&(e=Cu(e,[e.rank-1])),(t=Fi(t,-1)).dtype!==e.dtype&&(t=vs(t,e.dtype)),vs(wo(e,t),"float32")}const hg=tg,dg=ng,pg={binaryAccuracy:og,categoricalAccuracy:ug,precision:function(e,t){return Pr((()=>{const n=function(e,t){return Pr((()=>vs(Do(Ho(wo(e,1),wo(t,1))),"float32")))}(e,t),a=function(e,t){return Pr((()=>vs(Do(Ho(wo(e,0),wo(t,1))),"float32")))}(e,t),r=Ss(n,a);return vs(Fu(To(r,0),Cs(n,r),0),"float32")}))},categoricalCrossentropy:hg,sparseCategoricalCrossentropy:dg,mse:Zm,MSE:Zm,mae:Qm,MAE:Qm,mape:eg,MAPE:eg,cosine:rg};function fg(e){if("string"==typeof e&&e in pg)return pg[e];if("string"!=typeof e&&null!=e)return e;throw new Cp(`Unknown metric ${e}`)}function mg(e){if(Rp(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(sg))if(sg[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(pg))if(pg[n]===e){t=n;break}return void 0!==t?t:e.name}}function gg(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!bg(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function bg(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!bg(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!bg(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function yg(e,t,n=console.log){let a="";for(let n=0;n<e.length;++n)n>0&&(a=a.slice(0,a.length-1)+" "),a+=e[n],a=a.slice(0,t[n]),a+=" ".repeat(t[n]-a.length);n(a)}function xg(e,t,n){let a,r;try{r=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){r="multiple"}try{a=JSON.stringify(e.outputShape)}catch(e){a="multiple"}yg([`${e.name} (${e.getClassName()})`,r,a,e.countParams().toString()],t,n)}function wg(e,t,n,a){let r,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){s="multiple"}try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}const i=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,a=t.nodeIndices[e],r=t.tensorIndices[e];i.push(`${n}[${a}][${r}]`)}const o=e.name,u=e.getClassName(),l=0===i.length?"":i[0];yg([`${o} (${u})`,s,r,e.countParams().toString(),l],t,a);for(let e=1;e<i.length;++e)yg(["","","","",i[e]],t,a)}function kg(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function vg(e,t){if(null===e)return null;if("string"==typeof e)return Op(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],a=e.length;for(let r=0;r<a;++r){const a=e[r];kg(t,r,a)?n.push(a):n.push(vg(a,t))}return n}{const t={};for(const n of Object.keys(e)){const a=e[n];if("name"===n&&"string"==typeof a)t[n]=a;else{const e=Op(n);t[e]=vg(a,e)}}return t}}function Ig(e,t){if(null==e)return null;if("string"==typeof e)return Mp(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],a=e.length;for(let r=0;r<a;++r){const a=e[r];kg(t,r,a)?n.push(a):n.push(Ig(a,t))}return n}{const t={};for(const n of Object.keys(e)){const a=e[n];t[Mp(n)]="name"!==n&&"className"!==n||"string"!=typeof a?Ig(a,n):a}return t}}const Sg="4.20.0";class Ng extends xm{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Zp(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Up(this.inputs).length!==this.inputs.length)throw new Cp(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);Up(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,a=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(a)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,a=e.tensorIndex;Rp(0===n,"input layer has >1 nodes"),Rp(0===a,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(a)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof km))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},a={},r={},s={},i=[],o=(e,t,n,a,r,u)=>{null!=a&&null!=r&&null!=u||(a=e.sourceLayer,r=e.nodeIndex,u=e.tensorIndex);const l=a.inboundNodes[r];if(-1!==n.indexOf(l))throw new Np(`The tensor ${e.name} at layer "${a.name}" is part of a cycle.`);if(-1!==t.indexOf(l))return;this.containerNodes.add(Ng.nodeKey(a,r)),a.id in s||(s[a.id]=Object.keys(s).length),-1===n.indexOf(l)&&n.push(l);const c=l.inboundLayers.length;for(let e=0;e<c;e++){const a=l.inputTensors[e],r=l.inboundLayers[e],s=l.nodeIndices[e],i=l.tensorIndices[e];o(a,t,n,r,s,i)}for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);i.push(l)},u=[],l=[];for(const e of this.outputs)o(e,u,l);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let s=t[e.id];const i=null==a[e.outboundLayer.id]?0:a[e.outboundLayer.id];s=Math.max(s,i),a[e.outboundLayer.id]=s,r[e.outboundLayer.id]=e.outboundLayer,t[e.id]=s;for(let a=0;a<e.inboundLayers.length;a++){const r=e.inboundLayers[a],i=e.nodeIndices[a],o=r.inboundNodes[i],u=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(s+1,u),n[o.id]=o}}const h={};for(const e in t){const a=t[e];a in h||(h[a]=[]),h[a].push(n[e])}const d={};for(const e in a){const t=a[e];t in d||(d[t]=[]),d[t].push(r[e])}let p=Object.keys(d).map((e=>parseInt(e,10))).sort(Bp);this.layers=[];for(const e of p){const t=d[e];t.sort(((e,t)=>{const n=s[e.id],a=s[t.id];return n<a?-1:n>a?1:0}));for(const e of t)e instanceof Ng&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,p=Object.keys(h).map((e=>parseInt(e,10))).sort(Bp);const f=this.inputs.slice(),m=[];for(const e of p)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new Np(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new Np(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new bm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new Cp("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let a=0;const r=(e=>{const t=Object.keys(e);if(0===t.length)return!1;const n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))})(e);r&&this.parseWeights(e);for(const e of this.layers)for(const[t,s]of e.weights.entries()){const e=r?`${s.name.split("/").slice(0,-1).join("/")+"/"}${t}`:s.originalName;if(null!=n[e])throw new Cp(`Duplicate weight name: ${e}`);n[e]=s,a++}const s=[];for(const a in e){let r=a;if(null==n[a]){const e=a.split("/");r=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[r])s.push([n[r],e[a]]);else if(t)throw new Cp(`Provided weight data has no target variable: ${a}`);delete n[r]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new Cp(`${e.length} of ${a} weights are not set: ${e}`)}pm(s)}parseWeights(e){for(const t in Object.keys(e)){const n=t.split("/"),a=["vars","layer_checkpoint_dependencies"],r=n.map((e=>e.startsWith("_")?e.slice(1):e)).filter((e=>!a.includes(e))).join("/");r!==t&&(e[r]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Sg}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=Ig(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Pr((()=>{e=Dp(e);const n=new vm;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return Nm(this.outputs,n,t)}))}computeMask(e,t){return Pr((()=>{let n;return e=Dp(e),n=null==t?Ep(null,e.length):Dp(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=im(e);if(t.length!==this.inputLayers.length)throw new Cp(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const a=this.inputLayers[e],r=t[e];n[a.name+"_0_0"]=r}const a=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Bp);if(a.length>1)for(const e of a){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const a=[];for(let t=0;t<e.inboundLayers.length;t++){const r=e.inboundLayers[t],s=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${r.name}_${s}_${i}`];a.push(o)}const r=im(t.computeOutputShape(Fp(a))),s=t.inboundNodes.indexOf(e);for(let e=0;e<r.length;e++)n[`${t.name}_${s}_${e}`]=r[e]}}const r=[],s=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],a=this.outputLayersTensorIndices[e],r=`${t.name}_${n}_${a}`;s.push(r)}for(let e=0;e<s.length;e++){const t=s[e];Rp(t in n),r.push(n[t])}return Fp(r)}runInternalGraph(e,t){null==t&&(t=Ep(null,e.length));const n={};for(let a=0;a<this.inputs.length;++a){const r=this.inputs[a],s=e[a],i=t[a];n[r.id]=[s,i]}const a=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Bp);for(const e of a){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,a=e.inputTensors,r=e.outputTensors,s=new Array;for(const e of a)e.id in n&&s.push(n[e.id]);if(s.length===a.length){let a,i,o,u,l={};if(null!=e.callArgs&&(l=e.callArgs),1===s.length){const[e,n]=s[0];null==l.mask&&(l.mask=n),o=Dp(t.call(e,l)),u=Dp(t.computeMask(e,n)),a=[e],i=[n]}else a=s.map((e=>e[0])),i=s.map((e=>e[1])),null==l.mask&&(l.mask=i),o=Dp(t.call(a,l)),u=Dp(t.computeMask(a,i));if(t.activityRegularizer)throw new $p("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<r.length;++e){const t=r[e],a=o[e],s=u[e];n[t.id]=[a,s]}}}}const r=[],s=[],i=[];for(const e of this.outputs){Rp(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,a]=n[e.id];i.push(t.shape),r.push(t),s.push(a)}return[r,s,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof Ng?1:0;for(let a=0;a<e.inboundNodes.length;a++){const r=Ng.nodeKey(e,a);this.containerNodes.has(r)&&(t[r]=n,n+=1)}}return t}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new Cp("Provide either a layer name or layer index");if("number"==typeof e)return this.findLayer(e);for(const t of this.layers)if(t.name===e)return t;throw new Cp(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new Cp(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return Pr((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const a=Ng.nodeKey(t,n);this.containerNodes.has(a)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const a=e.getClassName(),r=e.getConfig(),s=[];for(let n=0;n<e.inboundNodes.length;n++){const a=e.inboundNodes[n],r=Ng.nodeKey(e,n);let i={};if(this.containerNodes.has(r)){if(a.callArgs)try{JSON.stringify(a.callArgs),i=a.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${a.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(a.inboundLayers.length>0){const e=[];for(let n=0;n<a.inboundLayers.length;n++){const r=a.inboundLayers[n],s=a.nodeIndices[n],o=a.tensorIndices[n];let u=t[Ng.nodeKey(r,s)];null==u&&(u=0),e.push([r.name,u,o,i])}s.push(e)}}}const i={};i.name=e.name,i.className=a,i.config=r,i.inboundNodes=s,n.push(i)}e.layers=n;const a=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],r=this.inputLayersNodeIndices[e],s=Ng.nodeKey(n,r);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];a.push([n.name,i,o])}e.inputLayers=a;const r=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],a=this.outputLayersNodeIndices[e],s=Ng.nodeKey(n,a);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];r.push([n.name,i,o])}return e.outputLayers=r,e}static fromConfig(e,t,n={},a=!1){const r={},s={};function i(e,t){e.name in s?s[e.name].push(t):s[e.name]=[t]}function o(e,t){const n=[];let a;for(const s of t){const o=s[0],u=s[1],l=s[2];if(a=null==s[3]?{}:s[3],!(o in r))return void i(e,t);const c=r[o];if(c.inboundNodes.length<=u)return void i(e,t);const h=c.inboundNodes[u];n.push(h.outputTensors[l])}n.length>0&&e.apply(Fp(n),a)}function u(e){const n=e.name,s=Ym(e,null!=t.customObjects?t.customObjects:{});s.setFastWeightInitDuringBuild(a),r[n]=s,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new Cp(`Corrupted configuration, expected array for nodeData: ${e}`);i(s,e)}))}const l=t.name,c=t.layers;for(const e of c)u(e);for(;!Vp(s);)for(const e of c){const t=r[e.name];if(t.name in s){const e=s[t.name];delete s[t.name];for(const n of e)o(t,n)}}const h=[],d=[],p=t.inputLayers;for(const e of p){const t=e[0],n=e[1],a=e[2];Rp(t in r);const s=r[t].inboundNodes[n].outputTensors;h.push(s[a])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],a=e[2];Rp(t in r);const s=r[t].inboundNodes[n].outputTensors;d.push(s[a])}return new e({inputs:h,outputs:d,name:l})}get stateful(){if(this._stateful)throw new Cp("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Pr((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function Cg(e,t){return function(e,t,n){const a=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===a)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==a)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${a} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${a}) outputs, so ${n} must be either an array with ${a} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function $g(e,t,n,a){if(null!=t||null!=a)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=Pr((()=>{if(1===e.shape.length)return Is(e);if(2===e.shape.length){if(e.shape[1]>1)return Fi(e,1);if(1===e.shape[1])return Xi(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),a=Array.from(await t.data());Wr(t);const r=[];return a.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);r.push(n[e])})),_u(r,"float32")}return null}function Tg(e,t){return $s(e,t)}function _g(e,t){let n,a;const r=t;n=r.xs,a=r.ys,p(null!=n&&null!=a,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const s=Eg("input",e.inputNames,n),i=Eg("output",e.outputNames,a),o=s[0].shape[0];p(s.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),p(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<s.length;t++)p(s[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${s[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)p(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:s,ys:i}}function Eg(e,t,n){if(n instanceof tr)return[n];if(Array.isArray(n))return p(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const a=[];for(const r of t){if(null==n[r])throw new Cp(`The feature data generated by the dataset lacks the required ${e} key '${r}'.`);a.push(n[r])}return a}}function Rg(e){return"function"==typeof e.iterator}function Ag(e){p(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function Fg(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>If(e,t,n-t))):If(e,t,n-t)}function Dg(e,t){return Pr((()=>null==e?null:Array.isArray(e)?e.map((e=>Dg(e,t))):Rf(e,"int32"===t.dtype?t:vs(t,"int32"))))}function Mg(e,t){const n=[];let a=0,r=null;for(;a<e;)r=a+t,r>=e&&(r=e),n.push([a,r]),a=r;return n}function Og(e){const t=[];e instanceof tr&&(e=[e]);for(let n=0;n<e.length;++n){const a=e[n];if(1===a.rank)t.push(vf(a,1));else{if(0===a.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(a)}}return t}function Lg(e,t){if(null==e)return;const n=[];if(t instanceof tr)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const a=t[e];n.push(a.id)}const a=[];if(e instanceof tr)-1===n.indexOf(e.id)&&a.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&a.push(e)}));else if(null!=e)for(const t in e){const r=e[t];-1===n.indexOf(r.id)&&a.push(r)}a.forEach((e=>{e.isDisposed||e.dispose()}))}function zg(e){return Array.isArray(e)}function Pg(e){return!function(e){return e instanceof tr}(e)&&!zg(e)}function Wg(e,t,n,a=!0,r=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(zg(e)&&e.length>0)t=!0;else if(Pg(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new Cp(`Error when checking model ${r} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let s;if(Pg(e)){s=[];for(const n of t){if(null==e[n])throw new Cp(`No data provided for "${n}". Need data for each key in: ${t}`);s.push(e[n])}}else if(zg(e)){if(e.length!==t.length)throw new Cp(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(t.length>1)throw new Cp(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=Og(s),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=s[e];if(i.shape.length!==n[e].length)throw new Cp(`Error when checking ${r}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!a)continue;const s=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&s!==o)throw new Cp(`${r} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${r} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return s}function Bg(e,t,n,a=!0,r=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new Cp(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new Cp(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=s[e];if(i.shape.length!==n[e].length)throw new Cp(`Error when checking ${r}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let s=0;s<n[e].length;++s){if(0===s&&!a)continue;const o=i.shape[s],u=n[e][s];if(null!=u&&u!==o)throw new Cp(`Error when checking ${r}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class Ug extends Ng{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new Cp("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,a=console.log){const r=function(e){let t=!0;const n=[],a=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}a.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const r of n.inboundNodes)if(-1!==a.indexOf(r)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),s=["Layer (type)","Input Shape","Output shape","Param #"];let i;if(r?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!r){s.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}a("_".repeat(t)),yg(s,n,a),a("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)r?xg(o[e],n,a):wg(o[e],n,i,a),a((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=function(e){let t;return t=null!=e.collectedTrainableWeights?lm(e.collectedTrainableWeights):lm(e.trainableWeights),t}(e),l=lm(e.nonTrainableWeights);a(`Total params: ${u+l}`),a(`Trainable params: ${u}`),a(`Non-trainable params: ${l}`),a("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>Ol.adagrad(.01),Adadelta:()=>Ol.adadelta(1,.95,wf()),Adam:()=>Ol.adam(.001,.9,.999,wf()),Adamax:()=>Ol.adamax(.002,.9,.999,wf(),0),RMSProp:()=>Ol.rmsprop(.001,.9,0,wf()),SGD:()=>Ol.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new Cp(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof zs))throw new Cp("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Cp(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>ig(e)))}else{const n=ig(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new Cp(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(ig(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],cf("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const a=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const a of t){let t=n.hasOwnProperty(a)?n[a]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),r=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};cf("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,a,s;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let r;1===t[t.length-1]||this.lossFunctions[e]===ag?-1!==["accuracy","acc"].indexOf(i)?a=og:-1!==["crossentropy","ce"].indexOf(i)&&(a=lg):this.lossFunctions[e]===ng?-1!==["accuracy","acc"].indexOf(i)?a=cg:-1!==["crossentropy","ce"].indexOf(i)&&(a=dg):-1!==["accuracy","acc"].indexOf(i)?a=ug:-1!==["crossentropy","ce"].indexOf(i)&&(a=hg),-1!==["accuracy","acc"].indexOf(i)?r="acc":-1!==["crossentropy","ce"].indexOf(i)&&(r="ce"),s=a,n=""+r}else{const e=fg(i);s=e,n=""+mg(i)}let t;cf(n,(()=>{t=s})),r(e,n,t)}})(a[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const a=null==n.batchSize?32:n.batchSize;Ag(a);const r=this.standardizeUserDataXY(e,t,!0,a);try{const e=r[0].concat(r[1]);this.makeTestFunction();const t=this.testFunction;return Fp(this.testLoop(t,e,a,n.verbose,n.steps))}finally{Lg(r[0],e),Lg(r[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const a=null!=(n=n||{}).batches,r=e.testFunction;let s=[];if(n.verbose>0)throw new $p("Verbose mode is not implemented yet.");p(!a||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof t.next?t:await t.iterator();let o=0,u=0;for(;!a||u<n.batches;){const t=await i.next();if(s=Pr((()=>{if(t.value){const{xs:n,ys:a}=_g(e,t.value),i=n.concat(a),l=Pr((()=>r(i)));if(Wr(i),0===u)for(let e=0;e<l.length;++e)s.push(As(0));const c=i[0].shape[0];for(let e=0;e<l.length;++e){const t=l[e],n=s[e];s[e]=Pr((()=>Ss(s[e],$s(c,t)))),u>0&&Wr(n)}Wr(l),o+=c,++u}return s})),t.done){a&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<s.length;++e){const t=s[e];s[e]=Cs(s[e],o),Wr(t)}return Fp(s)}(this,e,t)}checkNumSamples(e,t,n,a="steps"){let r;if(null!=n){if(r=null,null!=t)throw new Cp(`If ${a} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new Cp(`Either the input data should have a defined shape, or ${a} shoud be specified.`);r=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return r}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new Cp("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),a=n?t:[t],r=this.retrieveSymbolicTensors(a),s=new vm;if(e instanceof tr&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Cp(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new Cp(`No value is provided for the model's input ${t.name}`);s.add(t,n)}const i=Nm(r,s);return n?i:i[0]}retrieveSymbolicTensors(e){const t=Ep(null,e.length);let n=e.length;for(const a of this.layers){const r=Array.isArray(a.output)?a.output:[a.output],s=r.map((e=>e.name));for(let a=0;a<e.length;++a){const i=s.indexOf(e[a]);if(-1!==i&&(t[a]=r[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,a)=>{null==t&&n.push(e[a])})),new Cp(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return Pr((()=>{const a=this.checkNumSamples(e);if(n)throw new $p("Verbose predictLoop() is not implemented yet.");const r=Mg(a,t),s=this.outputs.map((e=>[]));for(let t=0;t<r.length;++t)Pr((()=>{const n=r[t][0],a=r[t][1],s=Fg(e,n,a),i=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)i.push({key:this.inputs[e],value:s[e]});else i.push({key:this.inputs[0],value:s});const o=new vm(i);return Nm(this.outputs,o)})).forEach(((e,t)=>s[t].push(e)));return Fp(s.map((e=>ro(e,0))))}))}predict(e,t={}){const n=Og(e);Bg(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return Ag(e),this.predictLoop(n,e)}finally{Lg(n,e)}}predictOnBatch(e){Bg(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,a){if(null==this.optimizer_)throw new Np("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===ng?r.push(t.slice(0,t.length-1).concat([1])):r.push(t)}if(function(e,t){const n=Up(e.map((e=>e.shape[0])));n.sort();const a=Up(t.map((e=>e.shape[0])));if(a.sort(),n.length>1)throw new Cp(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(a.length>1)throw new Cp(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(n.length>0&&a.length>0&&!b(n,a))throw new Cp(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${a[0]} target sample(s).`)}(e=Wg(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Wg(t,this.feedOutputNames,r,!1,"target")),function(e,t,n){const a=[Zm,ag,tg];for(let r=0;r<e.length;++r){const s=e[r],i=t[r],o=n[r];if(null!=i){if(i===tg&&1===s.shape[s.shape.length-1])throw new Cp(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==a.indexOf(i)){const e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const a=e[n],r=t[n];if(null!=r&&a!==r)throw new Cp(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=a&&a>0&&e[0].shape[0]%a!=0)throw new Cp(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${a}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,a,r=!0,s){const[i,o]=this.standardizeUserDataXY(e,t,r,s);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=a){const e=Cg(a,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await $g(o[t],null,e[t]))}return[i,o,u]}testLoop(e,t,n,a=0,r){return Pr((()=>{const s=this.checkNumSamples(t,n,r,"steps"),i=[];if(a>0)throw new $p("Verbose mode is not implemented yet.");if(null!=r)throw new $p("steps mode in testLoop() is not implemented yet");{const a=Mg(s,n),r=_u(yf(0,s));for(let n=0;n<a.length;++n){const s=a[n][0],o=a[n][1],u=If(r,s,o-s),l=Dg(t,u),c=e(l);if(0===n)for(let e=0;e<c.length;++e)i.push(As(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=Ss(i[e],$s(o-s,t))}}for(let e=0;e<i.length;++e)i[e]=Cs(i[e],s)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const a=e[n];let r=a;Ap(e,a)>1&&(r+=`_${Ap(e.slice(0,n),a)}`),t.push(r)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new vm(e),o=Nm(this.outputs,i,{training:!0});let u;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(a[e],o[e]);null!=r[e]&&(n=Tg(n,r[e]));const s=Xo(n);t.push(s),u=0===e?n:Ss(u,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],r=this.metricsTensors[e][1];n=Xo(t(a[r],o[r]))}Br(n),s.push(n)}return u=Xo(u),this.calculateLosses().forEach((e=>{u=Ss(u,e)})),u}),!0,i)].concat(s)}}makeTestFunction(){this.testFunction=e=>Pr((()=>{const t=[];let n;const a=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:a[e]});const i=new vm(s),o=Nm(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const a=this.lossFunctions[e],s=Xo(a(r[e],o[e]));n=0===e?s:Ss(n,s),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],a=this.metricsTensors[e][1],s=Xo(n(r[a],o[a]));t.push(s)}return t}))}async fit(e,t,n={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let a,r,s,i,o,u,l,c,h;this.isTraining=!0;try{const d=null==n.batchSize?32:n.batchSize;Ag(d);const p=!1,f=await this.standardizeUserData(e,t,n.sampleWeight,n.classWeight,p,d);a=f[0],r=f[1],h=f[2];let m,g=!1;if(null!=n.validationData&&n.validationData.length>0){if(g=!0,2!==n.validationData.length)throw 3===n.validationData.length?new $p("validationData including sample weights is not supported yet."):new Cp(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);o=n.validationData[0],u=n.validationData[1];const e=!0,t=await this.standardizeUserData(o,u,null,null,e,d);l=t[0],c=t[1],m=l.concat(c)}else if(null!=n.validationSplit&&n.validationSplit>0&&n.validationSplit<1){g=!0;const e=Math.floor(a[0].shape[0]*(1-n.validationSplit)),t=a[0].shape[0];l=Fg(a,e,t),s=a,a=Fg(a,0,e),c=Fg(r,e,t),i=r,r=Fg(r,0,e),m=l.concat(c)}else null!=n.validationSteps&&(g=!0);const b=a.concat(r).concat(h);this.checkTrainableWeightsConsistency();const y=this.makeTrainFunction(),x=this.getDedupedMetricsNames();let w,k;g?(this.makeTestFunction(),w=this.testFunction,k=x.slice().concat(x.map((e=>"val_"+e)))):(w=null,m=[],k=x.slice());const v=qm(n.callbacks,n.yieldEvery);return await this.fitLoop(y,b,x,d,n.epochs,n.verbose,v,w,m,n.shuffle,k,n.initialEpoch,null,null)}finally{this.isTraining=!1,Lg(a,e),Lg(r,t),Lg(s,e),Lg(i,t),Lg(l,o),Lg(c,u),null!=h&&Wr(h)}}async fitLoop(e,t,n,a,r,s,i,o,u,c,h,d,p,f){null==a&&(a=32),null==r&&(r=1),null==c&&(c=!0),null==d&&(d=0);let m=!1;if(null!=o&&null!=u&&(m=!0),null!=f&&(m=!0,null==p))throw new Cp("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=this.checkNumSamples(t,a,p,"steps_per_epoch");let b;null!=g&&(b=yf(0,g)),null==s&&(s=1);const{callbackList:y,history:x}=Xm(i,s,r,d,g,p,a,m,h);y.setModel(this),this.history=x,await y.onTrainBegin(),this.stopTraining_=!1;for(let s=d;s<r;++s){await y.onEpochBegin(s);const r={};if(null!=p)throw new $p("stepsPerEpoch mode is not implemented yet.");{if("batch"===c)throw new $p("batch shuffling is not implemneted yet");c&&l(b);const s=_u(b),i=Mg(g,a);for(let l=0;l<i.length;++l){const c={};if(await y.onBatchBegin(l,c),Pr((()=>{const h=i[l][0],d=i[l][1],p=If(s,h,d-h);c.batch=l,c.size=d-h;const f=Dg(t,p),g=e(f);for(let e=0;e<n.length;++e){const t=n[e],a=g[e];c[t]=a,Br(a)}if(l===i.length-1&&m){const e=this.testLoop(o,u,a);for(let t=0;t<n.length;++t){const a=n[t],s=e[t];Br(s),r["val_"+a]=s}}})),await y.onBatchEnd(l,c),Wm(c),this.stopTraining_)break}s.dispose()}if(await y.onEpochEnd(s,r),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return async function(e,t,n){const a=null!=n.batchesPerEpoch;if(p(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),p(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),p(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),p(!a||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),p(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const r=null!=n.validationData;let s,i;if(r)if(Rg(n.validationData))p(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new $p("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);s=e.xs,i=e.ys}const o=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let l;l=r?u.slice().concat(u.map((e=>"val_"+e))):u.slice();const c=qm(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:f}=Xm(c,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,r,l);d.setModel(e),e.history=f,await d.onTrainBegin(),e.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,g=await t.iterator();for(;m<n.epochs;){const l={};await d.onEpochBegin(m);let c=0,h=0;for(a||(g=await t.iterator());!a||c<n.batchesPerEpoch;){const t=await g.next();if(a&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:a,ys:r}=_g(e,t.value),s={};s.batch=h,s.size=a[0].shape[0],await d.onBatchBegin(h,s);const i=[];if(null!=n.classWeight){const t=Cg(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await $g(r[e],null,t[e]))}const l=a.concat(r).concat(i),p=o(l);Wr(l);for(let e=0;e<u.length;++e){const t=u[e],n=p[e];s[t]=n,Br(n)}await d.onBatchEnd(h,s),Wm(s),h++,c++}if(a?c>=n.batchesPerEpoch:t.done){if(r){let t;t=Rg(n.validationData)?Dp(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):Dp(e.evaluate(s,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(m,l),m++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),a=n[0],r=n[1],s=this.makeTrainFunction()(a.concat(r)),i=[];for(const e of s){const t=await e.data();i.push(t[0])}return Wr(s),Lg(n[0],e),Lg(n[1],t),Fp(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,a=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let e=0;e<a.length;++e)n&&!a[e].trainable||t.push({name:a[e].originalName,tensor:r[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=zr().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-zr().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=Mp(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>Mp(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const a of t){if("string"!=typeof n[a])throw new Error("Serialization of non-string loss is not supported.");e[a]=Mp(n[a])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Mp(mg(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>Mp(mg(e))));{const e={};for(const t in this.metrics)e[t]=Mp(mg(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Ym(vg(e.optimizer_config));let n,a;if("string"==typeof e.loss)n=Op(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>Op(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=Op(e.loss[t])}if(Array.isArray(e.metrics))a=e.metrics.map((e=>Op(e)));else if(null!=e.metrics){a={};for(const t in e.metrics)a[t]=Op(e.metrics[t])}this.compile({loss:n,metrics:a,optimizer:t})}async save(e,t){if("string"==typeof e){const t=(n=e,Yr.getSaveHandlers(n));if(0===t.length)throw new Cp(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Cp(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}var n;if(null==e.save)throw new Cp("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const a=await Vr(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${Sg}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:n}=await Vr(await this.optimizer.getWeights(),e);a.specs.push(...n),a.data=(s=[a.data,t],Or.join(s))}var s;if(null!=this.userDefinedMetadata){const e=!0;gg(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=a.data,r.weightSpecs=a.specs,e.save(r)}setUserDefinedMetadata(e){gg(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Ug.className="Model",Ls(Ug);class Vg extends Ug{}Vg.className="Functional",Ls(Vg);class Gg extends Ug{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Zp("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new Cp(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Gg||e instanceof Ug;let n;if(t){if(n=e,1!==n.outputs.length)throw new Cp("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Cp("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new Cp("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new Cp("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new km({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new Cp(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new Cp("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=wm(this.outputs[0])}this.inboundNodes=[],new bm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Ep(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(um(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Ug({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Np("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Np("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Np("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Np("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},a=!1){let r,s={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new Cp("Legacy serialization format not supported yet.");r=t}else p(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),r=t.layers,delete t.layers,s=t;const i=new e(s);if(!(i instanceof Gg))throw new $p(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of r){const t=Ym(e,void 0,a);a&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new Cp("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new Cp("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}Gg.className="Sequential",Ls(Gg);class Hg extends Ms{getConfig(){return{}}}class jg extends Hg{apply(e,t=1){return function(e,t=1){if(1!==t)throw new $p(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return xo(e)}(e,t)}}jg.className="elu",Ls(jg);class qg extends Hg{apply(e){return mu(e)}}qg.className="selu",Ls(qg);class Kg extends Hg{apply(e){return pu(e)}}Kg.className="relu",Ls(Kg);class Xg extends Hg{apply(e){return Pr((()=>Jo(6,pu(e))))}}Xg.className="relu6",Ls(Xg);class Yg extends Hg{apply(e){return e}}Yg.className="linear",Ls(Yg);class Jg extends Hg{apply(e){return bu(e)}}Jg.className="sigmoid",Ls(Jg);class Zg extends Hg{apply(e){return function(e){return Pr((()=>{const t=Ss(.5,$s(.2,e));return ao(t,0,1)}))}(e)}}Zg.className="hardSigmoid",Ls(Zg);class Qg extends Hg{apply(e){return Su(e)}}Qg.className="softplus",Ls(Qg);class eb extends Hg{apply(e){return function(e){return Pr((()=>Cs(e,Ss(Hs(e),1))))}(e)}}eb.className="softsign",Ls(eb);class tb extends Hg{apply(e){return Tu(e)}}tb.className="tanh",Ls(tb);class nb extends Hg{apply(e,t=-1){return Iu(e,t)}}nb.className="softmax",Ls(nb);class ab extends Hg{apply(e,t=-1){return Mo(e,t)}}ab.className="logSoftmax",Ls(ab);class rb extends Hg{apply(e){return Pr((()=>Pr((()=>{const t=Math.sqrt(2),n=$s(.5,Ss(1,ko(Cs(e,t))));return $s(e,n)}))))}}rb.className="gelu",Ls(rb);class sb extends Hg{apply(e){return Pr((()=>$s(.5,$s(e,Ss(1,Tu($s(Ts(Cs(2,Math.PI)),Ss(e,$s(.044715,Us(e,3))))))))))}}sb.className="gelu_new",Ls(sb);class ib extends Hg{apply(e){return Pr((()=>$s(e,Tu(Su(e)))))}}ib.className="mish",Ls(ib);class ob extends Hg{apply(e,t=1){return Pr((()=>$s(bu($s(e,t)),e)))}}function ub(e){return e.getClassName()}function lb(e,t={}){return Wp(e,Os.getMap().classNameMap,t,"activation")}function cb(e){if(null==e){return lb({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},lb(t)}return e instanceof Hg?e:lb(e)}ob.className="swish",Ls(ob);class hb extends Ms{}class db extends hb{constructor(e){super(),function(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Pr((()=>{let t=nu([1]);return this.hasL1&&(t=Ss(t,Do($s(this.l1,Hs(e))))),this.hasL2&&(t=Ss(t,Do($s(this.l2,Af(e))))),Xi(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}db.className="L1L2",Ls(db);const pb={l1l2:"L1L2"};function fb(e){return zp(e)}function mb(e,t={}){return Wp(e,Os.getMap().classNameMap,t,"regularizer")}function gb(e){return null==e?null:"string"==typeof e?mb({className:e in pb?pb[e]:e,config:{}}):e instanceof hb?e:mb(e)}class bb extends xm{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=om(e);let n=pu(e);return null!=this.maxValue&&(n=ao(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}bb.className="ReLU",Ls(bb);class yb extends xm{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=om(e);return Eo(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}yb.className="LeakyReLU",Ls(yb);class xb extends xm{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=rm(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=gb(e.alphaRegularizer),this.alphaConstraint=zm(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new Cp(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=um(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new fm({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=om(e),iu(e,this.alpha.read())}getConfig(){const e={alphaInitializer:am(this.alphaInitializer),alphaRegularizer:fb(this.alphaRegularizer),alphaConstraint:Om(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}xb.className="PReLU",Ls(xb);class wb extends xm{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new $p(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=om(e);return xo(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}wb.className="ELU",Ls(wb);class kb extends xm{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=om(e);return $s(n,vs(To(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}kb.className="ThresholdedReLU",Ls(kb);class vb extends xm{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new nb).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return Pr((()=>{let n=om(e);const a=t.mask;if(null!=a){const e=$s(Vs(au(n.shape),vs(a,n.dtype)),As(-1e9));n=Ss(n,e)}return this.axis instanceof Array?this.axis.length>1?vo(Vs(n,Go(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)}))}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Ib(e,t,n){if("number"==typeof e)return Ep(e,t);if(e.length!==t)throw new Cp(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){const s=e[r];if((a=s)!==parseInt(a.toString(),10))throw new Cp(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${s}`)}return e;var a}function Sb(e,t,n,a,r=1){if(null==e)return e;let s;return s="same"===n?e:e-(t+(t-1)*(r-1))+1,Math.floor((s+a-1)/a)}function Nb(e,t,n,a){if(null==e)return null;if("valid"===a)e=e*t+bf([n-t,0]);else{if("same"!==a)throw new Cp(`Unsupport padding mode: ${a}.`);e*=t}return e}function Cb(e,t){return Pr((()=>(sf(t),"channelsFirst"===t?Ou(e,[0,2,3,1]):e)))}function $b(e,t){return Pr((()=>(sf(t),"channelsFirst"===t?Ou(e,[0,2,3,4,1]):e)))}function Tb(e,t,n,a=[1,1],r="valid",s,i,o=null){return Pr((()=>{if(null==s&&(s="channelsLast"),sf(s),3!==e.rank&&4!==e.rank)throw new Cp(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new Cp(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=Cb(e,s);if("causal"===r)throw new $p("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=Xu({x:u,filter:t,strides:a,pad:"same"===r?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(u=Ou(u,[0,3,1,2])),u}))}vb.className="Softmax",Ls(vb);class _b extends xm{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",_b.verifyArgs(t),this.rank=e,jp(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new $p(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Ib(t.kernelSize,e,"kernelSize"),this.strides=Ib(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,of(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,sf(this.dataFormat),this.activation=cb(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=rm(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=zm(t.biasConstraint),this.biasRegularizer=gb(t.biasRegularizer),this.activityRegularizer=gb(t.activityRegularizer),this.dilationRate=Ib(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Cp(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Cp(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Cp(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(Rp("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!Hp(e.kernelSize,"number",1,3))throw new Cp(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:ub(this.activation),useBias:this.useBias,biasInitializer:am(this.biasInitializer),biasRegularizer:fb(this.biasRegularizer),activityRegularizer:fb(this.activityRegularizer),biasConstraint:Om(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Eb extends _b{constructor(e,t){super(e,t),this.kernel=null,Eb.verifyArgs(t),this.filters=t.filters,jp(this.filters,"filters"),this.kernelInitializer=rm(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=zm(t.kernelConstraint),this.kernelRegularizer=gb(t.kernelRegularizer)}build(e){e=um(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Cp(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],a=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Pr((()=>{let t;e=om(e);const n=null==this.bias?null:this.bias.read(),a=Kp(this.activation.getClassName());if(null!=a&&2===this.rank)t=Tb(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(1===this.rank)t=function(e,t,n,a=1,r="valid",s,i=1){return Pr((()=>{if(null==s&&(s="channelsLast"),sf(s),3!==e.shape.length)throw new Cp(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new Cp(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new Cp(`The bias for a conv1dWithBias operation should be 1, but is ${n.shape.length} instead`);if("channelsFirst"===s&&(e=Ou(e,[0,2,1])),"causal"===r)throw new $p("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=co(e,t,a,"same"===r?"same":"valid","NWC",i);return null!=n&&(o=Df(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Tb(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new $p("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,a=[1,1,1],r="valid",s,i){return Pr((()=>{if(null==s&&(s="channelsLast"),sf(s),4!==e.rank&&5!==e.rank)throw new Cp(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new Cp(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=$b(e,s);if("causal"===r)throw new $p("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=fo(o,t,a,"same"===r?"same":"valid","NDHWC",i),null!=n&&(o=Df(o,n)),"channelsFirst"===s&&(o=Ou(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=um(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const a=Sb(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(a)}let a=[e[0]];return"channelsLast"===this.dataFormat?(a=a.concat(t),a.push(this.filters)):(a.push(this.filters),a=a.concat(t)),a}getConfig(){const e={filters:this.filters,kernelInitializer:am(this.kernelInitializer),kernelRegularizer:fb(this.kernelRegularizer),kernelConstraint:Om(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new Cp(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Rb extends Eb{constructor(e){super(2,e),Rb.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Hp(e.kernelSize,"number",1,2))throw new Cp(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Rb.className="Conv2D",Ls(Rb);class Ab extends Eb{constructor(e){super(3,e),Ab.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new Cp(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Ab.className="Conv3D",Ls(Ab);class Fb extends Rb{constructor(e){if(super(e),this.inputSpec=[new fm({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Cp(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=um(e)).length)throw new Cp("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Cp("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new fm({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return Pr((()=>{let t=om(e);if(4!==t.shape.length)throw new Cp(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,a=n[0];let r,s;"channelsFirst"===this.dataFormat?(r=2,s=3):(r=1,s=2);const i=n[r],o=n[s],u=this.kernelSize[0],l=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[a,Nb(i,c,u,this.padding),Nb(o,h,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Ou(t,[0,2,3,1]));let p=po(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=Ou(p,[0,3,1,2])),null!=this.bias&&(p=Df(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=um(e)).slice();let n,a,r;"channelsFirst"===this.dataFormat?(n=1,a=2,r=3):(n=3,a=1,r=2);const s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[a]=Nb(t[a],o,s,this.padding),t[r]=Nb(t[r],u,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Fb.className="Conv2DTranspose",Ls(Fb);class Db extends Ab{constructor(e){if(super(e),this.inputSpec=[new fm({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new Cp(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=um(e)).length)throw new Cp("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Cp("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new fm({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return Pr((()=>{let t=om(e);if(5!==t.shape.length)throw new Cp(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,a=n[0];let r,s,i;"channelsFirst"===this.dataFormat?(i=2,r=3,s=4):(i=1,r=2,s=3);const o=n[i],u=n[r],l=n[s],c=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],m=this.strides[2],g=[a,Nb(o,p,c,this.padding),Nb(u,f,h,this.padding),Nb(l,m,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Ou(t,[0,2,3,4,1]));let b=go(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(b=Ou(b,[0,4,1,2,3])),null!==this.bias&&(b=Df(b,this.bias.read(),this.dataFormat)),null!==this.activation&&(b=this.activation.apply(b)),b}))}computeOutputShape(e){const t=(e=um(e)).slice();let n,a,r,s;"channelsFirst"===this.dataFormat?(n=1,a=2,r=3,s=4):(n=4,a=1,r=2,s=3);const i=this.kernelSize[0],o=this.kernelSize[1],u=this.kernelSize[2],l=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[a]=Nb(t[a],l,i,this.padding),t[r]=Nb(t[r],c,o,this.padding),t[s]=Nb(t[s],h,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Db.className="Conv3DTranspose",Ls(Db);class Mb extends Eb{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new Cp("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new Cp("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new Cp(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=rm(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=gb(t.depthwiseRegularizer),this.depthwiseConstraint=zm(t.depthwiseConstraint),this.pointwiseInitializer=rm(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=gb(t.pointwiseRegularizer),this.pointwiseConstraint=zm(t.pointwiseConstraint)}build(e){if((e=um(e)).length<this.rank+2)throw new Cp(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new Cp(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],a=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let e=0;e<this.rank;++e)r.push(1);r.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",a,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new fm({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Pr((()=>{let t;if(e=om(e),1===this.rank)throw new $p("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Ou(e,[0,2,3,1])),t=gu(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=Df(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Ou(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=am(this.depthwiseInitializer),e.pointwiseInitializer=am(this.pointwiseInitializer),e.depthwiseRegularizer=fb(this.depthwiseRegularizer),e.pointwiseRegularizer=fb(this.pointwiseRegularizer),e.depthwiseConstraint=Om(this.depthwiseConstraint),e.pointwiseConstraint=Om(this.pointwiseConstraint),e}}Mb.className="SeparableConv";class Ob extends Mb{constructor(e){super(2,e)}}Ob.className="SeparableConv2D",Ls(Ob);class Lb extends Eb{constructor(e){super(1,e),Lb.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Hp(e.kernelSize,"number",1,1))throw new Cp(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Lb.className="Conv1D",Ls(Lb);class zb extends xm{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Pr((()=>{if(e=om(e),"channelsLast"===this.dataFormat){const t=Nf(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Nf(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=Nf(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Nf(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}zb.className="Cropping2D",Ls(zb);class Pb extends xm{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,sf(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,Gp(ef,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return Pr((()=>{let t=om(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=Ou(t,[0,2,3,1]);const e=this.size[0]*n[2],a=this.size[1]*n[3],r="nearest"===this.interpolation?Dl.resizeNearestNeighbor(t,[e,a]):Dl.resizeBilinear(t,[e,a]);return Ou(r,[0,3,1,2])}{const e=this.size[0]*n[1],a=this.size[1]*n[2];return"nearest"===this.interpolation?Dl.resizeNearestNeighbor(t,[e,a]):Dl.resizeBilinear(t,[e,a])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}Pb.className="UpSampling2D",Ls(Pb);class Wb extends _b{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=rm(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=zm(e.depthwiseConstraint),this.depthwiseRegularizer=gb(e.depthwiseRegularizer)}build(e){if((e=um(e)).length<4)throw new Cp(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new Cp(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],a=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",a,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Pr((()=>{let t=function(e,t,n=[1,1],a="valid",r,s){return Pr((()=>{null==r&&(r="channelsLast"),sf(r);let i=Cb(e,r);if(4!==e.rank)throw new Cp(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new Cp(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=yo(i,t,n,"same"===a?"same":"valid","NHWC",s),"channelsFirst"===r&&(i=Ou(i,[0,3,1,2])),i}))}(e=om(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=Df(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=um(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],a="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=Sb(t,this.kernelSize[0],this.padding,this.strides[0]),s=Sb(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],a,r,s]:[e[0],r,s,a]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=am(this.depthwiseInitializer),e.depthwiseRegularizer=fb(this.depthwiseRegularizer),e.depthwiseConstraint=Om(this.depthwiseRegularizer),e}}function Bb(e,t,n,a){if(Array.isArray(e)){if(null!=t||null!=n)throw new Cp("When inputs is an array, neither initialState or constants should be provided");null!=a&&(n=e.slice(e.length-a,e.length),e=e.slice(0,e.length-a)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=r(t),constants:n=r(n)}}function Ub(e,t,n,a=!1,r,s,i=!1,o=!1){return Pr((()=>{const u=t.shape.length;if(u<3)throw new Cp(`Input should be at least 3D, but is ${u}D.`);const l=[1,0].concat(yf(2,u));if(t=Ou(t,l),null!=s)throw new $p("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&((r=vs(vs(r,"bool"),"float32")).rank===u-1&&(r=Io(r,-1)),r=Ou(r,l)),a&&(t=fu(t,0),null!=r&&(r=fu(r,0)));const c=[];let h,d=n;const p=t.shape[0],f=Au(t);let m,g;null!=r&&(m=Au(r));for(let t=0;t<p;++t){const n=f[t],a=Pr((()=>e(n,d)));if(null==r)h=a[0],d=a[1];else{const e=Pr((()=>{const e=m[t],n=Vs(ru(e),e);return{output:Ss($s(a[0],e),$s(d[0],n)),newStates:d.map(((t,r)=>Ss($s(a[1][r],e),$s(t,n))))}}));h=e.output,d=e.newStates}o&&c.push(h)}return o&&(g=$u(c,1)),[h,g,d]}))}Wb.className="DepthwiseConv2D",Ls(Wb);class Vb extends xm{constructor(e){let t;if(super(e),null==e.cell)throw new Cp("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Jb({cells:e.cell}):e.cell,null==t.stateSize)throw new Cp("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new fm({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?yf(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){sm(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let a;if(a=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const a of t)n.push([e[0],a]);return[a].concat(n)}return a}computeMask(e,t){return Pr((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new $p("Constants support is not implemented in RNN yet.");sm(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new fm({shape:[t,null,...n]});const a=[e[0]].concat(e.slice(2));let r;if(this.cell.build(a),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!b(this.stateSpec.map((e=>e.shape[e.shape.length-1])),r))throw new Cp(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map((e=>new fm({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){Pr((()=>{if(!this.stateful)throw new Sp("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Cp("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>nu([n,e]))):this.states_=[nu([n,this.cell.stateSize])];else if(null==e)Wr(this.states_),null!=this.keptStates&&(Wr(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>nu([n,e]))):this.states_[0]=nu([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Cp(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):Wr(this.states_);for(let t=0;t<this.states_.length;++t){const a=e[t],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,r];if(!b(a.shape,s))throw new Cp(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${a.shape}`);this.states_[t]=a}}this.states_=this.states_.map((e=>Br(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,a=null==t?null:t.constants;null==t&&(t={});const r=Bb(e,n,a,this.numConstants);e=r.inputs,n=r.initialState,a=r.constants;let s=[],i=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new fm({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=a&&(t.constants=a,s=s.concat(a),this.numConstants=a.length),s[0]instanceof mm){const n=[e].concat(s),a=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=a;const o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return Pr((()=>{const n=null==t?null:t.mask,a=null==t?null:t.training;let r=null==t?null:t.initialState;e=om(e),null==r&&(r=this.stateful?this.states_:this.getInitialState(e));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==s)throw new Cp(`RNN Layer has ${s} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:a},o=Ub(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],l=o[1],c=o[2];this.stateful&&this.resetStates(c,a);const h=this.returnSequences?l:u;return this.returnState?[h].concat(c):h}))}getInitialState(e){return Pr((()=>{let t=nu(e.shape);return t=Do(t,[1,2]),t=vf(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?Tf(t,[1,e]):t)):this.cell.stateSize>1?[Tf(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Vb.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t,n={}){const a=Ym(t.cell,n);return new e(Object.assign(t,{cell:a}))}}Vb.className="RNN",Ls(Vb);class Gb extends xm{}class Hb extends Gb{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,jp(this.units,"units"),this.activation=cb(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=rm(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=rm(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=rm(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=gb(e.kernelRegularizer),this.recurrentRegularizer=gb(e.recurrentRegularizer),this.biasRegularizer=gb(e.biasRegularizer),this.kernelConstraint=zm(e.kernelConstraint),this.recurrentConstraint=zm(e.recurrentConstraint),this.biasConstraint=zm(e.biasConstraint),this.dropout=gf([1,bf([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=gf([1,bf([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=um(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Pr((()=>{if(2!==e.length)throw new Cp(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const a=null!=t.training&&t.training;let r;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Zb({ones:()=>ru(e),rate:this.dropout,training:a,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Zb({ones:()=>ru(n),rate:this.recurrentDropout,training:a,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,i=this.recurrentDropoutMask;r=Ef(null!=s?$s(e,s):e,this.kernel.read()),null!=this.bias&&(r=Df(r,this.bias.read())),null!=i&&(n=$s(n,i));let o=Ss(r,Ef(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ub(this.activation),useBias:this.useBias,kernelInitializer:am(this.kernelInitializer),recurrentInitializer:am(this.recurrentInitializer),biasInitializer:am(this.biasInitializer),kernelRegularizer:fb(this.kernelRegularizer),recurrentRegularizer:fb(this.recurrentRegularizer),biasRegularizer:fb(this.biasRegularizer),activityRegularizer:fb(this.activityRegularizer),kernelConstraint:Om(this.kernelConstraint),recurrentConstraint:Om(this.recurrentConstraint),biasConstraint:Om(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}Hb.className="SimpleRNNCell",Ls(Hb);class jb extends Vb{constructor(e){e.cell=new Hb(e),super(e)}call(e,t){return Pr((()=>{null!=this.cell.dropoutMask&&(Wr(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Wr(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return new e(t)}}jb.className="SimpleRNN",Ls(jb);class qb extends Gb{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Cp("GRUCell does not support reset_after parameter set to true.");this.units=e.units,jp(this.units,"units"),this.activation=cb(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=cb(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=rm(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=rm(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=rm(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=gb(e.kernelRegularizer),this.recurrentRegularizer=gb(e.recurrentRegularizer),this.biasRegularizer=gb(e.biasRegularizer),this.kernelConstraint=zm(e.kernelConstraint),this.recurrentConstraint=zm(e.recurrentConstraint),this.biasConstraint=zm(e.biasConstraint),this.dropout=gf([1,bf([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=gf([1,bf([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=um(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Pr((()=>{if(2!==e.length)throw new Cp(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let a=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Zb({ones:()=>ru(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Zb({ones:()=>ru(a),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,s=this.recurrentDropoutMask;let i,o,u;0<this.dropout&&this.dropout<1&&(e=$s(e,r[0]));let l=Ef(e,this.kernel.read());this.useBias&&(l=Df(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(a=$s(a,s[0]));const c=this.recurrentKernel.read(),[h,d]=Nu(c,[2*this.units,this.units],c.rank-1),p=Ef(a,h),[f,m,g]=Nu(l,3,l.rank-1),[b,y]=Nu(p,2,p.rank-1);i=this.recurrentActivation.apply(Ss(f,b)),o=this.recurrentActivation.apply(Ss(m,y));const x=Ef($s(o,a),d);u=this.activation.apply(Ss(g,x));const w=Ss($s(i,a),$s(Ss(1,Qo(i)),u));return[w,w]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ub(this.activation),recurrentActivation:ub(this.recurrentActivation),useBias:this.useBias,kernelInitializer:am(this.kernelInitializer),recurrentInitializer:am(this.recurrentInitializer),biasInitializer:am(this.biasInitializer),kernelRegularizer:fb(this.kernelRegularizer),recurrentRegularizer:fb(this.recurrentRegularizer),biasRegularizer:fb(this.biasRegularizer),activityRegularizer:fb(this.activityRegularizer),kernelConstraint:Om(this.kernelConstraint),recurrentConstraint:Om(this.recurrentConstraint),biasConstraint:Om(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}qb.className="GRUCell",Ls(qb);class Kb extends Vb{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new qb(e),super(e)}call(e,t){return Pr((()=>{null!=this.cell.dropoutMask&&(Wr(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Wr(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Kb.className="GRU",Ls(Kb);class Xb extends Gb{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,jp(this.units,"units"),this.activation=cb(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=cb(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=rm(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=rm(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=rm(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=gb(e.kernelRegularizer),this.recurrentRegularizer=gb(e.recurrentRegularizer),this.biasRegularizer=gb(e.biasRegularizer),this.kernelConstraint=zm(e.kernelConstraint),this.recurrentConstraint=zm(e.recurrentConstraint),this.biasConstraint=zm(e.biasConstraint),this.dropout=gf([1,bf([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=gf([1,bf([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=um(e))[e.length-1];let a;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;a=new((t=class extends Pf{apply(t,a){const r=e.apply([n]),s=(new Bf).apply([n]),i=e.apply([2*n]);return $f($f(r,s),i)}}).className="CustomInit",t)}else a=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,a,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Pr((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new Cp(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let a=e[1];const r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Zb({ones:()=>ru(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Zb({ones:()=>ru(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let o,u,l,c;0<this.dropout&&this.dropout<1&&(e=$s(e,s[0]));let h=Ef(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(a=$s(a,i[0])),h=Ss(h,Ef(a,this.recurrentKernel.read())),this.useBias&&(h=Df(h,this.bias.read()));const[d,p,f,m]=Nu(h,4,h.rank-1);o=this.recurrentActivation.apply(d),u=this.recurrentActivation.apply(p),l=Ss($s(u,r),$s(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=$s(c,this.activation.apply(l));return[g,g,l]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ub(this.activation),recurrentActivation:ub(this.recurrentActivation),useBias:this.useBias,kernelInitializer:am(this.kernelInitializer),recurrentInitializer:am(this.recurrentInitializer),biasInitializer:am(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:fb(this.kernelRegularizer),recurrentRegularizer:fb(this.recurrentRegularizer),biasRegularizer:fb(this.biasRegularizer),activityRegularizer:fb(this.activityRegularizer),kernelConstraint:Om(this.kernelConstraint),recurrentConstraint:Om(this.recurrentConstraint),biasConstraint:Om(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}Xb.className="LSTMCell",Ls(Xb);class Yb extends Vb{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Xb(e),super(e)}call(e,t){return Pr((()=>{null!=this.cell.dropoutMask&&(Wr(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Wr(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Yb.className="LSTM",Ls(Yb);class Jb extends Gb{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Pr((()=>{let n=e.slice(1);const a=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?a.push(n.splice(0,e.stateSize.length)):a.push(n.splice(0,1));a.reverse();const r=[];let s;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=a[i],s=0===i?[e[0]].concat(n):[s[0]].concat(n),s=o.call(s,t),r.push(s.slice(1))}n=[];for(const e of r.slice().reverse())n.push(...e);return[s[0]].concat(n)}))}build(e){let t;sm(e)&&(e=e[0]),this.cells.forEach(((n,a)=>{cf(`RNNCell_${a}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t,n={}){const a=[];for(const e of t.cells)a.push(Ym(e,n));return new e({cells:a})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return dm(e)}setWeights(e){const t=[];for(const n of this.cells){const a=n.weights.length,r=e.splice(a);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],r[e]])}pm(t)}}function Zb(e){const{ones:t,rate:n,training:a=!1,count:r=1,dropoutFunc:s}=e,i=()=>null!=s?s(t(),n):Mf(t(),n),o=()=>Of(i,t,a);return!r||r<=1?Br(o().clone()):Array(r).fill(void 0).map(o).map((e=>Br(e.clone())))}Jb.className="StackedRNNCells",Ls(Jb);class Qb extends Vb{constructor(e){if(e.unroll)throw new $p("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new $p("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new fm({ndim:5})]}call(e,t){return Pr((()=>{if(null!=this.cell.dropoutMask&&(Wr(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Wr(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new Cp("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Pr((()=>{const{stateSize:t}=this.cell,n=e.shape,a=this.computeSingleOutputShape(n),r=nu([a[0],...a.slice(2)]);return Array.isArray(t)?Array(t.length).fill(r):[r]}))}resetStates(e,t=!1){Pr((()=>{if(!this.stateful)throw new Sp("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,a=this.computeSingleOutputShape(n),r=[a[0],...a.slice(2)];if(null==n[0])throw new Cp("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>nu(r))):this.states_=[nu(r)];else if(null==e)Wr(this.states_),null!=this.keptStates&&(Wr(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>nu(r))):this.states_[0]=nu(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Cp(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Wr(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],a=r;if(!b(n.shape,a))throw new Cp(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>Br(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:a,padding:r,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,u=e[o?3:2],l=e[o?4:3],c=Sb(u,a[0],r,s[0],i[0]),h=Sb(l,a[1],r,s[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}Qb.className="ConvRNN2D";class ey extends Xb{constructor(e){const{filters:t,kernelSize:n,strides:a,padding:r,dataFormat:s,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,jp(this.filters,"filters"),this.kernelSize=Ib(n,2,"kernelSize"),this.kernelSize.forEach((e=>jp(e,"kernelSize"))),this.strides=Ib(a||1,2,"strides"),this.strides.forEach((e=>jp(e,"strides"))),this.padding=r||"valid",of(this.padding),this.dataFormat=s||"channelsLast",sf(this.dataFormat),this.dilationRate=Ib(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>jp(e,"dilationRate")))}build(e){var t;e=um(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new Cp(`The channel dimension of the input should be defined. Found ${e[n]}`);const a=e[n],r=this.kernelSize.concat([a,4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,a=this.filters;e=new((t=class extends Pf{apply(e,t){return Cf([n.apply([a]),au([a]),n.apply([2*a])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Pr((()=>{if(3!==e.length)throw new Cp(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,a=e[0],r=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Zb({ones:()=>ru(a),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?$s(t[n],e):e;let u=o(a,i,0),l=o(a,i,1),c=o(a,i,2),h=o(a,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Zb({ones:()=>ru(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let p=o(r,d,0),f=o(r,d,1),m=o(r,d,2),g=o(r,d,3);const[b,y,x,w]=Nu(this.kernel.read(),4,3),[k,v,I,S]=this.useBias?Nu(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,b,k,this.padding),l=this.inputConv(l,y,v,this.padding),c=this.inputConv(c,x,I,this.padding),h=this.inputConv(h,w,S,this.padding);const[N,C,$,T]=Nu(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,N),f=this.recurrentConv(f,C),m=this.recurrentConv(m,$),g=this.recurrentConv(g,T);const _=this.recurrentActivation.apply(Ss(u,p)),E=this.recurrentActivation.apply(Ss(l,f)),R=Ss($s(E,s),$s(_,this.activation.apply(Ss(c,m)))),A=$s(this.recurrentActivation.apply(Ss(h,g)),this.activation.apply(R));return[A,A,R]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(a=Object.getOwnPropertySymbols(e);r<a.length;r++)t.indexOf(a[r])<0&&Object.prototype.propertyIsEnumerable.call(e,a[r])&&(n[a[r]]=e[a[r]])}return n}(e,["units"]),a={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),a)}inputConv(e,t,n,a){const r=lo(e,t,this.strides,a||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Df(r,n,this.dataFormat):r}recurrentConv(e,t){return lo(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}ey.className="ConvLSTM2DCell",Ls(ey);class ty extends Qb{constructor(e){const t=new ey(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}ty.className="ConvLSTM2D",Ls(ty);class ny extends xm{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return Pr((()=>{this.invokeCallHook(e,t);const n=om(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,a=this.getNoiseShape(n);return Of((()=>Mf(n,this.rate,a,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}ny.className="Dropout",Ls(ny);class ay extends ny{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}ay.className="SpatialDropout1D",Ls(ay);class ry extends xm{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,jp(this.units,"units"),this.activation=cb(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=rm(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=rm(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=zm(e.kernelConstraint),this.biasConstraint=zm(e.biasConstraint),this.kernelRegularizer=gb(e.kernelRegularizer),this.biasRegularizer=gb(e.biasRegularizer),this.activityRegularizer=gb(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=um(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=um(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return Pr((()=>{this.invokeCallHook(e,t);const n=om(e),a=Kp(this.activation.getClassName());let r;return null!=a?r=Ef(n,this.kernel.read(),a,this.bias?this.bias.read():null):(r=Ef(n,this.kernel.read()),null!=this.bias&&(r=Df(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r}))}getConfig(){const e={units:this.units,activation:ub(this.activation),useBias:this.useBias,kernelInitializer:am(this.kernelInitializer),biasInitializer:am(this.biasInitializer),kernelRegularizer:fb(this.kernelRegularizer),biasRegularizer:fb(this.biasRegularizer),activityRegularizer:fb(this.activityRegularizer),kernelConstraint:Om(this.kernelConstraint),biasConstraint:Om(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}ry.className="Dense",Ls(ry);class sy extends xm{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=um(e);for(const t of e.slice(1))if(null==t)throw new Cp(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],mf(e,1)]}call(e,t){return Pr((()=>{this.invokeCallHook(e,t);let n=om(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=Ou(n,e)}return function(e){if(e.rank<=1)throw new Cp(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],mf(e.shape,1)];return Xi(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}sy.className="Flatten",Ls(sy);class iy extends xm{constructor(e){super(e),this.supportsMasking=!0,this.activation=cb(e.activation)}call(e,t){return Pr((()=>{this.invokeCallHook(e,t);const n=om(e);return this.activation.apply(n)}))}getConfig(){const e={activation:ub(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}iy.className="Activation",Ls(iy);class oy extends xm{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Pr((()=>{return e=om(e),t=e,n=this.n,Pr((()=>{if(2!==t.shape.length)throw new Cp(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return Tf(vf(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}oy.className="RepeatVector",Ls(oy);class uy extends xm{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",a=t.slice();let r=1,s=null;for(let e=0;e<a.length;++e){const t=a[e];if(this.isUnknown(t)){if(null!==s)throw new Cp("Can only specifiy one unknown dimension.");s=e}else r*=t}const i=mf(e);if(null!==s){if(0===r||i%r!=0)throw new Cp(n);a[s]=i/r}else if(i!==r)throw new Cp(n);return a}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Pr((()=>{this.invokeCallHook(e,t);const n=om(e),a=n.shape,r=a.slice(0,1).concat(this.fixUnknownDimension(a.slice(1),this.targetShape));return Xi(n,r)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}uy.className="Reshape",Ls(uy);class ly extends xm{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=yf(1,e.dims.length+1);if(!b(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new fm({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=um(e)).slice();return this.dims.forEach(((n,a)=>{t[a+1]=e[n]})),t}call(e,t){return Ou(om(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}ly.className="Permute",Ls(ly);class cy extends xm{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=om(e);return Ai(eu(n,this.maskValue),-1)}call(e,t){return Pr((()=>{this.invokeCallHook(e,t);const n=om(e),a=Ai(eu(n,this.maskValue),-1,!0);return $s(n,vs(a,n.dtype))}))}}cy.className="Masking",Ls(cy);class hy extends xm{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Dp(e.inputLength))}this.inputDim=e.inputDim,jp(this.inputDim,"inputDim"),this.outputDim=e.outputDim,jp(this.outputDim,"outputDim"),this.embeddingsInitializer=rm(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=gb(e.embeddingsRegularizer),this.activityRegularizer=gb(e.activityRegularizer),this.embeddingsConstraint=zm(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Pr((()=>this.maskZero?(e=om(e),eu(e,Es(e))):null))}computeOutputShape(e){if(e=um(e),null==this.inputLength)return[...e,this.outputDim];const t=Dp(this.inputLength);if(t.length!==e.length-1)throw new Cp(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let a=0;a<t.length;++a){const r=t[a],s=e[a+1];if(null!=r&&null!=s&&r!==s)throw new Cp(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==r&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Pr((()=>{this.invokeCallHook(e,t);let n=om(e);"int32"!==n.dtype&&(n=kf(n,"int32"));const a=Rf(this.embeddings.read(),Xi(n,[n.size]));return Xi(a,um(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:am(this.embeddingsInitializer),embeddingsRegularizer:fb(this.embeddingsRegularizer),activityRegularizer:fb(this.activityRegularizer),embeddingsConstraint:Om(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}hy.className="Embedding",Ls(hy);class dy extends xm{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new $p}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let a=0;a<t.length;++a){const r=e[e.length-t.length+a],s=t[a];if(null==r||null==s||r<0||s<0)n.push(null);else if(1===r)n.push(s);else if(1===s)n.push(r);else{if(r!==s)throw new Cp("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[um(e)]),e.length<2)throw new Cp(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=Up(t),t.length>1)throw new Cp(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const a=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,a)}const a=e.map((e=>e.length));-1===e.indexOf(null)&&1===Up(a).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Pr((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const a=bf(n);for(let n of e){const e=n.rank;for(let t=0;t<a-e;++t)n=vf(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const a of e){const e=a.rank;if(null==e){const e=a.shape,r=e[0],s=e.slice(1).concat([r]);let i=Xi(a,[r].concat(mf(e.slice(1))));i=Ou(i,[1,0]),i=Xi(i,s),t.push(i),n=!0}else if(e>1){const r=yf(1,e).concat([0]);t.push(Ou(a,r)),n=!0}else t.push(a)}let a=this.mergeFunction(t);const r=a.rank;if(n)if(null==r){const e=a.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));a=Xi(Ou(Xi(a,[-1,t]),[1,0]),n)}else if(r>1){const e=[r-1].concat(yf(0,r-1));a=Ou(a,e)}return a}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const a=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,a)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=Up(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return Pr((()=>{if(null==t)return null;if(!Array.isArray(t))throw new Cp("`mask` should be an Array");if(!Array.isArray(e))throw new Cp("`inputs` should be an Array");if(t.length!==e.length)throw new Cp(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:Io(e,0))))[0];for(let e=1;e<t.length-1;++e)n=Ho(n,t[e]);return n}))}}class py extends dy{constructor(e){super(e)}mergeFunction(e){return Pr((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Ss(t,e[n]);return t}))}}py.className="Add",Ls(py);class fy extends dy{constructor(e){super(e)}mergeFunction(e){return Pr((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=$s(t,e[n]);return t}))}}fy.className="Multiply",Ls(fy);class my extends dy{constructor(e){super(e)}mergeFunction(e){return Pr((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Ss(t,e[n]);return $s(1/e.length,t)}))}}my.className="Average",Ls(my);class gy extends dy{constructor(e){super(e)}mergeFunction(e){return Pr((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Xs(t,e[n]);return t}))}}gy.className="Maximum",Ls(gy);class by extends dy{constructor(e){super(e)}mergeFunction(e){return Pr((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Jo(t,e[n]);return t}))}}by.className="Minimum",Ls(by);class yy extends dy{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new Cp("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const a=e[t].slice();a.splice(this.axis,1);let r=!1;for(const e of n)if(b(e,a)){r=!0;break}r||n.push(a)}if(n.length>1)throw new Cp("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Pr((()=>Cf(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Cp("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),a=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[a]||null==e[a]){n[a]=null;break}n[a]+=e[a]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new Cp("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Cp("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new Cp(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Pr((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const a=[];for(let n=0;n<e.length;++n)null==t[n]?a.push(vs(ru(e[n]),"bool")):t[n].rank<e[n].rank?a.push(Io(t[n],-1)):a.push(t[n]);const r=ro(a,this.axis);return Ri(r,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function xy(e,t){for(;e<0;)e+=t;return e}yy.className="Concatenate",Ls(yy);class wy extends dy{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){p(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new $p("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(t,n);if(t[a[0]]!==n[a[1]])throw new Cp(`Dimension incompatibility: ${t[a[0]]} !== ${n[a[1]]}`)}mergeFunction(e){if(2!==e.length)throw new Cp(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],a=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>xy(t,e[n].shape.length))):[xy(this.axes,n.shape.length),xy(this.axes,a.shape.length)],this.normalize&&(n=Jm(n,t[0]),a=Jm(a,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new $p("batchDot is not implemented for tensors of 4D or higher rank yet");if(p(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),p(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new $p("batchDot is not implemented for complex64-type Tensors yet.");const a=e.shape.length,r=t.shape.length;null==n&&(n=[a-1,r-2]);const s=n;return Pr((()=>{let n,i;if(a>r){n=a-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=Xi(t,t.shape.concat(e))}else if(r>a){n=r-a;const t=[];for(let e=0;e<n;++e)t.push(1);e=Xi(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=s[0]===s[1]?Do($s(e,t),s[0]):Do($s(Ou(e,[1,0]),t),s[1]);else{const n=s[0]!==e.shape.length-1,a=s[1]===t.shape.length-1;i=jo(e,t,n,a)}if(n>0){let e;e=a>r?a+r-3:a-1;const t=[];for(let a=e;a<e+n;++a)t.push(a);i=Cu(i,t)}return 1===i.shape.length&&(i=Io(i,1)),i}))}(n,a,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[xy(this.axes,e.length),xy(this.axes,t.length)],n}computeOutputShape(e){p(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new $p("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(t,n);t.splice(a[0],1),n.splice(a[1],1),n.splice(0,1);const r=t.concat(n);return 1===r.length&&r.push(1),r}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}wy.className="Dot",Ls(wy);class ky extends xm{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Pr((()=>{this.invokeCallHook(e,t);const n=om(e);return Of((()=>Ss(_f(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}ky.className="GaussianNoise",Ls(ky);class vy extends xm{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Pr((()=>{this.invokeCallHook(e,t);const n=om(e);return this.rate>0&&this.rate<1?Of((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return $s(n,_f(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}vy.className="GaussianDropout",Ls(vy);class Iy extends xm{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||om(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Pr((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return Of((()=>{const t=om(e),a=-1.7580993408473766;let r=_o(hu(n),this.rate);r=kf(r,"float32");const s=((1-this.rate)*(1+this.rate*a**2))**-.5,i=-s*a*this.rate,o=Ss($s(t,r),$s(Ss(r,-1),a));return Ss($s(o,s),i)}),(()=>om(e)),t.training||!1)}return e}))}}function Sy(e,t,n,a,r,s=.001){let i;if(2===e.rank)i=Qi(e,t,n,a,r,s);else if(3===e.rank)i=eo(e,t,n,a,r,s);else{if(4!==e.rank)throw new $p(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=to(e,t,n,a,r,s)}return i}Iy.className="AlphaDropout",Ls(Iy);class Ny extends xm{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=rm(e.betaInitializer||"zeros"),this.gammaInitializer=rm(e.gammaInitializer||"ones"),this.movingMeanInitializer=rm(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=rm(e.movingVarianceInitializer||"ones"),this.betaConstraint=zm(e.betaConstraint),this.gammaConstraint=zm(e.gammaConstraint),this.betaRegularizer=gb(e.betaRegularizer),this.gammaRegularizer=gb(e.gammaRegularizer)}build(e){e=um(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new Cp(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new fm({ndim:e.length,axes:{[t]:n}})];const a=[n];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Pr((()=>{const n=null!=t.training&&t.training,a=om(e),r=a.shape,s=r.length,i=yf(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);const u=Ep(1,s);u[o]=r[o];const l=i.slice();l.sort();const c=!b(l,yf(0,s).slice(0,s-1));if(!n)return(()=>{if(c){const e=Xi(this.movingMean.read(),u),t=Xi(this.movingVariance.read(),u),n=this.center?Xi(this.beta.read(),u):null,r=this.scale?Xi(this.gamma.read(),u):null;return Sy(a,e,t,n,r,this.epsilon)}return Sy(a,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=function(e,t,n,a,r=.001){return b(a.slice().sort(),yf(0,e.rank-1))?function(e,t,n,a,r=.001){return Pr((()=>{const s=Zo(e,a),i=s.mean,o=s.variance;return[Sy(e,i,o,n,t,r),i,o]}))}(e,t,n,a,r):function(e,t,n,a,r=.001){return Pr((()=>{const s=Zo(e,a),i=s.mean,o=s.variance,u=[];for(const t of yf(0,e.rank))-1!==a.indexOf(t)?u.push(1):u.push(e.shape[t]);const l=Xi(i,u),c=Xi(o,u),h=null==t?null:Xi(t,u),d=null==n?null:Xi(n,u);return[Sy(e,l,c,d,h,r),i,o]}))}(e,t,n,a,r)}(a,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{Pr((()=>{const a=1-n,r=e.read(),s=$s(Vs(r,t),a);e.write(Vs(r,s))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:am(this.betaInitializer),gammaInitializer:am(this.gammaInitializer),movingMeanInitializer:am(this.movingMeanInitializer),movingVarianceInitializer:am(this.movingVarianceInitializer),betaRegularizer:fb(this.betaRegularizer),gammaRegularizer:fb(this.gammaRegularizer),betaConstraint:Om(this.betaConstraint),gammaConstraint:Om(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Ny.className="BatchNormalization",Ls(Ny);class Cy extends xm{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=rm(e.betaInitializer||"zeros"),this.gammaInitializer=rm(e.gammaInitializer||"ones"),this.betaRegularizer=gb(e.betaRegularizer),this.gammaRegularizer=gb(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=um(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==Up(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t])),a=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,a):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,a):this.beta=null,this.built=!0}call(e,t){const n=om(e),a=n.shape,r=a.length;return Pr((()=>{let{mean:e,variance:t}=Zo(n,this.axis,!0);const s=Ep(1,r);for(const e of this.axis)s[e]=a[e];const i=e=>null!=e&&e.shape.length!==r?Xi(e,s):e;let o=this.scale?i(this.gamma.read()):null,u=this.center?i(this.beta.read()):null;const l=[],c=[];for(let e=0;e<r;++e)-1!==this.axis.indexOf(e)?(l.push(a[e]),c.push(1)):(l.push(1),c.push(a[e]));return e=So(e,l),t=So(t,l),null!=o&&(o=So(o,c)),null!=u&&(u=So(u,c)),Sy(n,e,t,u,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:am(this.betaInitializer),gammaInitializer:am(this.gammaInitializer),betaRegularizer:fb(this.betaRegularizer),gammaRegularizer:fb(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Cy.className="LayerNormalization",Ls(Cy);class $y extends xm{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new Cp(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new Cp(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new Cp(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new fm({ndim:4})]}computeOutputShape(e){let t,n;return e=um(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Pr((()=>{return t=om(e),n=this.padding,a=this.dataFormat,Pr((()=>{if(4!==t.rank)throw new Cp(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Cp("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==a&&(a="channelsLast"),"channelsLast"!==a&&"channelsFirst"!==a)throw new Cp(`Unknown data format: ${a}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===a?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],su(t,e)}));var t,n,a}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function Ty(e,t,n,a,r,s){return Pr((()=>{let i;sf(r),uf(s),of(a),null==n&&(n=[1,1]),null==a&&(a="valid"),null==r&&(r="channelsLast"),null==s&&(s="max"),e=Cb(e,r);const o="same"===a?"same":"valid";return i="max"===s?qo(e,t,n,o):Yi(e,t,n,o),"channelsFirst"===r&&(i=Ou(i,[0,3,1,2])),i}))}function _y(e,t,n,a,r,s){return Pr((()=>{let i;sf(r),uf(s),of(a),null==n&&(n=[1,1,1]),null==a&&(a="valid"),null==r&&(r="channelsLast"),null==s&&(s="max"),e=$b(e,r);const o="same"===a?"same":"valid";return i="max"===s?Ko(e,t,n,o):Ji(e,t,n,o),"channelsFirst"===r&&(i=Ou(i,[0,4,1,2,3])),i}))}$y.className="ZeroPadding2D",Ls($y);class Ey extends xm{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new Cp(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(jp(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new Cp(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}jp(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,of(this.padding),this.inputSpec=[new fm({ndim:3})]}computeOutputShape(e){const t=Sb((e=um(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Pr((()=>{this.invokeCallHook(e,t),e=vf(om(e),2);const n=this.poolingFunction(om(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Cu(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Ry extends Ey{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return sf(r),of(a),Ty(e,t,n,a,r,"max")}}Ry.className="MaxPooling1D",Ls(Ry);class Ay extends Ey{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return sf(r),of(a),Ty(e,t,n,a,r,"avg")}}Ay.className="AveragePooling1D",Ls(Ay);class Fy extends xm{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new Cp(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];jp(this.poolSize,"poolSize"),jp(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,sf(this.dataFormat),of(this.padding),this.inputSpec=[new fm({ndim:4})]}computeOutputShape(e){e=um(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Sb(t,this.poolSize[0],this.padding,this.strides[0]),n=Sb(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Pr((()=>(this.invokeCallHook(e,t),this.poolingFunction(om(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Dy extends Fy{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return sf(r),of(a),Ty(e,t,n,a,r,"max")}}Dy.className="MaxPooling2D",Ls(Dy);class My extends Fy{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return sf(r),of(a),Ty(e,t,n,a,r,"avg")}}My.className="AveragePooling2D",Ls(My);class Oy extends xm{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new Cp(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];jp(this.poolSize,"poolSize"),jp(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,sf(this.dataFormat),of(this.padding),this.inputSpec=[new fm({ndim:5})]}computeOutputShape(e){e=um(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],a="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Sb(t,this.poolSize[0],this.padding,this.strides[0]),n=Sb(n,this.poolSize[1],this.padding,this.strides[1]),a=Sb(a,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,a]:[e[0],t,n,a,e[4]]}call(e,t){return Pr((()=>(this.invokeCallHook(e,t),this.poolingFunction(om(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Ly extends Oy{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return sf(r),of(a),_y(e,t,n,a,r,"max")}}Ly.className="MaxPooling3D",Ls(Ly);class zy extends Oy{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return sf(r),of(a),_y(e,t,n,a,r,"avg")}}zy.className="AveragePooling3D",Ls(zy);class Py extends xm{constructor(e){super(e),this.inputSpec=[new fm({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new $p}}class Wy extends Py{constructor(e){super(e||{})}call(e,t){return Pr((()=>{const t=om(e);return Xo(t,1)}))}}Wy.className="GlobalAveragePooling1D",Ls(Wy);class By extends Py{constructor(e){super(e||{})}call(e,t){return Pr((()=>{const t=om(e);return Fo(t,1)}))}}By.className="GlobalMaxPooling1D",Ls(By);class Uy extends xm{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,sf(this.dataFormat),this.inputSpec=[new fm({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new $p}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Vy extends Uy{call(e,t){return Pr((()=>{const t=om(e);return"channelsLast"===this.dataFormat?Xo(t,[1,2]):Xo(t,[2,3])}))}}Vy.className="GlobalAveragePooling2D",Ls(Vy);class Gy extends Uy{call(e,t){return Pr((()=>{const t=om(e);return"channelsLast"===this.dataFormat?Fo(t,[1,2]):Fo(t,[2,3])}))}}Gy.className="GlobalMaxPooling2D",Ls(Gy);class Hy extends xm{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const a=Ym(t.layer,n);delete t.layer;const r={layer:a};return Object.assign(r,t),new e(r)}}class jy extends Hy{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=um(e)).length<3)throw new Cp(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=um(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),a=e[1];return[n[0],a].concat(n.slice(1))}call(e,t){return Pr((()=>Ub(((e,n)=>[om(this.layer.call(e,t)),[]]),e=om(e),[],!1,null,null,!1,!0)[1]))}}jy.className="TimeDistributed",Ls(jy);class qy extends Hy{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Ym(n),t.goBackwards=!0!==t.goBackwards;const a={};var r;if(a.className=e.layer.getClassName(),a.config=t,this.backwardLayer=Ym(a),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,r=this.mergeMode,Gp(af,"BidirectionalMergeMode",r),e.weights)throw new $p("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,a,r=this.forwardLayer.computeOutputShape(e);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),this.returnState?(a=r.slice(1),t=r[0]):t=r[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(a).concat(a.slice()):[t].concat(a).concat(a.slice()):Fp(n)}apply(e,t){let n=null==t?null:t.initialState,a=null==t?null:t.constants;null==t&&(t={});const r=Bb(e,n,a,this.numConstants);if(e=r.inputs,n=r.initialState,a=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==a)return super.apply(e,t);const s=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new Cp("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);const a=n.map((e=>new fm({shape:e.shape})));this.forwardLayer.stateSpec=a.slice(0,e/2),this.backwardLayer.stateSpec=a.slice(e/2),i.push(...a)}if(null!=a)throw new $p("Support for constants in Bidirectional layers is not implemented yet.");const o=s[0]instanceof mm;for(const e of s)if(e instanceof mm!==o)throw new Cp("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(s),a=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=a;const o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return Pr((()=>{const n=t.initialState;let a,r,s,i;if(null==n)a=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{const s=n.slice(0,n.length/2),i=n.slice(n.length/2);a=this.forwardLayer.call(e,Object.assign(t,{initialState:s})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(a)&&(s=a.slice(1).concat(r.slice(1))),a=a[0],r=r[0]),this.returnSequences&&(r=fu(r,1)),"concat"===this.mergeMode?i=Cf([a,r]):"sum"===this.mergeMode?i=Ss(a,r):"ave"===this.mergeMode?i=$s(.5,Ss(a,r)):"mul"===this.mergeMode?i=$s(a,r):null==this.mergeMode&&(i=[a,r]),this.returnState?null==this.mergeMode?i.concat(s):[i].concat(s):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){cf(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),cf(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=Ym(t.layer);if(delete t.layer,null!=t.numConstants)throw new $p("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const a=t;return a.layer=n,new e(a)}}qy.className="Bidirectional",Ls(qy);class Ky extends xm{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Pr((()=>("float32"!==(e=om(e)).dtype&&(e=kf(e,"float32")),Ss($s(e,this.scale),this.offset))))}}Ky.className="Rescaling",Ls(Ky);const{resizeBilinear:Xy,cropAndResize:Yy}=Dl;class Jy extends xm{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,a,r,s,i,o){return Pr((()=>{let u,l=!1;const c=[t/s,n/i,(a+t)/s,(r+n)/i],h=[];3===e.rank?(l=!0,u=$u([e])):u=e;for(let e=0;e<u.shape[0];e++)h.push(c);const d=Mr(h,[h.length,4]),p=du(0,h.length,1,"int32"),f=Yy(u,d,p,[a,r],"nearest");return kf(l?om(Au(f)):f,o)}))}upsize(e,t,n,a){return Pr((()=>kf(Xy(e,[t,n]),a)))}call(e,t){return Pr((()=>{const t=om(e),n=t.dtype,a=t.shape,r=a[a.length-3],s=a[a.length-2];let i=0;r!==this.height&&(i=Math.floor((r-this.height)/2));let o=0;return s!==this.width&&(o=Math.floor((s-this.width)/2),0===o&&(o=1)),i>=0&&o>=0?this.centerCrop(t,i,o,this.height,this.width,r,s,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=um(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}Jy.className="CenterCrop",Ls(Jy);class Zy extends xm{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=um(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return Pr((()=>{let n;if("int32"!==(e=om(e)).dtype&&(e=kf(e,"int32")),void 0!==t.countWeights){if("count"!==this.outputMode)throw new Cp(`countWeights is not used when outputMode !== count.\n              Received countWeights=${t.countWeights}`);n=om(t.countWeights)}const a=Fo(e),r=Yo(e),s=To(this.numTokens,a).bufferSync().get(0),i=_o(r,0).bufferSync().get(0);if(!s||!i)throw new Cp(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return function(e,t,n,a){let r=om(e);if("int32"!==r.dtype&&(r=kf(r,"int32")),"int"===t)return r;const s=r.shape;if(0===r.rank&&(r=Io(r,-1)),"oneHot"===t&&1!==r.shape[r.shape.length-1]&&(r=Io(r,-1)),r.rank>2)throw new Cp(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${s} which would result in output rank ${r.rank}.`);const i=["multiHot","oneHot"].includes(t);let o;if(o=bo(r,void 0!==a&&"count"===t?a:[],n,i),"tfIdf"!==t)return o;if(a)return $s(o,a);throw new Cp("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)}))}}Zy.className="CategoryEncoding",Ls(Zy);const Qy=new Set(["bilinear","nearest"]);class ex extends xm{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!Qy.has(e.interpolation))throw new Cp(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){const t=(e=um(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Pr((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return Dl.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return Dl.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...Qy]} are supported`)}))}}ex.className="Resizing",Ls(ex);class tx{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}tx.className="RandomSeed";class nx extends xm{constructor(e){super(e),this.randomGenerator=new tx(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}nx.className="BaseRandomLayer";const ax=new Set(["bilinear","nearest"]);class rx extends nx{constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new Cp(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new Cp(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new Cp(`factor cannot have upper bound less than lower bound.\n        Got upper bound: ${this.widthUpper}.\n        Got lower bound: ${this.widthLower}\n      `);if(n){if(!ax.has(n))throw new Cp(`Invalid interpolation parameter: ${n} is not implemented`);this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=um(e))[2];return[this.imgHeight,-1,t]}call(e,t){return Pr((()=>{const t=om(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=hu([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let a=this.widthFactor.dataSync()[0]*n;a=Math.round(a);const r=[this.imgHeight,a];switch(this.interpolation){case"bilinear":return Dl.resizeBilinear(e,r);case"nearest":return Dl.resizeNearestNeighbor(e,r);default:throw new Error(`Interpolation is ${this.interpolation}\n          but only ${[...ax]} are supported`)}}))}}function sx(e){return new ry(e)}var ix,ox,ux,lx;function cx(e,t,n=new Map,a=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(a.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(fx(e)){const r=Array.isArray(e)?[]:{};a.add(e);for(const s in e){const i=cx(e[s],t,n,a);r[s]=i}return a.delete(e),e.__proto__&&(r.__proto__=e.__proto__),r}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,r.value),r.value}function hx(e,t=px){return dx(e,t)}function dx(e,t,n=new Set){const a=e[0];if(n.has(a))throw new Error("Circular references are not supported.");const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(fx(a)){const r=Array.isArray(a)?[]:{};n.add(a);for(const s in a){const a=dx(e.map((e=>e[s])),t,n);r[s]=a}return n.delete(a),r}throw new Error(`Can't recurse into non-iterable type: ${a}`)}return r.value}function px(e){return null===e?null:fx(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function fx(e){let t=!1;if(q().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:a}=n(551);t=e instanceof a}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof tr)&&!(e instanceof Promise)&&!t)}function mx(e){return cx(e,gx)}function gx(e){return e instanceof tr?{value:e.clone(),recurse:!1}:fx(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}rx.className="RandomWidth",Ls(rx),q().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(ix||(ix={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(ox||(ox={})),Error,new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);class bx{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class yx extends bx{constructor(){super(yx.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}yx.INITIAL_CAPACITY=32;class xx{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new Tx(this,e)}filter(e){return new Cx(this,e)}map(e){return new $x(this,e)}mapAsync(e){return new _x(this,e)}serialMapAsync(e){return new _x(this,e).serial()}flatmap(e){return new Rx(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new Nx(this,e,t)}columnMajorBatch(e,t=!0,n=px){return this.rowMajorBatch(e,t).map((e=>hx(e,n)))}concatenate(e,t){return new Ax(new wx([this,e]),t)}take(e){return e<0||null==e?this:new Sx(this,e)}skip(e){return e<0||null==e?this:new Ix(this,e)}prefetch(e){return new Fx(this,e)}shuffle(e,t){return new Dx(this,e,t)}serial(){return new vx(this)}}class wx extends xx{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:mx(e),done:!1}}}class kx extends xx{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class vx extends xx{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class Ix extends xx{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;Wr(e.value)}return this.upstream.next()}}class Sx extends xx{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class Nx extends xx{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class Cx extends xx{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Wr(e.value)}}}class $x extends xx{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=gr(e.value),n=this.transform(e.value),a=gr(n);for(const e of t)mr(e,a)||e.dispose();return{value:n,done:!1}}}class Tx extends xx{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class _x extends xx{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=gr(e.value),n=await this.transform(e.value),a=gr(n);for(const e of t)mr(e,a)||e.dispose();return{value:n,done:!1}}}class Ex extends xx{constructor(){super(),this.outputQueue=new yx,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class Rx extends Ex{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=gr(e.value),n=this.transform(e.value),a=gr(n);this.outputQueue.pushAll(n);for(const e of t)mr(e,a)||e.dispose();return!0}}class Ax extends xx{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}(lx=ux||(ux={}))[lx.FAIL=0]="FAIL",lx[lx.SHORTEST=1]="SHORTEST",lx[lx.LONGEST=2]="LONGEST";class Fx extends xx{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new bx(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class Dx extends Fx{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=ou.alea(n||Ma().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class Mx{constructor(){this.size=null}batch(e,t=!0){const n=this;let a;return p(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),a=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),Ox((async()=>(await n.iterator()).columnMajorBatch(e,t,Lx)),a)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,Ox((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,Ox((async()=>(await t.iterator()).filter((t=>Pr((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return Ox((async()=>(await t.iterator()).map((t=>Pr((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return Ox((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return Ox((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,Ox((async()=>{return n=(r=async()=>({value:await t.iterator(),done:!1}),new kx(r)).take(e),new Ax(n,a);var n,a,r}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,Ox((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const a=this,r=ou.alea(t||Ma().toString());return Ox((async()=>{let t=r.int32();return n&&(t+=r.int32()),(await a.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,Ox((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Ox(e,t=null){return new class extends Mx{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function Lx(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof tr||za(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof tr?$u(e):Mr(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}function zx(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&p("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}Mx.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const Px=Gc;class Wx extends o{nextDataId(){return Wx.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new i(this,Lr())}write(e,t,n){this.firstUse&&(this.firstUse=!1,q().get("IS_NODE")&&ua("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const a={id:this.nextDataId()};return this.data.set(a,{values:e,dtype:n,refCount:1}),a}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&_(n[0])){const r=n.map((e=>Oa(e)));a=this.write(r,e,t)}else a=this.write(n,e,t);return{dataId:a,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,a,r){this.data.set(e,{values:t,dtype:a,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);return"complex64"===t?uc(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):function(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>La(e)));return ks(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return ks(e.shape,e.dtype,t)}makeOutput(e,t,n){return Lr().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Ma();return e(),{kernelMs:Ma()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){zx([e],"where");const t=this.readSync(e.dataId);return Px(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function Bx(e){return(t,n,a)=>{const r=C(n,t.length);for(let n=0;n<t.length;++n)r[n]=e(t[n],a);return r}}function Ux(e,t,n){return Vx(e,Bx(t),n)}function Vx(e,t,n){return({inputs:a,attrs:r,backend:s})=>{const{x:i}=a;zx(i,e);const o=s,u=o.data.get(i.dataId).values;let l;if("string"===i.dtype){if(!Array.isArray(u))throw new Error("String tensor's value was not an instance of Array");l=Uc(u)}else l=u;const c=n||i.dtype,h=t(l,c,r);return o.makeTensorInfo(i.shape,c,h)}}Wx.nextDataId=0,Ur("cpu",(()=>new Wx),1);const Gx=Ux(Xe,(e=>e>=0?e:Math.exp(e)-1)),Hx={kernelName:Xe,backendName:"cpu",kernelFunc:Gx};function jx(e){const{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const qx={kernelName:dt,backendName:"cpu",kernelFunc:jx};function Kx(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:s}=a;zx([r],"leakyRelu");const i=g(r.shape),o=n.data.get(r.dataId).values,u=N("float32",i);for(let e=0;e<o.length;e++)u[e]=o[e]<0?s*o[e]:o[e];return n.makeTensorInfo(r.shape,"float32",u)}const Xx={kernelName:yt,backendName:"cpu",kernelFunc:Kx};function Yx(e){return(t,n,a,r,s)=>{const i=Ks(t,n),o=i.length,u=D(i),l=N(s,g(i)),c=t.length,h=n.length,d=D(t),p=D(n),f=js(t,i),m=js(n,i);if(f.length+m.length===0)for(let t=0;t<l.length;++t)l[t]=e(a[t%a.length],r[t%r.length]);else for(let t=0;t<l.length;++t){const n=U(t,o,u),s=n.slice(-c);f.forEach((e=>s[e]=0));const i=B(s,c,d),g=n.slice(-h);m.forEach((e=>g[e]=0));const b=B(g,h,p);l[t]=e(a[i],r[b])}return[l,i]}}const Jx=Yx(((e,t)=>e<0?t*e:e));function Zx(e){const{inputs:t,backend:n}=e,{x:a,alpha:r}=t;zx([a,r],"prelu");const s=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,[o,u]=Jx(a.shape,r.shape,s,i,"float32");return n.makeTensorInfo(u,"float32",o)}const Qx={kernelName:Qt,backendName:"cpu",kernelFunc:Zx},ew=Ux(un,(e=>Math.max(0,e))),tw={kernelName:un,backendName:"cpu",kernelFunc:ew},nw=Ux(fn,(e=>Math.min(Math.max(0,e),6))),aw={kernelName:fn,backendName:"cpu",kernelFunc:nw},rw=Bx((e=>1/(1+Math.exp(-e)))),sw=Ux($n,(e=>1/(1+Math.exp(-e)))),iw={kernelName:$n,backendName:"cpu",kernelFunc:sw};function ow(e,t,n,a,r){if("linear"===n)return jx({inputs:{x:t},backend:e});if("relu"===n)return ew({inputs:{x:t},backend:e});if("elu"===n)return Gx({inputs:{x:t},backend:e});if("relu6"===n)return nw({inputs:{x:t},backend:e});if("prelu"===n)return Zx({inputs:{x:t,alpha:a},backend:e});if("leakyrelu"===n)return Kx({inputs:{x:t},backend:e,attrs:{alpha:r}});if("sigmoid"===n)return sw({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function uw(e){const{inputs:t,backend:n}=e,{real:a,imag:r}=t,s=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,o=n.makeTensorInfo(a.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(a.shape,"float32",s),imag:n.makeTensorInfo(r.shape,"float32",i)},o}const lw={kernelName:Se,backendName:"cpu",kernelFunc:uw};function cw(e,t,n="float32"){if("complex64"===n)return uw({inputs:{real:cw(e,t,"float32"),imag:cw(e,t,"float32")},backend:e});const a=z(g(t),n);return e.makeTensorInfo(t,n,a)}function hw(e){const{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.real,s=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,s)}const dw={kernelName:sn,backendName:"cpu",kernelFunc:hw};function pw(e,t,n,a){if("int32"===a)return[t,"int32",Int32Array.from(e)];if("bool"===a){const a=Da([0],n),[r,s]=Yx(((e,t)=>e!==t?1:0))(t,[],e,a,"bool");return[s,"bool",r]}throw new Error(`Error in Cast: failed to cast ${n} to ${a}`)}function fw(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dtype:s}=a;if("complex64"===s){if("complex64"===r.dtype)return jx({inputs:{x:r},backend:n});const e=cw(n,r.shape,r.dtype),t=fw({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),a=uw({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),a}if("complex64"===r.dtype){const e=hw({inputs:{input:r},backend:n}),t=fw({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!$(r.dtype,s)){const e=jx({inputs:{x:r},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}const i=n.data.get(r.dataId).values,[o,u,l]=pw(i,r.shape,r.dtype,s);return n.makeTensorInfo(o,u,l)}const mw={kernelName:ke,backendName:"cpu",kernelFunc:fw};function gw(e,t,n,a){return null==n?({inputs:n,backend:r})=>{const{a:s,b:i}=n,o=r;zx([s,i],e);const u=o.data.get(s.dataId).values,l=o.data.get(i.dataId).values,c="string"===s.dtype?Uc(u):u,h="string"===s.dtype?Uc(l):l,d=a||s.dtype,[p,f]=t(s.shape,i.shape,c,h,d);return o.makeTensorInfo(f,d,p)}:({inputs:e,backend:r})=>{const{a:s,b:i}=e,o=r;if("complex64"===s.dtype||"complex64"===i.dtype){const e=fw({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),a=t.complexTensorInfos.real,r=t.complexTensorInfos.imag,u=o.data.get(a.dataId).values,l=o.data.get(r.dataId).values,c=fw({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=o.data.get(d.dataId).values,m=o.data.get(p.dataId).values,[g,b,y]=n(s.shape,i.shape,u,l,f,m),x=o.makeTensorInfo(y,"float32",g),w=o.makeTensorInfo(y,"float32",b),k=uw({inputs:{real:x,imag:w},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(w),k}{const e=o.data.get(s.dataId).values,n=o.data.get(i.dataId).values,r=a||s.dtype,[u,l]=t(s.shape,i.shape,e,n,r);return o.makeTensorInfo(l,r,u)}}}function bw(e){return(t,n,a,r,s,i)=>{const o=Ks(t,n),u=g(o),l=o.length,c=D(o),h=N("float32",u),d=N("float32",u),p=js(t,o),f=js(n,o),m=uc(a,r),b=uc(s,i),y=t.length,x=D(t),w=n.length,k=D(n);if(p.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%m.length,a=t%b.length,r=e(m[2*n],m[2*n+1],b[2*a],b[2*a+1]);h[t]=r.real,d[t]=r.imag}else for(let t=0;t<h.length;t++){const n=U(t,l,c),a=n.slice(-y);p.forEach((e=>a[e]=0));const r=B(a,y,x),s=n.slice(-w);f.forEach((e=>s[e]=0));const i=B(s,w,k),o=e(m[2*r],m[2*r+1],b[2*i],b[2*i+1]);h[t]=o.real,d[t]=o.imag}return[h,d,o]}}const yw=Yx(((e,t)=>e+t)),xw=bw(((e,t,n,a)=>({real:e+n,imag:t+a}))),ww=gw(te,yw,xw),kw={kernelName:te,backendName:"cpu",kernelFunc:ww};function vw(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:s}=a,i=g(r.shape),o=v(s,i),u=g(o);p(i===u,(()=>`The new shape (${o}) has ${u} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(r.dataId);const l=n.data.get(r.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:r.dataId,shape:o,dtype:r.dtype}}const Iw={kernelName:ln,backendName:"cpu",kernelFunc:vw};function Sw(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:i,transposeB:o}=a;zx([r,s],"matMul");const u=r.shape.length,l=s.shape.length,c=i?r.shape[u-2]:r.shape[u-1],h=o?s.shape[l-1]:s.shape[l-2],d=i?r.shape[u-1]:r.shape[u-2],f=o?s.shape[l-2]:s.shape[l-1],m=r.shape.slice(0,-2),b=s.shape.slice(0,-2),y=g(m),x=g(b),w=Ks(r.shape.slice(0,-2),s.shape.slice(0,-2)).concat([d,f]);p(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${r.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));const k=o?[x,f,h]:[x,h,f],v=vw({inputs:{x:r},backend:n,attrs:{shape:i?[y,c,d]:[y,d,c]}}),I=vw({inputs:{x:s},backend:n,attrs:{shape:k}}),S=i?v.shape[1]:v.shape[2],N=i?v.shape[2]:v.shape[1],C=o?I.shape[1]:I.shape[2],$=Math.max(y,x),T=n.data.get(v.dataId).values,_=n.data.get(I.dataId).values,E=D(v.shape),R=D(I.shape),[A,F,M]=i?[E[0],1,E[1]]:[E[0],E[1],1],[O,L,z]=o?[1,R[1],R[0]]:[R[1],1,R[0]],P=N*C,W=ks([$,N,C],v.dtype),B=W.values,U=n.blockSize;for(let e=0;e<$;e++){const t=e%y,n=e%x;for(let a=0;a<N;a+=U){const r=Math.min(a+U,N);for(let s=0;s<C;s+=U){const i=Math.min(s+U,C);for(let o=0;o<S;o+=U){const u=Math.min(o+U,S);for(let l=a;l<r;l++)for(let a=s;a<i;a++){let r=0;for(let e=o;e<u;e++)r+=T[t*A+l*F+e*M]*_[e*O+a*L+n*z];B[e*P+(l*C+a)]+=r}}}}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(I),n.makeTensorInfo(w,W.dtype,W.values)}const Nw={kernelName:ge,backendName:"cpu",kernelFunc:Sw},Cw={kernelName:sa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=a;let d,p,f;const m=[];d=Sw({inputs:{a:r,b:s},attrs:{transposeA:u,transposeB:l},backend:n}),i&&(p=ww({inputs:{a:d,b:i},backend:n}),m.push(d),d=p),c&&(f=ow(n,d,c,o,h),m.push(d),d=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return d}};function $w(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const Tw={kernelName:Z,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;zx(t,"abs");let a=new Float32Array(g(t.shape));return a=$w(n.data.get(t.dataId).values),n.makeOutput(a,t.shape,t.dtype)}},_w=Ux(Q,(e=>Math.acos(e))),Ew={kernelName:Q,backendName:"cpu",kernelFunc:_w},Rw=Ux(ee,(e=>Math.acosh(e))),Aw={kernelName:ee,backendName:"cpu",kernelFunc:Rw},Fw={kernelName:ne,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,a=t;zx(t,"addN");const r=a.map((e=>n.data.get(e.dataId).values)),s=ks(a[0].shape,a[0].dtype),i=s.values;for(let e=0;e<a.length;e++){const t=r[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}};function Dw(e,t,n,a,r){const s=t.length,i=g(t),o=D(t),u=D(r),l=N(n,g(r));for(let t=0;t<i;++t){const n=U(t,s,o),r=new Array(n.length);for(let e=0;e<r.length;e++)r[e]=n[a[e]];l[B(r,s,u)]=e[t]}return l}function Mw(e){const{inputs:t,attrs:n,backend:a}=e,{x:r}=t,{perm:s}=n;zx(r,"transpose");const i=r.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=r.shape[s[e]];const u=Dw(a.data.get(r.dataId).values,r.shape,r.dtype,s,o);return{dataId:a.write(u,o,r.dtype),shape:o,dtype:r.dtype}}const Ow={kernelName:Zn,backendName:"cpu",kernelFunc:Mw},Lw={kernelName:ae,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;zx(r,"all");const o=I(s,r.shape);let u=o;const l=Bo(u,r.shape.length);let c=r;null!=l&&(c=Mw({inputs:{x:r},backend:n,attrs:{perm:l}}),u=Vo(u.length,r.shape.length)),Wo("all",u,c.shape.length);const[h,d]=zo(c.shape,u),p=g(d),f=z(g(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const a=m[t+e];n=n&&a}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const b=n.makeTensorInfo(h,c.dtype,f);if(i){const e=vw({inputs:{x:b},backend:n,attrs:{shape:Po(h,o)}});return n.disposeIntermediateTensorInfo(b),e}return b}},zw={kernelName:re,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;zx(r,"any");const o=I(s,r.shape);let u=o;const l=Bo(u,r.shape.length);let c=r;null!=l&&(c=Mw({inputs:{x:r},backend:n,attrs:{perm:l}}),u=Vo(u.length,r.shape.length)),Wo("any",u,c.shape.length);const[h,d]=zo(c.shape,u),p=g(d),f=z(g(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const a=m[t+e];n=n||a}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const b=n.makeTensorInfo(h,c.dtype,f);if(i){const e=vw({inputs:{x:b},backend:n,attrs:{shape:Po(h,o)}});return n.disposeIntermediateTensorInfo(b),e}return b}},Pw={kernelName:se,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;zx(r,"argMax");let i=I(s,r.shape);const o=Bo(i,r.shape.length);let u=r;const l=[];null!=o&&(u=Mw({inputs:{x:r},backend:n,attrs:{perm:o}}),l.push(u),i=Vo(i.length,u.shape.length)),i=[i[0]],Wo("argMax",i,u.shape.length);const[c,h]=zo(u.shape,i),d=z(g(c),"int32"),p=g(h),f=n.data.get(u.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],a=0;for(let e=0;e<p;++e){const r=f[t+e];r>n&&(n=r,a=e)}d[e]=a}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},Ww={kernelName:ie,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;zx(r,"argMin");let i=I(s,r.shape);const o=Bo(i,r.shape.length);let u=r;const l=[];null!=o&&(u=Mw({inputs:{x:r},backend:n,attrs:{perm:o}}),l.push(u),i=Vo(i.length,u.shape.length)),i=[i[0]],Wo("argMin",i,u.shape.length);const[c,h]=zo(u.shape,i),d=z(g(c),"int32"),p=g(h),f=n.data.get(u.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],a=0;for(let e=0;e<p;++e){const r=f[t+e];r<n&&(n=r,a=e)}d[e]=a}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},Bw=Ux(oe,(e=>Math.asin(e))),Uw={kernelName:oe,backendName:"cpu",kernelFunc:Bw},Vw=Ux(ue,(e=>Math.asinh(e))),Gw={kernelName:ue,backendName:"cpu",kernelFunc:Vw},Hw=Ux(le,(e=>Math.atan(e))),jw={kernelName:le,backendName:"cpu",kernelFunc:Hw},qw=Yx(((e,t)=>Math.atan2(e,t))),Kw=gw(he,qw),Xw={kernelName:he,backendName:"cpu",kernelFunc:Kw},Yw=Ux(ce,(e=>Math.atanh(e))),Jw={kernelName:ce,backendName:"cpu",kernelFunc:Yw};function Zw(e,t,n,a,r,s){const i=r.strideHeight,o=r.strideWidth,u=r.dilationHeight,l=r.dilationWidth,c=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=r.padInfo.top,p=r.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=ks(r.outShape,n),g=m.values,b=r.outShape[1]*r.outShape[2]*r.outShape[3],y=r.outShape[2]*r.outShape[3],x=r.outShape[3];for(let t=0;t<r.batchSize;++t){const n=t*b,m=t*a[0];for(let t=0;t<r.inChannels;++t)for(let b=0;b<r.outHeight;++b){const w=b*i-d,k=Math.max(0,w),v=Math.min(r.inHeight,c+w),I=n+b*y;for(let n=0;n<r.outWidth;++n){const i=n*o-p,c=Math.max(0,i),d=Math.min(r.inWidth,h+i);let b=f,y=0,w=0;for(let n=k;n<v;n+=u){const r=m+n*a[1];for(let n=c;n<d;n+=l){const i=e[r+n*a[2]+t];"max"===s&&i>b?b=i:"avg"===s&&(y+=i,w++)}if(isNaN(b))break}g[I+n*x+t]="avg"===s?y/w:b}}}return m}function Qw(e,t,n,a,r=!1,s=!1){const i=ks(a.outShape,"int32"),o=a.strideHeight,u=a.strideWidth,l=a.dilationHeight,c=a.dilationWidth,h=a.effectiveFilterHeight,d=a.effectiveFilterWidth,p=a.padInfo.top,f=a.padInfo.left,m=ks(t,n,e);for(let e=0;e<a.batchSize;++e)for(let t=0;t<a.inChannels;++t)for(let n=0;n<a.outHeight;++n){const g=n*o-p;let b=g;for(;b<0;)b+=l;const y=Math.min(a.inHeight,h+g);for(let o=0;o<a.outWidth;++o){const h=o*u-f;let p=h;for(;p<0;)p+=c;const x=Math.min(a.inWidth,d+h);let w=Number.NEGATIVE_INFINITY,k=-1;for(let n=b;n<y;n+=l){const i=n-g;for(let o=p;o<x;o+=c){const u=o-h,l=m.get(e,n,o,t);l>w&&(w=l,k=r?s?((e*a.inHeight+n)*a.inWidth+o)*a.inChannels+t:(n*a.inWidth+o)*a.inChannels+t:i*d+u)}}i.set(k,e,n,o,t)}}return i}function ek(e,t,n,a,r,s){const i=r.strideDepth,o=r.strideHeight,u=r.strideWidth,l=r.dilationDepth,c=r.dilationHeight,h=r.dilationWidth,d=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,b=r.padInfo.left,y="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=ks(r.outShape,n),w=x.values,k=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],v=r.outShape[2]*r.outShape[3]*r.outShape[4],I=r.outShape[3]*r.outShape[4],S=r.outShape[4];for(let t=0;t<r.batchSize;++t){const n=t*k,x=t*a[0];for(let t=0;t<r.inChannels;++t)for(let k=0;k<r.outDepth;++k){const N=k*i-m;let C=N;for(;C<0;)C+=l;const $=Math.min(r.inDepth,d+N),T=n+k*v;for(let n=0;n<r.outHeight;++n){const i=n*o-g;let d=i;for(;d<0;)d+=c;const m=Math.min(r.inHeight,p+i),k=T+n*I;for(let n=0;n<r.outWidth;++n){const i=n*u-b;let o=i;for(;o<0;)o+=h;const p=Math.min(r.inWidth,f+i),g=k+n*S;let v=y,I=0,N=0;for(let n=C;n<$;n+=l){const r=x+n*a[1];for(let n=d;n<m;n+=c){const i=r+n*a[2];for(let n=o;n<p;n+=h){const r=e[i+n*a[3]+t];if("max"===s&&r>v?v=r:"avg"===s&&(I+=r,N++),isNaN(v))break}if(isNaN(v))break}if(isNaN(v))break}w[g+t]="avg"===s?I/Math.max(N,1):v}}}}return x}const tk={kernelName:de,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;zx(r,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=a;p(Hi(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=Mi(r.shape,s,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&b(l.inShape,l.outShape))c=jx({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=D(r.shape),a=Zw(e,r.shape,r.dtype,t,l,"avg");c=n.makeTensorInfo(l.outShape,r.dtype,a.values)}return c}},nk={kernelName:fe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=a;zx(r,"avgPool3d");const c=Oi(r.shape,s,i,1,o,u,l),h=ek(n.data.get(r.dataId).values,r.shape,r.dtype,D(r.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},ak={kernelName:me,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=a;zx([r,s],"avgPool3DGrad");const c=Oi(s.shape,i,o,1,u,l),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,b=c.dilationDepth,y=c.dilationHeight,x=c.dilationWidth,w=c.effectiveFilterDepth,k=c.effectiveFilterHeight,v=c.effectiveFilterWidth,I=w-1-c.padInfo.front,S=v-1-c.padInfo.left,N=k-1-c.padInfo.top,C=ks(s.shape,"float32"),$=1/(f*m*g),T=n.bufferSync(r);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let a=0;a<c.inHeight;++a)for(let r=0;r<c.inWidth;++r){const s=n-I,i=a-N,o=r-S;let u=0;for(let n=0;n<w;n+=b){const a=(s+n)/h;if(!(a<0||a>=c.outDepth||Math.floor(a)!==a))for(let n=0;n<k;n+=y){const r=(i+n)/d;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<v;n+=x){const s=(o+n)/p;s<0||s>=c.outWidth||Math.floor(s)!==s||(u+=T.get(e,a,r,s,t))}}}C.set(u*$,e,n,a,r,t)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}},rk={kernelName:pe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s;zx([r,s],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=a,c=Mi(i.shape,o,u,1,l),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,b=c.effectiveFilterHeight,y=c.effectiveFilterWidth,x=y-1-c.padInfo.left,w=b-1-c.padInfo.top,k=ks(i.shape,"float32"),v=1/(p*f),I=n.data.get(r.dataId).values,S=ks(r.shape,"float32",I);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let a=0;a<c.inWidth;++a){const r=n-w,s=a-x;let i=0;for(let n=0;n<b;n+=m){const a=(r+n)/h;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let n=0;n<y;n+=g){const r=(s+n)/d;r<0||r>=c.outWidth||Math.floor(r)!==r||(i+=S.get(e,a,r,t))}}k.set(i*v,e,n,a,t)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}},sk={kernelName:ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,scale:s,offset:i,mean:o,variance:u}=t;p(o.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),p(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),p(null==s||o.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),zx([r,o,u,s,i],"batchNorm");let{varianceEpsilon:l}=a;null==l&&(l=.001);const c=n.data.get(r.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(u.dataId).values,f=s?n.data.get(s.dataId).values:new Float32Array([1]),m=i?n.data.get(i.dataId).values:new Float32Array([0]),g=new Float32Array(c.length),b=m.length,y=f.length,x=d.length,w=h.length;let k=0,v=0,I=0,S=0;for(let e=0;e<c.length;++e)g[e]=m[k++]+(c[e]-h[v++])*f[I++]/Math.sqrt(d[S++]+l),k>=b&&(k=0),v>=w&&(v=0),I>=y&&(I=0),S>=x&&(S=0);return n.makeTensorInfo(r.shape,r.dtype,g)}};function ik(e,t,n,a,r){const s=Ci(a,t,n),i=g(n),o=D(a);if(s){const n=$i(t,o);return"string"===r?e.slice(n,n+i):e.subarray(n,n+i)}const u=ks(a,r,"string"===r?Uc(e):e),l=ks(n,r);for(let e=0;e<l.size;++e){const n=l.indexToLoc(e),a=n.map(((e,n)=>e+t[n]));l.set(u.get(...a),...n)}return"string"===r?Vc(l.values):l.values}function ok(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,size:i}=a;zx(r,"slice");const[o,u]=Ti(r,s,i);fi(r,o,u);const l=ik(n.data.get(r.dataId).values,o,u,r.shape,r.dtype);return n.makeTensorInfo(u,r.dtype,l)}const uk={kernelName:In,backendName:"cpu",kernelFunc:ok},lk={kernelName:be,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,crops:i}=a;zx([r],"batchToSpaceND");const o=s.reduce(((e,t)=>e*t)),u=Xl(r.shape,s,o),l=Yl(u.length,s.length),c=Jl(r.shape,s,o),h=Zl(i,s.length),d=Ql(c,i,s.length),p=vw({inputs:{x:r},backend:n,attrs:{shape:u}}),f=Mw({inputs:{x:p},backend:n,attrs:{perm:l}}),m=vw({inputs:{x:f},backend:n,attrs:{shape:c}}),g=ok({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function ck(e,t,n,a,r){const s=g(a),i=z(r,n);for(let n=0;n<e.length;n++){const a=e[n];if(a<0)throw new Error("Input x must be non-negative!");a>=r||(i[a]+=s>0?t[n]:1)}return i}function hk(e,t,n,a=!1){const r=e.shape[0],s=e.shape[1],i=ks([r,n],t.dtype);for(let o=0;o<r;o++)for(let r=0;r<s;r++){const s=e.get(o,r);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(a?i.set(1,o,s):t.size>0?i.set(i.get(o,s)+t.get(o,r),o,s):i.set(i.get(o,s)+1,o,s))}return i}const dk={kernelName:ye,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:i}=a,o=ck(n.data.get(r.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,o)}},pk=Yx(((e,t)=>e&t)),fk={kernelName:xe,backendName:"cpu",kernelFunc:gw(xe,pk)},mk={kernelName:we,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:r}=t,s=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,o=Ks(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},gk=Bx((e=>Math.ceil(e))),bk=Vx(ve,gk),yk={kernelName:ve,backendName:"cpu",kernelFunc:bk},xk=Ux(Ie,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),wk={kernelName:Ie,backendName:"cpu",kernelFunc:xk},kk={kernelName:Ne,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,a=new Float32Array(g(t.shape)),r=n.data.get(t.dataId),s=r.complexTensorInfos.real,i=r.complexTensorInfos.imag,o=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=u[e];a[e]=Math.hypot(t,n)}return n.makeOutput(a,t.shape,"float32")}};function vk(e,t,n,a){const r=C(n,g(t));if(a&&"string"!==n){let t=0;e.forEach((e=>{const n=g(e.shape);r.set(e.vals,t),t+=n}))}else{let a=0;e.forEach((e=>{const s="string"===n?Uc(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+a;for(let t=0;t<e.shape[1];++t)r[o+t]=s[i++]}a+=e.shape[1]}))}return r}function Ik(e){const{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.imag,s=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,s)}const Sk={kernelName:ft,backendName:"cpu",kernelFunc:Ik};function Nk(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,s=I(r,t[0].shape)[0];Pl(t.map((e=>e.shape)),s);let i=Wl(t.map((e=>e.shape)),s);if(0===g(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>g(e.shape)>0));if(1===o.length)return jx({inputs:{x:o[0]},backend:n});if("complex64"===o[0].dtype){const e=o.map((e=>hw({inputs:{input:e},backend:n}))),t=o.map((e=>Ik({inputs:{input:e},backend:n}))),a=Nk({inputs:e,backend:n,attrs:{axis:s}}),r=Nk({inputs:t,backend:n,attrs:{axis:s}}),i=uw({inputs:{real:a,imag:r},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r),i}const u=o.map((e=>{const t=g(e.shape.slice(s));return vw({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),l=u.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=Wl(u.map((e=>e.shape)),1);const c=1===u[0].shape[0],h=vk(l,i,t[0].dtype,c),d=Wl(o.map((e=>e.shape)),s),p=n.makeTensorInfo(d,t[0].dtype,h);return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}const Ck={kernelName:Ce,backendName:"cpu",kernelFunc:Nk};function $k(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=a;zx([r,s],"conv2d");const h=qi(u),d=Li(r.shape,s.shape,i,l,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,b=d.padInfo.left,y=d.padInfo.top,x="channelsLast"===d.dataFormat,w=new Ja(d.outShape,r.dtype),k=D(r.shape),v=D(s.shape),I=k[0],S=x?k[1]:k[2],N=x?k[2]:1,C=x?1:k[1],$=w.strides[0],T=x?w.strides[1]:w.strides[2],_=x?w.strides[2]:1,E=x?1:w.strides[1],R=n.data.get(r.dataId).values,A=n.data.get(s.dataId).values,F=w.values;for(let e=0;e<d.batchSize;++e){const t=e*I,n=e*$;for(let e=0;e<d.outHeight;++e){const a=n+e*T,r=e*d.strideHeight-y;for(let e=0;e<p;++e){const n=r+e*m;if(n<0||n>=d.inHeight)continue;const s=e*v[0],i=t+n*S;for(let e=0;e<d.outWidth;++e){const t=a+e*_,n=e*d.strideWidth-b;for(let e=0;e<f;++e){const a=n+e*g;if(a<0||a>=d.inWidth)continue;const r=i+a*N;let o=s+e*v[1];for(let e=0;e<d.inChannels;++e){const n=R[r+e*C];for(let e=0;e<d.outChannels;++e)F[t+e*E]+=n*A[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,F)}const Tk={kernelName:$e,backendName:"cpu",kernelFunc:$k},_k={kernelName:Te,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=a;zx([r,s],"conv2dBackpropFilter");const h=qi(u),d=Li(r.shape,c,i,1,o,l,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,b="channelsLast"===d.dataFormat,y=new Ja(d.filterShape,"float32"),x=d.padInfo.left,w=d.padInfo.top,k=n.data.get(r.dataId).values,v=n.data.get(s.dataId).values,I=new Ja(r.shape,r.dtype,k),S=new Ja(s.shape,s.dtype,v);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((w-e)/p)),n=Math.min(d.outHeight,(d.inHeight+w-e)/p);for(let a=0;a<g;++a){const r=Math.max(0,Math.ceil((x-a)/f)),s=Math.min(d.outWidth,(d.inWidth+x-a)/f);for(let i=0;i<d.inChannels;++i)for(let o=0;o<d.outChannels;++o){let u=0;for(let l=0;l<d.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*p-w;for(let e=r;e<s;++e){const n=a+e*f-x;u+=b?I.get(l,t,n,i)*S.get(l,c,e,o):I.get(l,i,t,n)*S.get(l,o,c,e)}}y.set(u,e,a,i,o)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},Ek={kernelName:_e,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=a;zx([r,s],"conv2dBackpropInput");const h=D(s.shape),d=D(r.shape);let p=qi(l);const f=Li(i,s.shape,o,1,u,c,!1,p),m=new Ja(f.inShape,"float32"),g=m.values,b=n.data.get(r.dataId).values,y=n.data.get(s.dataId).values,[x,w,k]=h,{batchSize:v,filterHeight:I,filterWidth:S,inChannels:N,inHeight:C,inWidth:$,outChannels:T,outHeight:_,outWidth:E,strideHeight:R,strideWidth:A}=f;p=f.dataFormat;const F=I-1-f.padInfo.top,M=S-1-f.padInfo.left,O="channelsLast"===p,L=m.strides[0],z=O?m.strides[1]:m.strides[2],P=O?m.strides[2]:1,W=O?1:m.strides[1],B=d[0],U=O?d[1]:d[2],V=O?d[2]:1,G=O?1:d[1];for(let e=0;e<v;++e)for(let t=0;t<N;++t)for(let n=0;n<C;++n){const a=n-F,r=Math.max(0,Math.ceil(a/R)),s=Math.min(_,(I+a)/R);for(let i=0;i<$;++i){const o=i-M,u=Math.max(0,Math.ceil(o/A)),l=Math.min(E,(S+o)/A);let c=0;for(let n=r;n<s;++n){const r=n*R-a;for(let a=u;a<l;++a){const s=B*e+U*n+V*a,i=x*(I-1-r)+w*(S-1-(a*A-o))+k*t;for(let e=0;e<T;++e)c+=b[s+G*e]*y[i+e]}}g[L*e+z*n+P*i+W*t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},Rk={kernelName:Ee,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:u}=a;zx([r,s],"conv3d");const l=zi(r.shape,s.shape,i,u,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=l,b=g.front,y=g.left,x=g.top,w=new Ja(l.outShape,r.dtype),k=n.data.get(r.dataId).values,v=n.data.get(s.dataId).values,I=w.values,S=D(r.shape),N=D(s.shape);for(let e=0;e<l.batchSize;++e){const t=e*S[0],n=e*w.strides[0];for(let e=0;e<l.outDepth;++e){const a=n+e*w.strides[1],r=e*l.strideDepth-b;for(let e=0;e<c;++e){const n=r+e*p;if(n<0||n>=l.inDepth)continue;const s=e*N[0],i=t+n*S[1];for(let e=0;e<l.outHeight;++e){const t=a+e*w.strides[2],n=e*l.strideHeight-x;for(let e=0;e<h;++e){const a=n+e*f;if(a<0||a>=l.inHeight)continue;const r=s+e*N[1],o=i+a*S[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,a=e*l.strideWidth-y;for(let e=0;e<d;++e){const t=a+e*m;if(t<0||t>=l.inWidth)continue;const s=r+e*N[2],i=o+t*l.inChannels;let u=s;for(let e=0;e<l.inChannels;++e){const t=k[i+e];for(let e=0;e<l.outChannels;++e)I[n+e]+=t*v[u+e];u+=l.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},Ak={kernelName:Re,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:o,filterShape:u}=a;zx([r,s],"conv3dBackpropFilterV2");const l=D(r.shape),c=D(s.shape),h=zi(r.shape,u,i,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,b=h.filterWidth,y=new Ja(h.filterShape,"float32"),x=y.values,[w,k,v,I]=y.strides,S=n.data.get(s.dataId).values,[N,C,$,T]=c,_=n.data.get(r.dataId).values,[E,R,A,F]=l,M=h.padInfo.front,O=h.padInfo.left,L=h.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((M-e)/d)),n=Math.min(h.outDepth,(h.inDepth+M-e)/d),a=e*w;for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((L-r)/p)),i=Math.min(h.outHeight,(h.inHeight+L-r)/p),o=r*k+a;for(let a=0;a<b;++a){const u=Math.max(0,Math.ceil((O-a)/f)),l=Math.min(h.outWidth,(h.inWidth+O-a)/f),c=a*v+o;for(let o=0;o<h.inChannels;++o){const m=o*I+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*E,b=m*N;for(let m=t;m<n;++m){const t=(e+m*d-M)*R+h,n=m*C+b;for(let e=s;e<i;++e){const s=(r+e*p-L)*A+t,i=e*$+n;for(let e=u;e<l;++e){const t=e*T+i;g+=_[(a+e*f-O)*F+s+o]*S[t+c]}}}}x[m+c]=g}}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},Fk={kernelName:Ae,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{pad:i,strides:o,inputShape:u}=a;zx([r],"conv3dBackpropInputV2");const l=D(r.shape),c=D(s.shape),h=zi(u,s.shape,o,1,i),d=new Ja(h.inShape,"float32"),p=d.values,[f,m,g,b]=d.strides,y=n.data.get(r.dataId).values,[x,w,k,v]=l,I=n.data.get(s.dataId).values,[S,N,C,$]=c,{batchSize:T,filterDepth:_,filterHeight:E,filterWidth:R,inChannels:A,inDepth:F,inHeight:M,inWidth:O,outChannels:L,outDepth:z,outHeight:P,outWidth:W,strideDepth:B,strideHeight:U,strideWidth:V}=h,G=_-1-h.padInfo.front,H=E-1-h.padInfo.top,j=R-1-h.padInfo.left;for(let e=0;e<T;++e)for(let t=0;t<A;++t)for(let n=0;n<F;++n){const a=n-G,r=Math.max(0,Math.ceil(a/B)),s=Math.min(z,(_+a)/B);for(let i=0;i<M;++i){const o=i-H,u=Math.max(0,Math.ceil(o/U)),l=Math.min(P,(E+o)/U);for(let c=0;c<O;++c){const h=c-j,d=Math.max(0,Math.ceil(h/V)),T=Math.min(W,(R+h)/V);let A=0;for(let n=r;n<s;++n){const r=n*B-a;for(let a=u;a<l;++a){const s=a*U-o;for(let i=d;i<T;++i){const o=x*e+w*n+k*a+v*i,u=S*(_-1-r)+N*(E-1-s)+C*(R-1-(i*V-h))+$*t;for(let e=0;e<L;++e)A+=y[o+e]*I[u+e]}}}p[f*e+m*n+g*i+b*c+t]=A}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},Dk=Ux(Fe,(e=>Math.cos(e))),Mk={kernelName:Fe,backendName:"cpu",kernelFunc:Dk},Ok=Ux(De,(e=>Math.cosh(e))),Lk={kernelName:De,backendName:"cpu",kernelFunc:Ok},zk={kernelName:Le,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=a,[c,h,d,p]=r.shape,f=s.shape[0],[m,g]=o,b=ks([f,m,g,p],"float32"),y=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,w=n.data.get(r.dataId).values,k=D(r.shape),v=D(b.shape);for(let e=0;e<f;e++){const t=4*e,n=y[t],a=y[t+1],r=y[t+2],s=y[t+3],i=x[e];if(i>=c)continue;const o=m>1?(r-n)*(h-1)/(m-1):0,f=g>1?(s-a)*(d-1)/(g-1):0;for(let t=0;t<m;t++){const c=m>1?n*(h-1)+t*o:.5*(n+r)*(h-1);if(c<0||c>h-1)for(let n=0;n<g;n++)for(let a=0;a<p;a++){const r=a+n*v[2]+t*v[1]+e*v[0];b.values[r]=l}else if("bilinear"===u){const n=Math.floor(c),r=Math.ceil(c),o=c-n;for(let u=0;u<g;u++){const c=g>1?a*(d-1)+u*f:.5*(a+s)*(d-1);if(c<0||c>d-1){for(let n=0;n<p;n++){const a=n+u*v[2]+t*v[1]+e*v[0];b.values[a]=l}continue}const h=Math.floor(c),m=Math.ceil(c),y=c-h;for(let a=0;a<p;a++){let s=a+h*k[2]+n*k[1]+i*k[0];const l=w[s];s=a+m*k[2]+n*k[1]+i*k[0];const c=w[s];s=a+h*k[2]+r*k[1]+i*k[0];const d=w[s];s=a+m*k[2]+r*k[1]+i*k[0];const p=l+(c-l)*y,f=d+(w[s]-d)*y;s=a+u*v[2]+t*v[1]+e*v[0],b.values[s]=p+(f-p)*o}}}else for(let n=0;n<g;++n){const r=g>1?a*(d-1)+n*f:.5*(a+s)*(d-1);if(r<0||r>d-1){for(let a=0;a<p;a++){const r=a+n*v[2]+t*v[1]+e*v[0];b.values[r]=l}continue}const o=Math.round(r),u=Math.round(c);for(let a=0;a<p;a++){const r=a+o*k[2]+u*k[1]+i*k[0],s=a+n*v[2]+t*v[1]+e*v[0];b.values[s]=w[r]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},Pk={kernelName:Me,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=a;zx(r,"cumprod");const u=Bo([s],r.shape.length);let l=r;null!=u&&(l=Mw({inputs:{x:r},backend:n,attrs:{perm:u}}));const c=Vo(1,r.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=cr(l.dtype,"int32"),d=L(g(l.shape),h),p=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)d[n]=i?1:p[n];else{const a=m(e,t-1);d[n]=i?p[a]*d[a]:p[n]*d[a]}}const b=n.makeTensorInfo(l.shape,h,d);if(null!=u){const e=Mw({inputs:{x:b},backend:n,attrs:{perm:Uo(u)}});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(l),e}return b}},Wk={kernelName:Oe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=a;zx(r,"cumsum");const u=Bo([s],r.shape.length);let l=r;null!=u&&(l=Mw({inputs:{x:r},backend:n,attrs:{perm:u}}));const c=Vo(1,r.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=cr(l.dtype,"int32"),d=z(g(l.shape),h),p=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)d[n]=i?0:p[n];else{const a=m(e,t-1);d[n]=i?p[a]+d[a]:p[n]+d[a]}}const b=n.makeTensorInfo(l.shape,h,d);if(null!=u){const e=Mw({inputs:{x:b},backend:n,attrs:{perm:Uo(u)}});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(l),e}return b}},Bk={kernelName:ze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:i,binaryOutput:o}=a;if(1===r.shape.length){const e=ck(n.data.get(r.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,e)}if(2===r.shape.length){const e=hk(n.bufferSync(r),n.bufferSync(s),i,o);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}},Uk={kernelName:Pe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:s,dataFormat:i}=a;p("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));const o=r.shape[0],u=r.shape[1],l=r.shape[2],c=r.shape[3],h=u*s,d=l*s,f=c/(s*s),m=n.data.get(r.dataId).values,g=new Float32Array(o*h*d*f);let b=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){const n=Math.floor(t/s),a=t%s;for(let t=0;t<d;++t){const r=Math.floor(t/s),i=(a*s+t%s)*f;for(let t=0;t<f;++t){const a=t+i+c*(r+l*(n+u*e));g[b++]=m[a]}}}return n.makeTensorInfo([o,h,d,f],r.dtype,g)}};function Vk(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=a;zx([r,s],"depthwiseConv2DNative");const c=D(r.shape),h=D(s.shape);let d=u;null==d&&(d=[1,1]),p(Hi(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));const f=Li(r.shape,s.shape,i,d,o,l,!0),{filterHeight:m,filterWidth:g,dilationHeight:b,dilationWidth:y,padInfo:x}=f,w=x.left,k=x.top,v=f.outChannels/f.inChannels,I=new Ja(f.outShape,r.dtype),S=n.data.get(r.dataId).values,N=n.data.get(s.dataId).values,C=I.values;for(let e=0;e<f.batchSize;++e){const t=e*c[0],n=e*I.strides[0];for(let e=0;e<f.outHeight;++e){const a=n+e*I.strides[1],r=e*f.strideHeight-k;for(let e=0;e<m;++e){const n=r+e*b;if(n<0||n>=f.inHeight)continue;const s=e*h[0],i=t+n*c[1];for(let e=0;e<f.outWidth;++e){const t=a+e*I.strides[2],n=e*f.strideWidth-w;for(let e=0;e<g;++e){const a=n+e*y;if(a<0||a>=f.inWidth)continue;const r=s+e*h[1],o=i+a*f.inChannels;let u=t,l=r;for(let e=0;e<f.inChannels;++e){const t=S[o+e];for(let e=0;e<v;++e)C[u+e]+=t*N[l+e];u+=v,l+=v}}}}}}return n.makeTensorInfo(I.shape,I.dtype,I.values)}const Gk={kernelName:We,backendName:"cpu",kernelFunc:Vk},Hk={kernelName:Be,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=a;zx([r,s],"depthwiseConv2dNativeBackpropFilter");const h=Li(r.shape,c,i,o,u,l,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new Ja(h.filterShape,"float32"),b=h.padInfo.left,y=h.padInfo.top,x=h.outChannels/h.inChannels,w=n.data.get(r.dataId).values,k=new Ja(r.shape,r.dtype,w),v=n.data.get(s.dataId).values,I=new Ja(s.shape,s.dtype,v);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((y-e)/d)),n=Math.min(h.outHeight,(h.inHeight+y-e)/d);for(let a=0;a<m;++a){const r=Math.max(0,Math.ceil((b-a)/p)),s=Math.min(h.outWidth,(h.inWidth+b-a)/p);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/x),u=i%x;let l=0;for(let u=0;u<h.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*d-y;for(let e=r;e<s;++e){const n=a+e*p-b;l+=k.get(u,t,n,o)*I.get(u,c,e,i)}}g.set(l,e,a,o,u)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},jk={kernelName:Ue,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=a;zx([r,s],"depthwiseConv2DNativeBackpropInput");const h=D(r.shape),d=D(s.shape),p=Li(c,s.shape,i,o,u,l,!0),f=new Ja(p.inShape,"float32"),m=f.values,[g,b,y]=f.strides,x=n.data.get(r.dataId).values,[w,k,v]=h,I=n.data.get(s.dataId).values,[S,N,C]=d,{batchSize:$,filterHeight:T,filterWidth:_,inChannels:E,inHeight:R,inWidth:A,outChannels:F,outHeight:M,outWidth:O,strideHeight:L,strideWidth:z}=p,P=T-1-p.padInfo.top,W=_-1-p.padInfo.left,B=F/E;for(let e=0;e<$;++e)for(let t=0;t<E;++t)for(let n=0;n<R;++n){const a=n-P,r=Math.max(0,Math.ceil(a/L)),s=Math.min(M,(T+a)/L);for(let i=0;i<A;++i){const o=i-W,u=Math.max(0,Math.ceil(o/z)),l=Math.min(O,(_+o)/z);let c=0;for(let n=r;n<s;++n){const r=n*L-a;for(let a=u;a<l;++a){const s=w*e+k*n+v*a,i=S*(T-1-r)+N*(_-1-(a*z-o))+C*t;for(let e=0;e<B;++e)c+=x[s+(t*B+e)]*I[i+e]}}m[g*e+b*n+y*i+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},qk={kernelName:Ve,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=g(a.shape),s=n.data.get(a.dataId).values,i=ks([r,r],a.dtype),o=i.values;for(let e=0;e<s.length;e++)o[e*r+e]=s[e];const u=[...a.shape,...a.shape];return n.makeTensorInfo(u,i.dtype,i.values)}},Kk={kernelName:Ge,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:r}=e,{strides:s,pad:i,dilations:o}=n,u=t,l=u.data.get(a.dataId).values,c=a.shape.length,h=u.data.get(r.dataId).values,d=r.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:b,outHeight:y,outWidth:x,padInfo:w,strideHeight:k,strideWidth:v,filterHeight:I,filterWidth:S,dilationHeight:N,dilationWidth:$,outShape:T}=Di(a.shape,r.shape,s,i,"NHWC",o),_=g(T),E=T.length,R=C(a.dtype,_);for(let e=0;e<p;++e)for(let t=0;t<y;++t){const n=t*k-w.top;for(let s=0;s<x;++s){const i=s*v-w.left;for(let o=0;o<b;++o){let u=Number.MIN_SAFE_INTEGER;for(let t=0;t<I;++t){const s=n+t*N;if(s>=0&&s<f)for(let n=0;n<S;++n){const p=i+n*$;if(p>=0&&p<m){const i=B([e,s,p,o],c,D(a.shape)),f=B([t,n,o],d,D(r.shape)),m=l[i]+h[f];m>u&&(u=m)}}}R[B([e,t,s,o],E,D(T))]=u}}}return{dataId:u.write(Da(R,a.dtype),T,a.dtype),shape:T,dtype:a.dtype}}},Xk={kernelName:je,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:r,dy:s}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=O(a.shape,l.data.get(a.dataId).values),h=O(r.shape,l.data.get(r.dataId).values),{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:b,outWidth:y,padInfo:x,strideHeight:w,strideWidth:k,filterHeight:v,filterWidth:I,dilationHeight:S,dilationWidth:N,outShape:C}=Di(a.shape,r.shape,i,o,"NHWC",u);p(s.rank===C.length,(()=>`Error in ${je}, dy must have the same rank as output ${C.length}, but got ${s.rank}`));const $=O(C,l.data.get(s.dataId).values),T=P(r.shape,r.dtype);for(let e=0;e<d;++e)for(let t=0;t<b;++t){const n=t*w-x.top;for(let a=0;a<y;++a){const r=a*k-x.left;for(let s=0;s<g;++s){let i=Number.MIN_SAFE_INTEGER,o=0,u=0;for(let t=0;t<v;++t){const a=n+t*S;if(a>=0&&a<f)for(let n=0;n<I;++n){const l=r+n*N;if(l>=0&&l<m){const r=c[e][a][l][s]+h[t][n][s];r>i&&(i=r,o=t,u=n)}}}T[o][u][s]+=$[e][t][a][s]}}}return{dataId:l.write(Da(T,a.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Yk={kernelName:He,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:r,dy:s}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=O(a.shape,l.data.get(a.dataId).values),h=O(r.shape,l.data.get(r.dataId).values),{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:b,outWidth:y,padInfo:x,strideHeight:w,strideWidth:k,filterHeight:v,filterWidth:I,dilationHeight:S,dilationWidth:N,outShape:C}=Di(a.shape,r.shape,i,o,"NHWC",u);p(s.rank===C.length,(()=>`Error in ${He}, dy must have the same rank as output ${C.length}, but got ${s.rank}`));const $=O(C,l.data.get(s.dataId).values),T=P(a.shape,a.dtype);for(let e=0;e<d;++e)for(let t=0;t<b;++t){const n=t*w-x.top;for(let a=0;a<y;++a){const r=a*k-x.left;for(let s=0;s<g;++s){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,u=r<0?0:r;for(let t=0;t<v;++t){const a=n+t*S;if(a>=0&&a<f)for(let n=0;n<I;++n){const l=r+n*N;if(l>=0&&l<m){const r=c[e][a][l][s]+h[t][n][s];r>i&&(i=r,o=a,u=l)}}}T[e][o][u][s]+=$[e][t][a][s]}}}return{dataId:l.write(Da(T,a.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},Jk={kernelName:"Draw",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r}=t,{canvas:s,options:i}=a,{contextOptions:o,imageOptions:u}=i||{},l=(null==u?void 0:u.alpha)||1,c=(null==o?void 0:o.contextType)||"2d";if("2d"!==c)throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);const h=s.getContext(c,(null==o?void 0:o.contextAttributes)||{});if(null==h)throw new Error(`Could not get the context with ${c} type.`);const[d,p]=r.shape.slice(0,2),f=2===r.shape.length?1:r.shape[2],m=n.data.get(r.dataId).values,g="float32"===r.dtype?255:1,b=new Uint8ClampedArray(p*d*4);for(let e=0;e<d*p;++e){const t=[0,0,0,255*l];for(let n=0;n<f;n++){const a=m[e*f+n];if("float32"===r.dtype){if(a<0||a>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===r.dtype&&(a<0||a>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===f?(t[0]=a*g,t[1]=a*g,t[2]=a*g):t[n]=a*g}const n=4*e;b[n+0]=Math.round(t[0]),b[n+1]=Math.round(t[1]),b[n+2]=Math.round(t[2]),b[n+3]=Math.round(t[3])}s.width=p,s.height=d;const y=new ImageData(b,p,d);return h.putImageData(y,0,0),r}},Zk=Yx(((e,t)=>e*t)),Qk=bw(((e,t,n,a)=>({real:e*n-t*a,imag:e*a+t*n}))),ev=gw(Ut,Zk,Qk),tv={kernelName:Ut,backendName:"cpu",kernelFunc:ev};function nv(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;let o;zx(r,"sum"),o="bool"===r.dtype?fw({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):jx({inputs:{x:r},backend:n});const u=o.shape.length,l=I(s,o.shape),c=Bo(l,u);let h=l,d=o;null!=c&&(d=Mw({inputs:{x:o},backend:n,attrs:{perm:c}}),h=Vo(h.length,u)),Wo("sum",h,d.shape.length);const[p,f]=zo(d.shape,h);let m=cw(n,p,cr(d.dtype,"int32"));const b=g(f),y=n.data.get(m.dataId).values,x=n.data.get(d.dataId).values;for(let e=0;e<y.length;++e){const t=e*b;let n=0;for(let e=0;e<b;++e)n+=x[t+e];y[e]=n}if(i){const e=m;m=vw({inputs:{x:m},backend:n,attrs:{shape:Po(m.shape,l)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),m}const av={kernelName:En,backendName:"cpu",kernelFunc:nv},rv={kernelName:Ke,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,s=t,{allDims:i,summedDims:o,idDims:u}=wc(r,s.length);vc(i.length,u,s);const{path:l,steps:c}=Ic(o,u),h=c.length;let d=null,p=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:a}=kc(p,u[t]);let r;Sc(e)?r=s[t]:(r=Mw({inputs:{x:s[t]},backend:n,attrs:{perm:e}}),f.push(r));const i=r.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);b(r.shape,i)||(r=vw({inputs:{x:r},backend:n,attrs:{shape:i}}),f.push(r)),null===d?d=r:(d=ev({inputs:{a:r,b:d},backend:n}),f.push(d))}e<h-1&&(l[e]>=0&&(d=nv({inputs:{x:d},backend:n,attrs:{axis:l[e]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},sv={kernelName:Ye,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:a,y:r}=t;zx([a,r],"eluGrad");const s=new Float32Array(g(r.shape)),i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];s[e]=t>=0?o[e]:o[e]*(t+1)}return n.makeTensorInfo(r.shape,"float32",s)}},iv=Yx(((e,t)=>e===t?1:0)),ov=gw(Ze,iv,null,"bool"),uv={kernelName:Ze,backendName:"cpu",kernelFunc:ov},lv=nc,cv=ac,hv=rc,dv=sc,pv=ic,fv=oc,mv=Ux(Je,(e=>{const t=Math.sign(e),n=Math.abs(e),a=1/(1+lv*n);return t*(1-((((fv*a+pv)*a+dv)*a+hv)*a+cv)*a*Math.exp(-n*n))})),gv={kernelName:Je,backendName:"cpu",kernelFunc:mv},bv=Bx((e=>Math.exp(e))),yv=Vx(Qe,bv,"float32"),xv={kernelName:Qe,backendName:"cpu",kernelFunc:yv};function wv(e){const{inputs:t,backend:n,attrs:a}=e,{input:r}=t,{dim:s}=a,i=r.shape.length,o=r.shape.slice();let u=s;return s<0&&(p(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+s+1),o.splice(u,0,1),vw({inputs:{x:r},backend:n,attrs:{shape:o}})}const kv={kernelName:et,backendName:"cpu",kernelFunc:wv},vv=Bx((e=>Math.expm1(e))),Iv=Vx(tt,vv),Sv={kernelName:tt,backendName:"cpu",kernelFunc:Iv},Nv=Yx(((e,t)=>e/t)),Cv=gw(qe,Nv),$v={kernelName:qe,backendName:"cpu",kernelFunc:Cv},Tv=Yx(((e,t)=>e-t)),_v=bw(((e,t,n,a)=>({real:e-n,imag:t-a}))),Ev=gw(jn,Tv,_v),Rv={kernelName:jn,backendName:"cpu",kernelFunc:Ev};function Av(e,t,n){const a=e.shape,r=a[0],s=a[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,l=[r,s],c=g(l),h=N("float32",c),d=N("float32",c);for(let e=0;e<r;e++){const a=ok({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,s]}}),r=ok({inputs:{x:u},backend:n,attrs:{begin:[e,0],size:[1,s]}}),i=uw({inputs:{real:a,imag:r},backend:n}),{real:l,imag:c}=Fv(i,t,n),p=uc(l,c);for(let t=0;t<s;t++){const n=dc(p,t);h[e*s+t]=n.real,d[e*s+t]=n.imag}n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i)}const p=n.makeTensorInfo(l,"float32",h),f=n.makeTensorInfo(l,"float32",d),m=uw({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function Fv(e,t,n){const a=g(e.shape),r=n.data.get(e.dataId),s=n.data.get(r.complexTensorInfos.real.dataId).values,i=n.data.get(r.complexTensorInfos.imag.dataId).values;if((o=a)&o-1){const e=function(e,t,n){const a=new Float32Array(2*t);for(let r=0;r<t;r++){let s=0,i=0;for(let a=0;a<t;a++){const o=mc(r*a,t,n),u=dc(e,a);s+=u.real*o.real-u.imag*o.imag,i+=u.real*o.imag+u.imag*o.real}n&&(s/=t,i/=t),pc(a,s,i,r)}return a}(uc(s,i),a,t);return lc(e)}{const r=Dv(s,i,a,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",r.real),t=n.makeTensorInfo(o,"float32",r.imag),s=n.makeTensorInfo([],"float32",Fa(a,"float32")),i=jx({inputs:{x:s},backend:n}),u=$v.kernelFunc({inputs:{a:e,b:s},backend:n}),l=$v.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(u.dataId).values,h=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),{real:c,imag:h}}return r}var o}function Dv(e,t,n,a,r){if(1===n)return{real:e,imag:t};const s=uc(e,t),i=n/2,o=cc(s),u=o.real,l=o.imag,c=[u.length],h=r.makeTensorInfo(c,"float32",u),d=r.makeTensorInfo(c,"float32",l),p=uw({inputs:{real:h,imag:d},backend:r}),f=hc(s),m=f.real,g=f.imag,b=[m.length],y=r.makeTensorInfo(b,"float32",m),x=r.makeTensorInfo(b,"float32",g),w=uw({inputs:{real:y,imag:x},backend:r}),k=Dv(u,l,i,a,r),v=k.real,I=k.imag,S=[v.length],N=r.makeTensorInfo(S,"float32",v),C=r.makeTensorInfo(S,"float32",I),$=uw({inputs:{real:N,imag:C},backend:r}),T=Dv(m,g,i,a,r),_=T.real,E=T.imag,R=[_.length],A=r.makeTensorInfo(R,"float32",_),F=r.makeTensorInfo(R,"float32",E),D=uw({inputs:{real:A,imag:F},backend:r}),M=fc(n,a),O=[M.real.length],L=r.makeTensorInfo(O,"float32",M.real),z=r.makeTensorInfo(O,"float32",M.imag),P=uw({inputs:{real:L,imag:z},backend:r}),W=ev({inputs:{a:P,b:D},backend:r}),B=ww({inputs:{a:$,b:W},backend:r}),U=Ev({inputs:{a:$,b:W},backend:r}),V=hw({inputs:{input:B},backend:r}),G=hw({inputs:{input:U},backend:r}),H=Ik({inputs:{input:B},backend:r}),j=Ik({inputs:{input:U},backend:r}),q=Nk({inputs:[V,G],backend:r,attrs:{axis:0}}),K=Nk({inputs:[H,j],backend:r,attrs:{axis:0}}),X=r.data.get(q.dataId).values,Y=r.data.get(K.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(w),r.disposeIntermediateTensorInfo(N),r.disposeIntermediateTensorInfo(C),r.disposeIntermediateTensorInfo($),r.disposeIntermediateTensorInfo(A),r.disposeIntermediateTensorInfo(F),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(L),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const Mv={kernelName:nt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,r=g(a.shape),s=a.shape[a.shape.length-1],i=vw({inputs:{x:a},backend:n,attrs:{shape:[r/s,s]}}),o=Av(i,!1,n),u=vw({inputs:{x:o},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}};function Ov(e){const{backend:t,attrs:n}=e,{shape:a,value:r,dtype:s}=n,i=s||R(r),o=C(i,g(a));return function(e,t){e.fill(t)}(o,r),t.makeTensorInfo(a,i,o)}const Lv={kernelName:at,backendName:"cpu",kernelFunc:Ov},zv={kernelName:rt,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:a}=e,r=n,s=N(a.dtype,g(a.shape)),[i,o,u,l]=a.shape,c=r.data.get(a.dataId).values;for(let e=0;e<i;e++){const t=e*u*o*l;for(let e=0;e<o;e++){const n=e*(u*l);for(let e=0;e<u;e++){const a=e*l;for(let r=0;r<l;r++){const i=Math.round(u-e-1),o=t+n+a+r;let h=c[o];i>=0&&i<u&&(h=c[t+n+i*l+r]),s[o]=h}}}}return{dataId:r.write(s,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},Pv=Bx((e=>Math.floor(e))),Wv=Vx(st,Pv),Bv={kernelName:st,backendName:"cpu",kernelFunc:Wv},Uv=Yx(((e,t)=>Math.floor(e/t))),Vv=gw(it,Uv,null,"int32"),Gv={kernelName:it,backendName:"cpu",kernelFunc:Vv},Hv={kernelName:ia,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=a;let m=$k({inputs:{x:r,filter:s},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=m;if("NCHW"===c&&1===i.shape.length&&1!==i.shape[0]){const e=vw({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=ww({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=ww({inputs:{a:m,b:i},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=m;if("NCHW"===c&&"prelu"===p&&1===o.shape.length&&1!==o.shape[0]){const e=vw({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=ow(n,m,p,e,f),n.disposeIntermediateTensorInfo(e)}else m=ow(n,m,p,o,f);n.disposeIntermediateTensorInfo(e)}return m}},jv={kernelName:oa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=a;let m=Vk({inputs:{x:r,filter:s},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=m;m=ww({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=ow(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}};function qv(e,t,n,a,r,s,i,o,u){const l=ks([a,s],n);for(let n=0;n<a;n++){const a=[];let c=0;for(let t=0;t<r;t++){const s=e[n*r+t];c+=s*i[t],a.push(s)}if(c<0||c>=u/s)throw new Error(`Invalid indices: ${a} does not index into ${o}`);for(let e=0;e<s;e++)l.values[n*s+e]=t.get(...t.indexToLoc(c*s+e))}return l}const Kv={kernelName:lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:r}=t,s=g(a.shape),i=r.shape,o=i[i.length-1],[u,l,c,h]=ui(a,r);if(0===l)return n.makeTensorInfo(u,a.dtype,[]);const d=qv(n.data.get(r.dataId).values,n.bufferSync(a),a.dtype,l,o,c,h,a.shape,s);return n.makeTensorInfo(u,a.dtype,d.values)}};function Xv(e,t,n){const a=ks(n,e.dtype);for(let n=0;n<a.size;++n){const r=a.indexToLoc(n).slice(),s=r[0],i=r[2],o=t.locToIndex([s,i]);r[2]=t.values[o];const u=e.locToIndex(r);0<=u&&u<e.values.length&&(a.values[n]=e.values[u])}return a}const Yv={kernelName:ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,indices:s}=t,{axis:i,batchDims:o}=a;zx([r,s],"gatherV2");const u=I(i,r.shape)[0],l=n.data.get(s.dataId).values,c=r.shape[u];for(let e=0;e<l.length;++e){const t=l[e];p(t<=c-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`))}let h=o;null==o&&(h=0);const d=g(s.shape),f=Bc(r,s,u,h),m=vw({inputs:{x:r},backend:n,attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]}}),b=vw({inputs:{x:s},backend:n,attrs:{shape:[f.batchSize,d/f.batchSize]}}),y=[f.batchSize,f.outerSize,d/f.batchSize,f.sliceSize],x=n.bufferSync(b),w=Xv(n.bufferSync(m),x,y);return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),n.makeTensorInfo(f.outputShape,w.dtype,w.values)}},Jv=Yx(((e,t)=>e>t?1:0)),Zv=gw(ct,Jv,null,"bool"),Qv={kernelName:ct,backendName:"cpu",kernelFunc:Zv},eI=Yx(((e,t)=>e>=t?1:0)),tI=gw(ht,eI,null,"bool"),nI={kernelName:ht,backendName:"cpu",kernelFunc:tI},aI={kernelName:pt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,r=g(a.shape),s=a.shape[a.shape.length-1],i=vw({inputs:{x:a},backend:n,attrs:{shape:[r/s,s]}}),o=Av(i,!0,n),u=vw({inputs:{x:o},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}},rI=Ux(mt,(e=>Number.isFinite(e)?1:0),"bool"),sI={kernelName:mt,backendName:"cpu",kernelFunc:rI},iI=Ux(gt,(e=>Math.abs(e)===1/0?1:0),"bool"),oI={kernelName:gt,backendName:"cpu",kernelFunc:iI},uI=Ux(bt,(e=>Number.isNaN(e)?1:0),"bool"),lI={kernelName:bt,backendName:"cpu",kernelFunc:uI},cI=Yx(((e,t)=>e<t?1:0)),hI=gw(xt,cI,null,"bool"),dI={kernelName:xt,backendName:"cpu",kernelFunc:hI},pI=Yx(((e,t)=>e<=t?1:0)),fI=gw(wt,pI,null,"bool"),mI={kernelName:wt,backendName:"cpu",kernelFunc:fI};function gI(e,t,n){const a=(t-e)/(n-1),r=z(n,"float32");r[0]=e;for(let e=1;e<r.length;e++)r[e]=r[e-1]+a;return r}const bI={kernelName:kt,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,num:s}=n,i=gI(a,r,s);return t.makeTensorInfo([i.length],"float32",i)}},yI=Bx((e=>Math.log(e))),xI=Vx(vt,yI),wI={kernelName:vt,backendName:"cpu",kernelFunc:xI},kI=Ux(It,(e=>Math.log1p(e))),vI={kernelName:It,backendName:"cpu",kernelFunc:kI},II=Yx(((e,t)=>e&&t)),SI=gw(St,II,null,"bool"),NI={kernelName:St,backendName:"cpu",kernelFunc:SI},CI=Ux(Nt,(e=>e?0:1),"bool"),$I={kernelName:Nt,backendName:"cpu",kernelFunc:CI},TI=Yx(((e,t)=>e||t)),_I=gw(Ct,TI,null,"bool"),EI={kernelName:Ct,backendName:"cpu",kernelFunc:_I},RI={kernelName:$t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:s,bias:i,alpha:o,beta:u}=a;zx(r,"LRN");const l=r.shape[3],c=l-1,h=n.data.get(r.dataId).values,d=g(r.shape),p=new Float32Array(d);function f(e){const t=e%l;let n=e-t+Math.max(0,t-s);const a=e-t+Math.min(t+s,c);let r=0;for(;n<=a;n++){const e=h[n];r+=e*e}return r}for(let e=0;e<d;e++){const t=f(e),n=h[e]*Math.pow(i+o*t,-u);p[e]=n}return n.makeTensorInfo(r.shape,r.dtype,p)}},AI={kernelName:Tt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=a;zx(i,"LRNGrad");const h=g(i.shape),d=i.shape[3],p=n.data.get(i.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(s.dataId).values,b=new Float32Array(h),y=h;for(let e=0;e<y;e++){const t=e%d,n=e-t+Math.max(0,t-o),a=e-t+Math.min(d,t+o+1);let r=0;for(let e=n;e<a;e++)r+=Math.pow(f[e],2);r=l*r+u;for(let t=n;t<a;t++){let n=-2*l*c*f[t]*m[e]/r;e===t&&(n+=Math.pow(r,-c)),n*=p[e],b[t]+=n}}return n.makeTensorInfo(i.shape,r.dtype,b)}};function FI(e,t,n,a){const r=N(a,g(n));for(let n=0;n<r.length;++n){const a=n*t;let s=e[a];for(let n=0;n<t;++n){const t=e[a+n];(Number.isNaN(t)||t>s)&&(s=t)}r[n]=s}return r}function DI(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:s,keepDims:i}=a,o=n;let u=r.shape;const l=u.length,c=I(s,u);let h=c;const d=Bo(h,l);let p=o.data.get(r.dataId).values;if(null!=d){const e=new Array(l);for(let t=0;t<e.length;t++)e[t]=u[d[t]];p=Dw(p,u,r.dtype,d,e),h=Vo(h.length,l),u=e}zx(r,"max"),Wo("max",h,l);const[f,m]=zo(u,h),b=FI(p,g(m),f,r.dtype),y=o.write(b,f,r.dtype);let x=f;return i&&(x=Po(f,c)),{dataId:y,shape:x,dtype:r.dtype}}const MI={kernelName:_t,backendName:"cpu",kernelFunc:DI},OI=Yx(((e,t)=>Math.max(e,t))),LI=gw(Et,OI),zI={kernelName:Et,backendName:"cpu",kernelFunc:LI},PI={kernelName:Rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;zx(r,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=a;p(Hi(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=Mi(r.shape,s,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&b(l.inShape,l.outShape))c=jx({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=D(r.shape),a=Zw(e,r.shape,r.dtype,t,l,"max");c=n.makeTensorInfo(l.outShape,r.dtype,a.values)}return c}},WI={kernelName:Ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=a;zx(r,"maxPool3d");const c=Oi(r.shape,s,i,1,o,u,l),h=ek(n.data.get(r.dataId).values,r.shape,r.dtype,D(r.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},BI={kernelName:Dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=a;zx([r,s],"maxPool3DGrad");const c=Oi(s.shape,i,o,1,u,l),h=function(e,t){const n=ks(t.outShape,"int32"),a=t.strideDepth,r=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let b=0;b<t.outDepth;++b){const y=b*a-d;let x=y;for(;x<0;)x+=i;const w=Math.min(t.inDepth,l+y);for(let a=0;a<t.outHeight;++a){const l=a*r-p;let d=l;for(;d<0;)d+=o;const k=Math.min(t.inHeight,c+l);for(let r=0;r<t.outWidth;++r){const p=r*s-f;let v=p;for(;v<0;)v+=u;const I=Math.min(t.inWidth,h+p);let S=Number.NEGATIVE_INFINITY,N=-1;for(let t=x;t<w;t+=i){const n=t-y;for(let a=d;a<k;a+=o){const r=a-l;for(let s=v;s<I;s+=u){const i=s-p,o=e.get(m,t,a,s,g);o>=S&&(S=o,N=n*c*h+r*c+i)}}}n.set(N,m,b,a,r,g)}}}return n}(n.bufferSync(s),c),d=c.strideDepth,p=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,b=c.dilationWidth,y=c.effectiveFilterDepth,x=c.effectiveFilterHeight,w=c.effectiveFilterWidth,k=y-1-c.padInfo.front,v=w-1-c.padInfo.left,I=x-1-c.padInfo.top,S=ks(s.shape,"float32"),N=n.bufferSync(r);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let a=0;a<c.inHeight;++a)for(let r=0;r<c.inWidth;++r){const s=n-k,i=a-I,o=r-v;let u=0;for(let n=0;n<y;n+=m){const a=(s+n)/d;if(!(a<0||a>=c.outDepth||Math.floor(a)!==a))for(let r=0;r<x;r+=g){const s=(i+r)/p;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let i=0;i<w;i+=b){const l=(o+i)/f;if(l<0||l>=c.outWidth||Math.floor(l)!==l)continue;const d=y*x*w-1-h.get(e,a,s,l,t)===n*x*w+r*w+i?1:0;0!==d&&(u+=N.get(e,a,s,l,t)*d)}}}S.set(u,e,n,a,r,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}},UI={kernelName:At,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s,output:i}=t,o=s;zx([s,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=a,d=Mi(o.shape,u,l,1,c,h),p=n.data.get(o.dataId).values,f=ks(d.outShape,o.dtype,Qw(p,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,b=d.dilationHeight,y=d.dilationWidth,x=d.effectiveFilterHeight,w=d.effectiveFilterWidth,k=w-1-d.padInfo.left,v=x-1-d.padInfo.top,I=ks(o.shape,"float32"),S=n.data.get(r.dataId).values,N=ks(r.shape,"float32",S);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let a=0;a<d.inWidth;++a){const r=n-v,s=a-k;let i=0;for(let n=0;n<x;n+=b){const a=(r+n)/m;if(!(a<0||a>=d.outHeight||Math.floor(a)!==a))for(let r=0;r<w;r+=y){const o=(s+r)/g;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const u=x*w-1-f.get(e,a,o,t)===n*w+r?1:0;0!==u&&(i+=N.get(e,a,o,t)*u)}}I.set(i,e,n,a,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},VI={kernelName:Mt,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:a}=e,{filterSize:r,strides:s,pad:i,includeBatchInIndex:o}=t,u=n;zx(a,"MaxPoolWithArgmax");const l=u.data.get(a.dataId).values,c=Mi(a.shape,r,s,[1,1],i),[h,d]=function(e,t,n,a,r){const s=Zw(e,0,n,D(t),r,"max"),i=Qw(e,t,n,r,!0,a);return[s.values,i.values]}(l,a.shape,a.dtype,o,c),p=u.write(h,c.outShape,a.dtype),f=u.write(d,c.outShape,a.dtype);return[{dataId:p,shape:c.outShape,dtype:a.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},GI={kernelName:Ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,o=I(s,r.shape),u=g(zo(r.shape,o)[1]),l=[],c=n.makeTensorInfo([],"float32",new Float32Array([u]));l.push(c);const h=fw({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});l.push(h);const d=Cv({inputs:{a:h,b:c},backend:n});l.push(d);const p=nv({inputs:{x:d},backend:n,attrs:{axis:s,keepDims:i}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},HI={kernelName:Lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;zx(r,"min");const o=I(s,r.shape);let u=o;const l=Bo(u,r.shape.length);let c=r;null!=l&&(c=Mw({inputs:{x:r},backend:n,attrs:{perm:l}}),u=Vo(u.length,r.shape.length)),Wo("min",u,c.shape.length);const[h,d]=zo(c.shape,u),p=g(d),f=z(g(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const a=m[t+e];(Number.isNaN(a)||a<n)&&(n=a)}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const b=n.makeTensorInfo(h,c.dtype,f);if(i){const e=vw({inputs:{x:b},backend:n,attrs:{shape:Po(h,o)}});return n.disposeIntermediateTensorInfo(b),e}return b}},jI=Yx(((e,t)=>Math.min(e,t))),qI=gw(zt,jI),KI={kernelName:zt,backendName:"cpu",kernelFunc:qI},XI={kernelName:Pt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,mode:i}=a;zx(r,"mirrorPad");const o=s.map(((e,t)=>e[0]+r.shape[t]+e[1])),u=s.map((e=>e[0])),l=s.map(((e,t)=>e[0]+r.shape[t])),c="reflect"===i?0:1,h=n.data.get(r.dataId).values,d=r.shape.length,p=D(r.shape),f=g(o),m=o.length,b=D(o),y=N(r.dtype,f);for(let e=0;e<f;e++){let t=U(e,m,b);for(let e=0;e<m;e++)t[e]<u[e]?t[e]=2*u[e]-t[e]-c:t[e]>=l[e]&&(t[e]=2*(l[e]-1)-t[e]+c);t=t.map(((e,t)=>e-u[t]));const n=B(t,d,p);y[e]=h[n]}return{dataId:n.write(y,o,r.dtype),shape:o,dtype:r.dtype}}},YI=Yx(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),JI=gw(Wt,YI),ZI={kernelName:Wt,backendName:"cpu",kernelFunc:JI};function QI(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:s}=a,i=r.shape.length;let o=s;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const u=I([o],r.shape),l=DI({inputs:{x:r},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),c=Po(l.shape,u),h=vw({inputs:{x:l},backend:n,attrs:{shape:c}}),d=Ev({inputs:{a:r,b:h},backend:n}),p=yv({inputs:{x:d},backend:n}),f=nv({inputs:{x:p},backend:n,attrs:{axis:u,keepDims:!1}}),m=vw({inputs:{x:f},backend:n,attrs:{shape:c}}),g=Cv({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const eS={kernelName:Fn,backendName:"cpu",kernelFunc:QI},tS={kernelName:Bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:s,seed:i,normalized:o}=a;zx(r,"multinomial");const u=o?r:QI({inputs:{logits:r},backend:n,attrs:{dim:-1}}),l=u.shape[0],c=u.shape[1],h=n.data.get(u.dataId).values,d=[l,s],p=z(g(d),"int32");for(let e=0;e<l;++e){const t=e*c,n=new Float32Array(c-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const a=ou.alea(i.toString()),r=e*s;for(let e=0;e<s;++e){const t=a();p[r+e]=n.length;for(let a=0;a<n.length;a++)if(t<n[a]){p[r+e]=a;break}}}return o||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(d,"int32",p)}};function nS(e,t,n){const a=Fa(-1,n);return Zk([],t,a,e,n)}const aS={kernelName:Vt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;zx(a,"neg");const r=n.data.get(a.dataId).values,[s,i]=nS(r,a.shape,a.dtype);return n.makeTensorInfo(i,a.dtype,s)}},rS=ll,sS={kernelName:Ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=a;zx(r,"NonMaxSuppression");const l=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,{selectedIndices:h}=rS(l,c,i,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},iS=cl,oS={kernelName:jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=a;zx(r,"NonMaxSuppressionPadded");const c=n.data.get(r.dataId).values,h=n.data.get(s.dataId).values,{selectedIndices:d,validOutputs:p}=iS(c,h,i,o,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},uS=hl,lS={kernelName:qt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=a;zx(r,"NonMaxSuppressionWithScore");const c=n.data.get(r.dataId).values,h=n.data.get(s.dataId).values,d=i,p=o,f=u,m=l,{selectedIndices:g,selectedScores:b}=uS(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}},cS=Yx(((e,t)=>e!==t?1:0)),hS=gw(Gt,cS,null,"bool"),dS={kernelName:Gt,backendName:"cpu",kernelFunc:hS},pS={kernelName:Xt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:s,depth:i,onValue:o,offValue:u}=a;zx(r,"oneHot");const l=g(r.shape),c=new Float32Array(l*i);c.fill(u);const h=n.data.get(r.dataId).values;for(let e=0;e<l;++e)h[e]>=0&&h[e]<i&&(c[e*i+h[e]]=o);return n.makeTensorInfo([...r.shape,i],s,c)}};function fS(e){const{inputs:t,backend:n}=e,{x:a}=t;if("string"===a.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===a.dtype){const e=hw({inputs:{input:a},backend:n}),t=fS({inputs:{x:e},backend:n}),r=Ik({inputs:{input:a},backend:n}),s=fS({inputs:{x:r},backend:n}),i=uw({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),i}return Ov({backend:n,attrs:{shape:a.shape,value:0,dtype:a.dtype}})}const mS={kernelName:na,backendName:"cpu",kernelFunc:fS},gS={kernelName:Kt,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const t=hw({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),s=Ik({inputs:{input:r},backend:a}),i=fS({inputs:{x:s},backend:a}),o=uw({inputs:{real:n,imag:i},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),o}return Ov({backend:a,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}};function bS(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return wv({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{f(s,e.shape,"All tensors passed to stack must have matching shapes"),p(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=Nk({inputs:t.map((e=>{const t=wv({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}const yS={kernelName:Yt,backendName:"cpu",kernelFunc:bS},xS={kernelName:Jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,constantValue:i}=a;zx(r,"pad");const o=s.map(((e,t)=>e[0]+r.shape[t]+e[1])),u=s.map((e=>e[0])),l=n.data.get(r.dataId).values,c=g(r.shape),h=r.shape.length,d=D(r.shape),p=g(o),f=o.length,m=D(o),b=N(r.dtype,p);0!==i&&b.fill(i);for(let e=0;e<c;e++)b[B(U(e,h,d).map(((e,t)=>e+u[t])),f,m)]=l[e];return{dataId:n.write(b,o,r.dtype),shape:o,dtype:r.dtype}}},wS=Yx(((e,t)=>Math.pow(e,t))),kS=gw(Zt,wS),vS={kernelName:Zt,backendName:"cpu",kernelFunc:kS};function IS(e,t,n,a){const[r,s]=zo(e,a),i=cr(t,"int32"),o=z(g(r),i),u=g(s);for(let e=0;e<o.length;++e){const t=e*u;let a=1;for(let e=0;e<u;++e)a*=n[t+e];o[e]=a}return{outVals:o,outShape:r,outDtype:i}}const SS={kernelName:en,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;zx(r,"prod");const o=r.shape.length,u=I(s,r.shape),l=Bo(u,o);let c=u,h=r;const d=[];null!=l&&(h=Mw({inputs:{x:r},backend:n,attrs:{perm:l}}),d.push(h),c=Vo(c.length,o));const p=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=IS(h.shape,h.dtype,p,c);let b=m;return i&&(b=Po(m,u)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(b,g,f)}};function NS(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let a=t;a<e.length;a++)n[t-1]*=e[a];return n}function CS(e,t,n,a,r,s,i,o){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,a)=>{if(e<0||e>=n){const r=U(a,t.length,D(t)).join(",");throw new Error(`indices[${r}] = ${e} is not in [0, ${n})`)}}))}(s,i,t[0][0]-1),0===a.length)throw new Error("params.rank must be nonzero");const u=a[0],{outSplits:l,valueSlices:c,numValues:h}=function(e,t,n,a){const r=[];let s=0;const i=t.length-1+n.length,o=new Array(i).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const a=e[n],r=n===e.length-1?t:e[n+1].length;if(0===a.length)throw new Error("Ragged splits may not be empty");if(a[0]<0)throw new Error("Ragged splits must be non-negative");if(a[a.length-1]>r)throw new Error("Ragged splits must not point past values");for(let e=1;e<a.length;++e)if(a[e-1]>a[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,a);let u=1;for(let e=0;e<t.length-1;++e){u*=t[e];const n=t[e+1];for(let t=1;t<u+1;++t)o[e].push(t*n)}for(let a=0;a<e.length;++a){let i=e[a],u=e[a]+1;for(let e=0;e<n.length;++e){const a=n[e],r=e+t.length-1;if(r>=0){const e=o[r],t=e[e.length-1]-a[i];for(let e=i;e<u;++e)o[r].push(a[e+1]+t)}i=a[i],u=a[u]}u!==i&&(r.push([i,u]),s+=u-i)}return{outSplits:o,valueSlices:r,numValues:s}}(s,i,e,u),d=function(e){const t=[];for(let n=0;n<e.length;++n){const a=C("int32",e[n].length);t.push(a),e[n].forEach(((e,t)=>a[t]=e))}return t}(l),p=function(e,t,n,a,r){const s=t.slice();s[0]=r;const i=C(n,g(s)),o=e.length;return function(e,t,n,a,r,s){const i=NS(t,2)[1],o=NS(s,2)[1];let u=0;for(const t of n)for(let n=t[0];n<t[1];++n){for(let t=0;t<a;++t)r[u*o+t]=e[n*i+t];++u}}(e,t,a,0===o?0:o/t[0],i,s),[i,s]}(n,a,r,c,h);return[d,p[0],p[1]]}const $S={kernelName:tn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{paramsNestedSplits:r,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=a,u=r.map((e=>n.data.get(e.dataId).values)),l=r.map((e=>e.shape)),c=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,[d,p,f]=CS(u,l,c,s.shape,s.dtype,h,i.shape),m=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,s.dtype,p);return m.concat([g])}},TS=2147483647;function _S(e,t,n,a,r,s,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");const o=0===t.length,u=0===r.length,l=0===i.length,c=[];o||c.push(t[0]),u||c.push(r[0]),l||c.push(i[0]);for(let e=1;e<c.length;++e)if(c[e]!==c[e-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===c.length?1:c[0],d=C("int32",h+1);d[0]=0;for(let t=0;t<h;++t){const n=o?e[0]:e[t],r=u?a[0]:a[t],i=l?s[0]:s[t];if(0===i)throw new Error("Requires delta != 0");let c;if(i>0&&r<n||i<0&&r>n)c=0;else if(c=Math.ceil(Math.abs((r-n)/i)),c>TS)throw new Error(`Requires ((limit - start) / delta) <= ${TS}`);d[t+1]=d[t]+c}const p=C(n,d[h]);let f=0;for(let t=0;t<h;++t){const n=d[t+1]-d[t];let a=o?e[0]:e[t];const r=l?s[0]:s[t];for(let e=0;e<n;++e)p[f++]=a,a+=r}return[d,p]}const ES={kernelName:nn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:a,limits:r,deltas:s}=t,i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,[l,c]=_S(i,a.shape,a.dtype,o,r.shape,u,s.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([c.length],a.dtype,c)]}};var RS=Bl;class AS{constructor(e,t,n,a,r,s,i,o,u,l){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=a,this.valuesDType=r,this.defaultValue=s,this.defaultValueShape=i,this.rowPartitionValues=o,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=Vl(l),this.raggedRank=Gl(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===RS.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===RS.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case RS.VALUE_ROWIDS:return AS.getMaxWidthValueRowID(t);case RS.ROW_SPLITS:return AS.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${RS[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let a=0;a<t-1;++a){const t=e[a+1]-e[a];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,a=e[0],r=0;for(let s=1;s<t;++s){const t=e[s];t!==a&&(a=t,r=Math.max(s-n,r),n=s)}return Math.max(t-n,r)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return DS(e,n)}calculateOutputSize(e){const t=this.valuesShape;Hl(this.defaultValueShape,t);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=Ul(this.raggedRank,n,t);a[0]<0&&(a[0]=e);for(let e=1;e<=this.raggedRank;++e)a[e]<0&&(a[e]=this.getMaxWidth(e));return a}calculateFirstParentOutputIndex(e,t,n){const a=Math.min(e,n),r=[];let s=0;for(let e=0;e<a;++e,s+=t)r.push(s);for(let t=a;t<e;++t)r.push(-1);return p(r.length===e,(()=>"Final length of result must be equal to firstDimension.")),r}calculateOutputIndexRowSplit(e,t,n,a){const r=e.length,s=[];for(let i=0;i<r-1;++i){const r=e[i+1]-e[i];let o=Math.min(a,r),u=t[i];-1===u&&(o=0);for(let e=0;e<o;++e)s.push(u),u+=n;for(let e=0;e<r-o;++e)s.push(-1)}if(r>0&&s.length!==e[r-1])throw new Error("Invalid row split size.");return s}calculateOutputIndexValueRowID(e,t,n,a){const r=e.length,s=[];if(0===r)return[];let i=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let u=t[o];s.push(u);for(let l=1;l<r;++l){const r=e[l];if(r===o)u>=0&&(++i,i<a?u+=n:u=-1);else{if(i=0,o=r,r>=t.length)throw new Error(`Got nextValueRowId=${r} which is not less than ${t.length}`);u=t[r]}s.push(u)}if(s.length!==e.length)throw new Error("Invalid row ids.");return s}calculateOutputIndex(e,t,n,a){const r=this.getRowPartitionTensor(e),s=this.getRowPartitionTypeByDimension(e);switch(s){case RS.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,t,n,a);case RS.ROW_SPLITS:if(r.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${r.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(r,t,n,a);default:throw new Error(`Unsupported partition type: ${RS[s]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case RS.FIRST_DIM_SIZE:return e[0];case RS.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case RS.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${RS[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let e=n.length-2;e>=0;--e)n[e]=n[e+1]*t[e+1];const a=DS(t,!1),r=C(this.valuesDType,g(a));if(n[0]*t[0]>0){let s=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e)s=this.calculateOutputIndex(e-1,s,n[e],t[e]);this.setOutput(this.raggedRank,s,r,a)}return[a,r]}setOutput(e,t,n,a){if(0===n.length)return;const r=this.values,s=n;let i=a.slice();i=i.slice(e+1);const o=g(i),u=t.length;let l=this.defaultValue;if(l.length!==o&&1!==l.length){const e=this.defaultValueShape;Pr((()=>{const t=Xi(l,e),n=no(t,i);l=n.dataSync()}))}let c=0,h=0,d=0;for(let e=0;e<=u;++e){let a=e<u?t[e]:-1;if(a!==d){if(h<d){const e=r.subarray(c*o);FS(s.subarray(h*o),e,(d-h)*o)}if(e>=u){const e=n.length;a=Math.floor(e/o)}if(a>d)if(1===this.defaultValue.length)s.subarray(d*o,a*o).fill(this.defaultValue[0]),d=a;else for(;a>d;)FS(s.slice(d*o),l,o),++d;a<0?(c=e+1,h=d):(c=e,h=d,d=h+1)}else++d}}}function FS(e,t,n){for(let a=0;a<n;a++)e[a]=t[a]}function DS(e,t){const n=[];for(let a of e){if(a<0){if(!t)throw new Error(`Dimension ${a} must be >= 0`);if(a<-1)throw new Error(`Dimension ${a} must be >= -1`);a=-1}n.push(a)}return n}function MS(e,t,n,a,r,s,i,o,u,l){return new AS(e,t,n,a,r,s,i,o,u,l).compute()}const OS={kernelName:an,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{shape:r,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:u}=a,l=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,d=o.map((e=>n.data.get(e.dataId).values)),p=o.map((e=>e.shape)),[f,m]=MS(l,r.shape,c,s.shape,s.dtype,h,i.shape,d,p,u);return n.makeTensorInfo(f,s.dtype,m)}};function LS(e,t,n,a){if(e===t||e<t&&n<0||t<e&&n>1)return z(0,a);const r=z(Math.abs(Math.ceil((t-e)/n)),a);t<e&&1===n&&(n=-1),r[0]=e;for(let e=1;e<r.length;e++)r[e]=r[e-1]+n;return r}const zS={kernelName:rn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,dtype:s,step:i}=n,o=LS(a,r,i,s);return t.makeTensorInfo([o.length],s,o)}},PS=Ux(on,(e=>1/e)),WS={kernelName:on,backendName:"cpu",kernelFunc:PS},BS={kernelName:dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=a;zx(r,"resizeBilinear");const u=D(r.shape),[l,c]=o,[h,d,p,f]=r.shape,m=n.data.get(r.dataId).values,b=new Float32Array(g([h,l,c,f])),y=[s&&l>1?d-1:d,s&&c>1?p-1:p],x=[s&&l>1?l-1:l,s&&c>1?c-1:c];let w=0;const k=y[0]/x[0],v=y[1]/x[1];for(let e=0;e<h;e++)for(let t=0;t<l;t++){let n;n=i?k*(t+.5)-.5:k*t;const a=Math.max(0,Math.floor(n)),r=n-a,s=Math.min(d-1,Math.ceil(n)),o=e*u[0]+a*u[1],l=e*u[0]+s*u[1];for(let e=0;e<c;e++){let t;t=i?v*(e+.5)-.5:v*e;const n=Math.max(0,Math.floor(t)),a=t-n,s=Math.min(p-1,Math.ceil(t)),c=o+n*u[2],h=l+n*u[2],d=o+s*u[2],g=l+s*u[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[h+e],s=t+(m[d+e]-t)*a,i=s+(n+(m[g+e]-n)*a-s)*r;b[w++]=i}}}return n.makeTensorInfo([h,l,c,f],"float32",b)}},US={kernelName:pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:i}=a;zx([s,r],"resizeBilinearGrad");const o=D(r.shape),[u,l,c,h]=r.shape,[,d,p]=s.shape,f=new Float32Array(u*l*c*h),m=[i&&d>1?l-1:l,i&&p>1?c-1:c],g=[i&&d>1?d-1:d,i&&p>1?p-1:p],b=m[0]/g[0],y=m[1]/g[1],x=n.data.get(s.dataId).values;let w=0;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<d;e++){const n=e*b,a=Math.floor(n),r=Math.min(Math.ceil(n),l-1),s=t+a*o[1],i=t+r*o[1],u=n-a,d=1-u;for(let e=0;e<p;e++){const t=e*y,n=Math.floor(t),a=Math.min(Math.ceil(t),c-1),r=t-n,l=1-r,p=s+n*o[2],m=s+a*o[2],g=i+n*o[2],b=i+a*o[2],k=d*l,v=d*r,I=u*l,S=u*r;for(let e=0;e<h;e++){const t=x[w++];f[p+e]+=t*k,f[m+e]+=t*v,f[g+e]+=t*I,f[b+e]+=t*S}}}}return n.makeTensorInfo([u,c,l,h],"float32",f)}},VS={kernelName:cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=a;zx(r,"resizeNearestNeighbor");const u=D(r.shape),[l,c]=o,[h,d,p,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(h*l*c*f),b=[s&&l>1?d-1:d,s&&c>1?p-1:p],y=[s&&l>1?l-1:l,s&&c>1?c-1:c],x=b[0]/y[0],w=b[1]/y[1];let k=0;for(let e=0;e<h;e++){const t=e*u[0];for(let e=0;e<l;e++){const n=i?x*(e+.5):x*e;let a=Math.min(d-1,s?Math.round(n):Math.floor(n));i&&(a=Math.max(0,a));const r=t+a*u[1];for(let e=0;e<c;e++){const t=i?w*(e+.5):w*e;let n=Math.min(p-1,s?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const a=r+n*u[2];for(let e=0;e<f;e++){const t=m[a+e];g[k++]=t}}}}return n.makeTensorInfo([h,l,c,f],r.dtype,g)}},GS={kernelName:hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:i}=a;zx([s,r],"resizeNearestNeighborGrad");const o=D(r.shape),u=D(s.shape),[l,c,h,d]=r.shape,[,p,f]=s.shape,m=new Float32Array(l*c*h*d),g=n.data.get(s.dataId).values,b=[i&&p>1?c-1:c,i&&f>1?h-1:h],y=[i&&p>1?p-1:p,i&&f>1?f-1:f],x=b[0]/y[0],w=b[1]/y[1],k=1/x,v=1/w,I=2*Math.ceil(k)+2,S=2*Math.ceil(v)+2;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],a=Math.floor(e*k),r=Math.floor(a-I/2);for(let a=0;a<h;a++){const s=n+a*o[2],l=Math.floor(a*v),b=Math.floor(l-S/2);for(let n=0;n<d;n++){let o=0;for(let s=0;s<I;s++){const l=s+r;if(l<0||l>=p)continue;const d=t+l*u[1],m=l*x;if(e===Math.min(c-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<S;e++){const t=e+b;if(t<0||t>=f)continue;const r=d+t*u[2],s=t*w;a===Math.min(h-1,i?Math.round(s):Math.floor(s))&&(o+=g[r+n])}}m[s+n]=o}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}},HS={kernelName:mn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a;zx(r,"reverse");const i=r.shape.length,o=I(s,r.shape);if(0===i)return jx({inputs:{x:r},backend:n});const u=new Ja(r.shape,r.dtype),l=n.bufferSync(r);for(let e=0;e<u.size;e++){const t=u.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=r.shape[e]-1-n[e])),u.set(l.get(...n),...t)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},jS={kernelName:ra,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:a}=e,{radians:r,fillValue:s,center:i}=t,o=n,u=N(a.dtype,g(a.shape)),[l,c,h,d]=a.shape,[p,f]=Kl(i,c,h),m=Math.sin(r),b=Math.cos(r),y=o.data.get(a.dataId).values;for(let e=0;e<l;e++){const t=e*h*c*d;for(let e=0;e<c;e++){const n=e*(h*d);for(let a=0;a<h;a++){const r=a*d;for(let i=0;i<d;i++){const o=[l,e,a,i],g=o[2],x=o[1];let w=(g-p)*b-(x-f)*m,k=(g-p)*m+(x-f)*b;w=Math.round(w+p),k=Math.round(k+f);let v=s;"number"!=typeof s&&(v=3===i?255:s[i]),w>=0&&w<h&&k>=0&&k<c&&(v=y[t+k*(h*d)+w*d+i]),u[t+n+r+i]=v}}}}return{dataId:o.write(u,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},qS=Ux(gn,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),KS={kernelName:gn,backendName:"cpu",kernelFunc:qS},XS=Bx((e=>1/Math.sqrt(e))),YS=Vx(bn,XS),JS={kernelName:bn,backendName:"cpu",kernelFunc:YS};function ZS(e,t,n,a,r,s,i,o,u,l){const c=[a/r,r],h=e.values,d=t.values;if(0===a)return ks(n,t.dtype);const p=u instanceof Ja?u:ks(c,t.dtype);"string"==typeof u||"number"==typeof u?p.values.fill(u):"boolean"==typeof u&&p.values.fill(+u);for(let e=0;e<s;e++){const s=[];let u=0;for(let t=0;t<i;t++){const n=h[e*i+t];s.push(n),u+=n*o[t]}if(u<0||u>=a/r)throw new Error(`Invalid indices: ${s} does not index into ${n}`);for(let n=0;n<r;n++)l?p.values[u*r+n]+=d[e*r+n]:p.values[u*r+n]=0===t.rank?d[0]:d[e*r+n]}return p}const QS={kernelName:yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:s}=t,{shape:i}=a,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=hi(0,r,i),d=ZS(n.bufferSync(r),n.bufferSync(s),i,h,l,u,o,c,0,!0);return n.makeTensorInfo(i,d.dtype,d.values)}};function eN(e,t){let n=0,a=e.length,r=0;for(;n<a;)r=Math.floor((n+a)/2),e[r]<t?n=r+1:a=r;return a}function tN(e,t){let n=0,a=e.length,r=0;for(;n<a;)r=Math.floor((n+a)/2),e[r]<=t?n=r+1:a=r;return a}const nN={kernelName:wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:s}=t,{side:i}=a,o=function(e,t,n,a,r,s){const i=C("int32",n*r);for(let o=0;o<n;++o){const n=e.slice(o*a,(o+1)*a),u=o*r;for(let e=0;e<r;++e)i[u+e]="left"===s?eN(n,t[e+u]):tN(n,t[e+u])}return i}(n.data.get(r.dataId).values,n.data.get(s.dataId).values,r.shape[0],r.shape[1],s.shape[1],i);return n.makeTensorInfo(s.shape,"int32",o)}},aN={kernelName:kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t;zx([a,r,s],"select");const i=a.shape.length,o=n.data.get(a.dataId).values,u=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,c=cr(r.dtype,s.dtype),h=z(g(r.shape),c);let d=0;const p=0===i||i>1||1===r.shape.length?1:g(r.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<p;t++)1===o[e]?h[d++]=u[e]:h[d++]=l[e];return n.makeTensorInfo(r.shape,c,h)}},rN=ec,sN=tc,iN=Ux(vn,(e=>e>=0?sN*e:rN*(Math.exp(e)-1))),oN={kernelName:vn,backendName:"cpu",kernelFunc:iN},uN=Ux(Cn,(e=>e<0?-1:e>0?1:0)),lN={kernelName:Cn,backendName:"cpu",kernelFunc:uN},cN=Ux(Sn,(e=>Math.sin(e))),hN={kernelName:Sn,backendName:"cpu",kernelFunc:cN},dN=Ux(Nn,(e=>Math.sinh(e))),pN={kernelName:Nn,backendName:"cpu",kernelFunc:dN},fN=Math.log(1.1920928955078125e-7)+2,mN=Ux(Tn,(e=>{const t=e>-fN,n=e<fN,a=Math.exp(e);let r;return r=n?a:t?e:Math.log(1+a),r})),gN={kernelName:Tn,backendName:"cpu",kernelFunc:mN},bN={kernelName:Rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,paddings:i}=a;zx([r],"spaceToBatchND");const o=g(s),u=[[0,0]];u.push(...i);for(let e=1+s.length;e<r.shape.length;++e)u.push([0,0]);const l=xS.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:u,constantValue:0}}),c=Xl(l.shape,s,o,!1),h=Yl(c.length,s.length,!1),d=Jl(l.shape,s,o,!1),p=vw({inputs:{x:l},backend:n,attrs:{shape:c}}),f=Mw({inputs:{x:p},backend:n,attrs:{perm:h}}),m=vw({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}};function yN(e,t,n,a,r,s,i){const o=t[0],u=s[0],l=new Array(u),c=new Array(o),h=t[1];if(0===u){if(0!==o)throw new Error($c(o));return[C(n,0),[0,h],C(r,0),l,c]}let d=!0,p=0;const f=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*h];if(n<0)throw new Error(Tc(t,n));if(n>=u)throw new Error(_c(t,n,u));++f[n],d=d&&n>=p,p=n}let m=!0;for(let e=0;e<u;++e){const t=0===f[e];l[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&d){const t=e,n=a;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,l,c]}{const t=f[u-1],s=C(n,t*h),d=C(r,t),p=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*h],r=p[n],i=(0===n?0:f[n-1])+r;p[n]++;for(let n=0;n<h;++n)s[i*h+n]=e[t*h+n];d[i]=a[t],c[t]=i}for(let e=0;e<u;++e)if(0===p[e]){const t=0===e?0:f[e-1];s[t*h+0]=e;for(let e=1;e<h;++e)s[t*h+e]=0;d[t]=i}return[s,[t,h],d,l,c]}}const xN={kernelName:Dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:a,values:r,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${s.shape}`);if(2!==a.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${a.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n        ${r.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(a.dataId).values,u=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values[0],[h,d,p,f,m]=yN(o,a.shape,a.dtype,u,r.dtype,l,c);return[n.makeTensorInfo(d,a.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}};function wN(e,t,n,a,r){const s=g(a),i=t[0],o=r.length,u=[];let l=1,c=-1;for(let e=0;e<o;++e){const t=r[e];if(-1===t){if(-1!==c)throw new Error(Ec(c,e));c=e,u.push(1)}else{if(t<0)throw new Error(Rc(e,t));l*=t,u.push(t)}}if(-1!==c){if(l<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(s/l);if(l*e!==s)throw new Error(Fc(a,u));u[c]=e}if(g(u)!==s)throw new Error(Dc(a,u));const h=a.length,d=[];if(h>0){d[h-1]=1;for(let e=h-2;e>=0;--e)d[e]=d[e+1]*a[e+1]}const p=[];if(o>0){p[o-1]=1;for(let e=o-2;e>=0;--e)p[e]=p[e+1]*u[e+1]}const f=C(n,i*o);for(let t=0;t<i;++t){let n=0;for(let a=0;a<h;++a)n+=e[t*h+a]*d[a];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/p[e]),n%=p[e]}return[f,[i,o],u]}const kN={kernelName:Mn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:a,inputShape:r,newShape:s}=t;if(2!==a.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${a.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.data.get(r.dataId).values),o=n.data.get(a.dataId).values,u=Array.from(n.data.get(s.dataId).values),[l,c,h]=wN(o,a.shape,a.dtype,i,u);return[n.makeTensorInfo(c,a.dtype,l),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}};function vN(e,t,n,a,r,s=!1,i=0){const o=a.length,u=[t[0],e.length/t[0]],l=u[1],c=o>0?r[o-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=c;const d=C(n,h.reduce(((e,t)=>e*t),1));if(0===o)return c>0&&d.fill(i),[d,h];if(c<=0)throw new Error("segment ids must be >= 0");let p=0,f=1,m=0,g=r[p];for(;;){let t=0;if(f<o){if(t=r[f],g===t){++f;continue}if(g>=t)throw new Error("segment ids are not increasing")}if(g<0||g>=c)throw new Error(Lc(g,c));g>m&&d.fill(i,m*l,g*l);for(let t=p;t<f;++t){const n=a[t];if(n<0||n>=u[0])throw new Error(zc(t,a[t],u[0]));for(let t=0;t<l;t++)d[g*l+t]+=e[n*l+t]}if(s)for(let e=0;e<l;e++)d[g*l+e]/=f-p;if(p=f,++f,m=g+1,g=t,f>o)break}return m<c&&d.fill(i,m*l,c*l),[d,h]}const IN={kernelName:On,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${r.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${s.shape}`);if(r.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,[l,c]=vN(i,a.shape,a.dtype,o,u,!0);return n.makeTensorInfo(c,a.dtype,l)}},SN={kernelName:Ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${r.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${s.shape}`);if(r.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,[l,c]=vN(i,a.shape,a.dtype,o,u);return n.makeTensorInfo(c,a.dtype,l)}},NN={kernelName:zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:s,defaultValue:i}=t,{outputShape:o}=a,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=hi(0,r,o),p=!1,f=n.bufferSync(r);let m;switch(s.dtype){case"bool":m=ZS(f,n.bufferSync(s),o,d,c,l,u,h,Boolean(n.data.get(i.dataId).values[0]),p);break;case"float32":case"int32":m=ZS(f,n.bufferSync(s),o,d,c,l,u,h,n.data.get(i.dataId).values[0],p);break;case"string":m=ZS(f,n.bufferSync(s),o,d,c,l,u,h,La(n.data.get(i.dataId).values[0]),p);break;default:throw new Error(`Unsupported type ${s.dtype}`)}return n.makeTensorInfo(o,m.dtype,m.values)}},CN={kernelName:An,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:i}=a,o=I(i,r.shape)[0],u=Cc(r,s,o),l=new Array(r.shape.length).fill(0),c=r.shape.slice();return u.map((e=>{const t=[...c];t[o]=e;const a=ok({inputs:{x:r},backend:n,attrs:{begin:l,size:t}});return l[o]+=e,a}))}},$N=Bx((e=>Math.sqrt(e))),TN=Ux(_n,(e=>Math.sqrt(e))),_N={kernelName:_n,backendName:"cpu",kernelFunc:TN},EN={kernelName:Wn,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,a=t;zx(n,"square");const r=a.data.get(n.dataId).values,s=new Float32Array(r.length);for(let e=0;e<r.length;++e){const t=r[e];s[e]=t*t}return{dataId:a.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},RN=Yx(((e,t)=>{const n=e-t;return n*n})),AN=gw(Pn,RN),FN={kernelName:Pn,backendName:"cpu",kernelFunc:AN},DN=Bx(((e,t)=>{const{pattern:n,replaceGlobal:a,rewrite:r}=t;return e.replace(new RegExp(n,a?"g":""),r)})),MN={kernelName:Bn,backendName:"cpu",kernelFunc:Vx(Bn,DN)},ON=Ux(aa,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),LN={kernelName:aa,backendName:"cpu",kernelFunc:ON};function zN(e,t,n,a){const r=ks(e,t.dtype);for(let e=0;e<r.size;e++){const s=r.indexToLoc(e),i=new Array(s.length);for(let e=0;e<i.length;e++)i[e]=s[e]*n[e]+a[e];r.set(t.get(...i),...s)}return r}const PN={kernelName:Un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=a;zx(r,"stridedSlice");const{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:b,isSimpleSlice:y,begin:x,end:w,strides:k}=_i(r.shape,s,i,o,u,l,c,h,d);let v;if(g)v=vw({inputs:{x:r},backend:n,attrs:{shape:m}});else if(b||y){p(r.shape.length>=1,(()=>`Input must have rank at least 1, got: ${r.shape.length}`));const e=gi(x,w,k),t=ok({inputs:{x:r},backend:n,attrs:{begin:x,size:e}});v=vw({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else{const e=zN(f,n.bufferSync(r),k,x);v=n.makeTensorInfo(m,e.dtype,e.values)}return v}};class WN{constructor(e,t,n,a,r,s){this.separator=Oa(e),this.nGramWidths=t,this.leftPad=Oa(n),this.rightPad=Oa(a),this.padWidth=r,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,a,r,s){for(let i=0;i<r;++i){const o=this.getPadWidth(s),u=Math.max(0,o-i),l=Math.max(0,o-(r-(i+1))),c=s-(u+l),h=t+(u>0?0:i-o);let d=0;d+=u*this.leftPad.length;for(let t=0;t<c;++t)d+=e[h+t].length;d+=l*this.rightPad.length,d+=(u+l+c-1)*this.separator.length,n[a+i]=new Uint8Array(d);const p=n[a+i];let f=0;const m=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,a=t.length;if(a>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let r=1;r<a;++r){let a=t[r]>=e;if(a=a&&t[r]<=n,!a)throw new Error(`Invalid split value ${t[r]}, must be in [${e}, ${n}]`);e=t[r]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const r=a-1,s=C("int32",a);if(0===n||0===a){const e=new Array(n);for(let e=0;e<=r;++e)s[e]=0;return[e,s]}s[0]=0;for(let e=1;e<=r;++e){const n=t[e]-t[e-1];let a=0;this.nGramWidths.forEach((e=>{a+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===a&&(a=1),s[e]=s[e-1]+a}const i=new Array(s[r]);for(let n=0;n<r;++n){const a=t[n];let r=s[n];if(this.nGramWidths.forEach((s=>{const o=t[n+1]-t[n],u=this.getNumNGrams(o,s);this.createNGrams(e,a,i,r,u,s),r+=u})),this.preserveShort&&r===s[n]){const s=t[n+1]-t[n];if(0===s)continue;const o=s+2*this.padWidth,u=1;this.createNGrams(e,a,i,r,u,o)}}return[i,s]}}function BN(e,t,n,a,r,s,i,o){return new WN(n,a,r,s,i,o).compute(e,t)}const UN={kernelName:Vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:s,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=a,{data:c,dataSplits:h}=t,d=n.data.get(c.dataId).values,p=n.data.get(h.dataId).values,[f,m]=BN(d,p,r,s,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};function VN(e,t,n,a){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)a.push(e.subarray(t,t+1));return}if(1===t.length){const r=t[0];let s=e.indexOf(r);for(;-1!==s;){const t=e.subarray(0,s);n&&0===t.length||a.push(t),s=(e=e.subarray(s+1)).indexOf(r)}return void(n&&0===e.length||a.push(e))}let r=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){const t=e.subarray(r,s);n&&0===t.length||a.push(t),r=s+1}}function GN(e,t,n){const a=e.length,r=[];let s=0,i=0;const o=new Array(a);for(let u=0;u<a;++u){const a=r.length;VN(e[u],t,n,r);const l=r.length-a;o[u]=l,s+=l,i=Math.max(i,l)}const u=C("int32",2*s),l=new Array(s),c=[a,i];let h=0;for(let e=0;e<a;++e)for(let t=0;t<o[e];++t)u[2*h]=e,u[2*h+1]=t,l[h]=r[h],++h;return[u,l,c]}const HN={kernelName:Gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{skipEmpty:r}=a,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values[0],[l,c,h]=GN(o,u,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};function jN(e,t){const n=C("int32",e.length);for(let a=0;a<e.length;++a)n[a]=Aa(e[a]).modulo(t).getLowBitsUnsigned();return n}const qN={kernelName:Hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{numBuckets:r}=a,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=jN(n.data.get(s.dataId).values,r);return n.makeTensorInfo(s.shape,"int32",i)}},KN=Ux(qn,(e=>Math.tan(e))),XN={kernelName:qn,backendName:"cpu",kernelFunc:KN},YN=Ux(Kn,(e=>Math.tanh(e))),JN={kernelName:xn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{tensor:a,indices:r,updates:s}=t,{sliceRank:i,numUpdates:o,sliceSize:u,strides:l,outputSize:c}=hi(0,r,a.shape),h=n.bufferSync(r),d=n.bufferSync(s),p=n.bufferSync(a),f=ZS(h,d,a.shape,c,u,o,i,l,p,!1);return n.makeTensorInfo(a.shape,f.dtype,f.values)}};function ZN(e,t){const n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=e.shape[a]*t[a];const a=ks(n,e.dtype);for(let t=0;t<a.values.length;++t){const n=a.indexToLoc(t),r=new Array(e.rank);for(let t=0;t<r.length;t++)r[t]=n[t]%e.shape[t];const s=e.locToIndex(r);a.values[t]=e.values[s]}return a}const QN={kernelName:Xn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:s}=a;zx(r,"tile");const i=ZN(n.bufferSync(r),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},eC=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function tC(e,t,n=0,a=e.length-1){for(;a>n;){if(a-n>600){const r=a-n+1,s=t-n+1,i=Math.log(r),o=.5*Math.exp(2*i/3),u=.5*Math.sqrt(i*o*(r-o)/r)*Math.sign(s-r/2);tC(e,t,Math.max(n,Math.floor(t-s*o/r+u)),Math.min(a,Math.floor(t+(r-s)*o/r+u)))}const r=e[t];let s=n,i=a;for(d(e,n,t),eC(e[a],r)>0&&d(e,n,a);s<i;){for(d(e,s,i),s++,i--;eC(e[s],r)<0;)s+=1;for(;eC(e[i],r)>0;)i-=1}0===eC(e[n],r)?d(e,n,i):(i+=1,d(e,i,a)),i<=t&&(n=i+1),t<=i&&(a=i-1)}}function nC(e,t,n,a,r){const s=t[t.length-1],[i,o]=[e.length/s,s],u=N(n,i*a),l=N("int32",i*a);for(let t=0;t<i;t++){const n=t*o,s=e.subarray(n,n+o);let i=new Array(s.length);s.forEach(((e,t)=>i[t]={value:e,index:t})),a<i.length&&(tC(i,a),i=i.slice(0,a)),r&&i.sort(eC);const c=t*a,h=u.subarray(c,c+a),d=l.subarray(c,c+a);for(let e=0;e<a;e++)h[e]=i[e].value,d[e]=i[e].index}const c=t.slice();return c[c.length-1]=a,[ks(c,n,u),ks(c,"int32",l)]}const aC={kernelName:Yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:s,sorted:i}=a;zx(r,"topk");const o=n.data.get(r.dataId).values,[u,l]=nC(o,r.shape,r.dtype,s,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}},rC={kernelName:Jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{image:r,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=n,[c,h,d,p]=r.shape,[f,m]=null!=l?l:[h,d],b=[c,f,m,p],y=D(r.shape),x=y[0],w=y[1],k=y[2],v=D(b),I=v[0],S=v[1],C=v[2],$=N(r.dtype,g(b));$.fill(u);const T=a.data.get(r.dataId).values,_=a.data.get(s.dataId).values;for(let e=0;e<c;++e){const t=1===s.shape[0]?_:_.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let a=0;a<m;++a)for(let r=0;r<p;++r){let s;const l=t[6]*a+t[7]*n+1;if(0===l)continue;const c=(t[0]*a+t[1]*n+t[2])/l,p=(t[3]*a+t[4]*n+t[5])/l,f=sC(c,d,o),m=sC(p,h,o);switch(i){case"nearest":s=oC(T,h,d,x,w,k,e,m,f,r,u);break;case"bilinear":s=uC(T,h,d,x,w,k,e,m,f,r,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}$[e*I+n*S+a*C+r]=s}return a.makeTensorInfo(b,r.dtype,$)}return{dataId:a.write($,b,r.dtype),shape:r.shape,dtype:r.dtype}}};function sC(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return c(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return c(0,n,t-1)}(e,t);case"nearest":return function(e,t){return c(0,e,t-1)}(e,t);default:return e}}function iC(e,t,n,a,r,s,i,o,u,l,c){return 0<=o&&o<t&&0<=u&&u<n?e[i*a+o*r+u*s+l]:c}function oC(e,t,n,a,r,s,i,o,u,l,c){return iC(e,t,n,a,r,s,i,Math.round(o),Math.round(u),l,c)}function uC(e,t,n,a,r,s,i,o,u,l,c){const h=Math.floor(o),d=Math.floor(u),p=h+1,f=d+1;return(p-o)*((f-u)*iC(e,t,n,a,r,s,i,h,d,l,c)+(u-d)*iC(e,t,n,a,r,s,i,h,f,l,c))+(o-h)*((f-u)*iC(e,t,n,a,r,s,i,p,d,l,c)+(u-d)*iC(e,t,n,a,r,s,i,p,f,l,c))}function lC(e,t,n,a){const r=I(t,n)[0],s=[1,n[0],1];for(let e=0;e<r;e++)s[0]*=n[e];s[1]=n[r];for(let e=r+1;e<n.length;e++)s[2]*=n[e];const i=new Map,o=new Int32Array(n[r]),u=new Ja(s,a,e),l=[],c=1===s[0]&&1===s[2];for(let t=0;t<n[r];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<s[0];n++)for(let a=0;a<s[2];a++)e.push(u.get(n,t,a));n=e.join(",")}const a=i.get(n);if(null!=a)o[t]=a;else{const e=i.size;i.set(n,e),o[t]=e,l.push(t)}}const h=s.slice();h[1]=i.size;const d=new Ja(h,a);l.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let a=0;a<s[2];a++)d.set(u.get(n,e,a),n,t,a)}));const p=n.slice();return p[r]=h[1],{outputValues:d.values,outputShape:p,indices:o}}const cC={kernelName:Qn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:s}=t;zx(s,"unique");const i=a.data.get(s.dataId).values,{outputValues:o,outputShape:u,indices:l}=lC(i,r,s.shape,s.dtype);return[a.makeTensorInfo(u,s.dtype,o),a.makeTensorInfo([l.length],"int32",l)]}},hC={kernelName:ea,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:r}=t;let{axis:s}=a;s<0&&(s+=r.shape.length);const i=r.shape.length,o=r.shape[s],u=new Array(i-1);let l=0;for(let e=0;e<i;e++)e!==s&&(u[l++]=r.shape[e]);const c=new Array(i).fill(0),h=r.shape.slice();h[s]=1;const d=new Array(o);for(let e=0;e<d.length;e++){c[s]=e;const t=ok({inputs:{x:r},backend:n,attrs:{begin:c,size:h}});d[e]=vw({inputs:{x:t},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(t)}return d}},dC={kernelName:ta,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:s}=t,{numSegments:i}=a;zx(r,"unsortedSegmentSum");const o=[],u=[],l=r.shape.length-s.shape.length;let c=s;for(let e=0;e<l;++e){const t=wv({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,u.push(t)}for(let e=0;e<i;++e){const t=Fa(e,"int32"),a=n.makeTensorInfo([],"int32",t),s=ov({inputs:{a,b:c},backend:n}),i=fw({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),l=ev({inputs:{a:i,b:r},backend:n}),h=nv({inputs:{x:l},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),u.push(a),u.push(s),u.push(i),u.push(l),u.push(h)}const h=bS({inputs:o,backend:n,attrs:{axis:0}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},pC=[Cw,Tw,Ew,Aw,kw,Fw,Lw,zw,Pw,Ww,Uw,Gw,jw,Xw,Jw,tk,nk,ak,rk,Nw,sk,lk,dk,fk,mk,mw,yk,wk,lw,kk,Ck,Tk,_k,Ek,Rk,Ak,Fk,Mk,Lk,zk,Pk,Wk,Bk,Uk,Gk,Hk,jk,qk,Kk,Xk,Yk,Jk,rv,Hx,sv,uv,gv,xv,kv,Sv,Mv,Lv,zv,Bv,Gv,Hv,jv,Kv,Yv,Qv,nI,qx,aI,Sk,sI,oI,lI,Xx,dI,mI,bI,wI,vI,NI,$I,EI,RI,AI,MI,zI,PI,WI,BI,UI,VI,GI,HI,KI,XI,ZI,tS,tv,aS,sS,oS,lS,dS,pS,gS,yS,xS,vS,Qx,SS,$S,ES,OS,zS,dw,$v,WS,tw,aw,Iw,BS,US,VS,GS,HS,jS,KS,JS,QS,nN,aN,oN,iw,lN,hN,pN,uk,eS,gN,bN,xN,kN,IN,SN,NN,CN,_N,EN,FN,MN,LN,PN,UN,HN,qN,Rv,av,XN,{kernelName:Kn,backendName:"cpu",kernelFunc:YN},JN,QN,aC,rC,Ow,cC,hC,dC,mS];for(const e of pC)ma(e);const fC={},mC={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function gC(e,t){if(!(e in fC)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if(q().getBool("IS_SAFARI")||"undefined"==typeof OffscreenCanvas||2!==e){if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete fC[e]}),!1),q().getBool("SOFTWARE_WEBGL_ENABLED")&&(mC.failIfMajorPerformanceCaveat=!1),1===e?n.getContext("webgl",mC)||n.getContext("experimental-webgl",mC):n.getContext("webgl2",mC)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;fC[e]=n}const n=fC[e];return null==n||n.isContextLost()?(delete fC[e],gC(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),fC[e])}var bC,yC,xC;function wC(e,t){return[t,e]}function kC(e){const t=g(e);return x(Math.ceil(t/4))}function vC(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function IC(e,t){const n=e;let a,r,s,i,o,u,l,c,h,d;return 2===q().getNumber("WEBGL_VERSION")?(a=n.R32F,r=n.R16F,s=n.RGBA16F,i=n.RGBA32F,o=n.RED,l=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT,u=n.RGBA8):(a=e.RGBA,r=e.RGBA,s=e.RGBA,i=n.RGBA,o=e.RGBA,l=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,u=e.RGBA),{internalFormatFloat:a,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function SC(e,t){const n=t();return q().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function NC(e){return!!(q().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function CC(e,t){return MC(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(bC||(bC={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(yC||(yC={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(xC||(xC={}));const $C=/ERROR: [0-9]+:([0-9]+):/g;function TC(e,t){const n=$C.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const a=+n[1],r=e.split("\n"),s=r.length.toString().length+2,i=r.map(((e,t)=>w((t+1).toString(),s)+e));let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const u=i.slice(0,a-1),l=i.slice(a-1,a),c=i.slice(a);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${w(l[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function _C(e,t){if(SC(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function EC(e,t,n,a,r,s,i){const o=e.getAttribLocation(t,n);return-1!==o&&(SC(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,a))),SC(e,(()=>e.vertexAttribPointer(o,r,e.FLOAT,!1,s,i))),SC(e,(()=>e.enableVertexAttribArray(o))),!0)}function RC(e,t,n,a){SC(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,a=t+e.TEXTURE0;if(a<e.TEXTURE0||a>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),SC(e,(()=>e.activeTexture(e.TEXTURE0+n))),SC(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,a))),SC(e,(()=>e.uniform1i(n,a)))}function AC(e,t,n){SC(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),SC(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function FC(e,t){SC(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),SC(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function DC(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function MC(e,t,n){const a=SC(e,(()=>t()));if(null==a)throw new Error(n);return a}function OC(e,t=2){return g(e.slice(0,e.length-t))}function LC(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function zC(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[OC(e),...LC(e)]),t}function PC(e){return e%2==0}function WC(e,t){if(b(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],a=t[t.length-1];if(n===a)return!0;if(PC(n)&&PC(a)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&PC(e[0])&&PC(t[0])}let BC,UC;function VC(e,t){return null!=e.getExtension(t)}function GC(e){try{if(null!=gC(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function HC(e){const t=IC(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),r}function jC(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&p("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const qC=q();function KC(){let e,t,n,a,r,s,i,o,u,l;return 2===q().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",a="in",r="texture",s="outputColor",i="out vec4 outputColor;",o=q().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",a="varying",r="texture2D",s="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:a,texture2D:r,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:l}}function XC(e,t,n="index"){const a=D(t);return a.map(((t,r)=>`int ${e[r]} = ${n} / ${t}; ${r===a.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${t}`:`index -= ${e[r]} * ${t}`};`)).join("")}function YC(e,t,n="index"){const a=D(t);return a.map(((t,r)=>`int ${e[r]} = ${n} / outShapeStrides[${r}]; ${r===a.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * outShapeStrides[${r}]`:`index -= ${e[r]} * outShapeStrides[${r}]`};`)).join("")}function JC(e){const t=D(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}qC.registerFlag("HAS_WEBGL",(()=>qC.getNumber("WEBGL_VERSION")>0)),qC.registerFlag("WEBGL_VERSION",(()=>GC(2)?2:GC(1)?1:0)),qC.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),qC.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===qC.get("WEBGL_VERSION"))),qC.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),qC.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),qC.registerFlag("WEBGL_PACK",(()=>qC.getBool("HAS_WEBGL"))),qC.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>qC.getBool("WEBGL_PACK"))),qC.registerFlag("WEBGL_PACK_CLIP",(()=>qC.getBool("WEBGL_PACK"))),qC.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>qC.getBool("WEBGL_PACK"))),qC.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>qC.getBool("WEBGL_PACK"))),qC.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>qC.getBool("WEBGL_PACK"))),qC.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>qC.getBool("WEBGL_PACK"))),qC.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>qC.getBool("WEBGL_PACK"))),qC.registerFlag("WEBGL_PACK_REDUCE",(()=>qC.getBool("WEBGL_PACK"))),qC.registerFlag("WEBGL_LAZILY_UNPACK",(()=>qC.getBool("WEBGL_PACK"))),qC.registerFlag("WEBGL_CONV_IM2COL",(()=>qC.getBool("WEBGL_PACK"))),qC.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>qC.getBool("WEBGL_PACK"))),qC.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==BC){const t=gC(e);BC=t.getParameter(t.MAX_TEXTURE_SIZE)}return BC}(qC.getNumber("WEBGL_VERSION")))),qC.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==UC){const t=gC(e);UC=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,UC)}(qC.getNumber("WEBGL_VERSION")))),qC.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=qC.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=gC(e);return t=VC(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:VC(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),qC.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>qC.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Sr())),qC.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=gC(e);if(1===e){if(!VC(t,"OES_texture_float"))return!1}else if(!VC(t,"EXT_color_buffer_float"))return!1;return HC(t)}(qC.getNumber("WEBGL_VERSION")))),qC.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!qC.getBool("WEBGL_FORCE_F16_TEXTURES")&&qC.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),qC.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=gC(e);if(1!==e){if(VC(t,"EXT_color_buffer_float"))return HC(t);const e="EXT_color_buffer_half_float";if(VC(t,e)){const n=t.getExtension(e);return function(e,t){const n=IC(e,t),a=e.createTexture();e.bindTexture(e.TEXTURE_2D,a),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,a,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(a),e.deleteFramebuffer(r),s}(t,n)}return!1}return!!VC(t,"OES_texture_float")&&!!VC(t,"WEBGL_color_buffer_float")&&HC(t)}(qC.getNumber("WEBGL_VERSION")))),qC.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=qC.getNumber("WEBGL_VERSION"))&&null!=gC(e).fenceSync;var e})),qC.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>qC.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),qC.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if("number"!=typeof e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),qC.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>Sr()?1:-1),(e=>{if("number"!=typeof e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),qC.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),qC.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),qC.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),qC.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),qC.registerFlag("WEBGL_EXP_CONV",(()=>!1)),qC.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>qC.getBool("IS_TEST"))),qC.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),qC.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),qC.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),qC.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const ZC="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:QC}=r;function e$(e,t,n){const a=[];if(e.forEach((e=>{const t=g(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?a.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(a.push(`uniform sampler2D ${e.name};`),a.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=c$(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:a.push(`uniform int ${e.name}Shape;`);break;case 2:a.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:a.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:a.push(`uniform ivec4 ${e.name}Shape;`)}a.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:a.push("uniform int outShape;");break;case 2:a.push("uniform ivec2 outShape;"),a.push("uniform int outShapeStrides;");break;case 3:a.push("uniform ivec3 outShape;"),a.push("uniform ivec2 outShapeStrides;");break;case 4:a.push("uniform ivec4 outShape;"),a.push("uniform ivec3 outShapeStrides;")}a.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{a.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const r=a.join("\n"),s=e.map((e=>function(e,t,n=!1,a){let r="";r+=n?n$(e,a):t$(e,a);const s=e.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(r+=n?function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=QC(e.shapeInfo.logicalShape,t.logicalShape),u=l$(i),l=i-s;let c;const h=["x","y","z","w","u","v"];c=0===s?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+l]} = 0;`)).join("\n");let d="";d=i<2&&s>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+l]}`)).join(", ");let p="return outputValue;";const f=1===g(e.shapeInfo.logicalShape),m=1===g(t.logicalShape);if(1!==s||f||m){if(f&&!m)p=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=s-2,t=s-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${r}() {\n      ${u} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${a}(${d});\n      ${p}\n    }\n  `}(e,t):function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===u&&null==e.shapeInfo.flatOffset&&b(i,s))return`\n      float ${r}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=l$(u),c=QC(e.shapeInfo.logicalShape,t.logicalShape),h=u-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":u<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${p[e+h]} = 0;`)).join("\n");let f="";return f=u<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+h]}`)).join(", "),`\n    float ${r}() {\n      ${l} coords = getOutputCoords();\n      ${d}\n      return get${a}(${f});\n    }\n  `}(e,t)),r}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=t.texShape,o=KC(),u=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let l,c,h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${a$}\n    ${r$}\n    ${s$}\n  `}(o);return t.isPacked?(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===a[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${a[1]}.0);\n      }\n    `:1===a[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${a[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n      return 2 * (resTexRC.x * ${a[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(b(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${a[0]}, ${a[1]}));\n      }\n    `;const r=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n\n      int index = resTexRC.x * ${a[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),s=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n      int index = resTexRC.x * ${a[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),s=r*Math.ceil(e[e.length-2]/2);let i=s,o="",u="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,u=`b${t}, `+u;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n      int index = resTexRC.x * ${a[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${u});\n    }\n  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return b(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${YC(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const a=XC(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${a}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${YC(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const a=XC(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${a}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=XC(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=XC(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(h+=i$),[h,u,c,r,l,s,n.userCode].join("\n")}function t$(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${a}() {return ${n};}`;const[r,s]=e.shapeInfo.texShape;if(1===r&&1===s)return`\n      float ${a}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=o$(n);if(t)return`\n    float ${a}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,u]=e.shapeInfo.texShape;return`\n    float ${a}() {\n      vec2 uv = uvFromFlat(${o}, ${u}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${a}(int index) {\n        ${u$(e)}\n      }\n    `;const r=e.shapeInfo.texShape,s=r[0],i=r[1];if(1===i&&1===s)return`\n      float ${a}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=o$(n);return 1===i?t?`\n      float ${a}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${a}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===s?t?`\n      float ${a}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${a}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${a}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${a}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape;if(null!=s&&b(n,s)){if(t)return`\n      float ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `;const e=s[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${e}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=S(n),u=i;if(u.length<n.length){const n=["row","col"];return`\n      ${t$(h$(e,u),t)}\n      float ${r}(int row, int col) {\n        return ${r}(${d$(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${u$(e)}\n      }\n    `;const l=s[0],c=s[1],h=o$(a);return 1===c?t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${a}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${a}TexShape[0]));\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `:1===l?t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${a}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${a}TexShape[1]), 0.5);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${a}, uv);\n    }\n  `:t?`\n      float ${r}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${l}, ${c}, index);\n    return sampleTexture(${a}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=n[1]*n[2],i=n[2],{newShape:o,keptDims:u}=S(n),l=o;if(l.length<n.length){const n=["row","col","depth"];return`\n        ${t$(h$(e,l),t)}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${d$(n,u)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${i}, 1)));\n        ${u$(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],d=c[1],p=e.shapeInfo.flatOffset;if(d===s&&null==p)return t?`\n      float ${r}(int row, int col, int depth) {\n        int stride1 = ${a}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${a}, uv);\n        }\n      `;if(d===i&&null==p)return t?`\n      float ${r}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${a}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `;const f=o$(a);return t?`\n    float ${r}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${a}Shape[1] * ${a}Shape[2];\n      int stride1 = ${a}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);\n      return sampleTexture(${a}, uv);\n    }\n    `:`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${a}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=n[3],i=n[2]*s,o=n[1]*i,{newShape:u,keptDims:l}=S(n);if(u.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${t$(h$(e,u),t)}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${d$(n,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${s}, 1)));\n        ${u$(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${a}Shape[3];`,m=`int stride1 = ${a}Shape[2] * stride2;`,g=`int stride0 = ${a}Shape[1] * stride1;`;if(p===o&&null==c)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${a}, uv);\n      }\n    `;if(p===s&&null==c)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${a}Shape[1] * ${a}Shape[2], ${a}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${a}, uv);\n      }\n    `;const b=o$(a);return t?`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index + ${b});\n      return sampleTexture(${a}, uv);\n    }\n  `:`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${b});\n      return sampleTexture(${a}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],s=t[3]*r,i=t[2]*s,o=t[1]*i,{newShape:u,keptDims:l}=S(t);if(u.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${t$(h$(e,u))}\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        return ${a}(${d$(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${s}, ${r})) +\n          depth3;\n        ${u$(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${s}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===r&&null==c)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${a}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${s} +\n          depth2 * ${r} + depth3 + ${o$(n)};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:s}=S(t);if(r.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${t$(h$(e,r))}\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${a}(${d$(t,s)});\n      }\n    `}const i=t[5],o=t[4]*i,u=t[3]*o,l=t[2]*u,c=t[1]*l;if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${l}, ${u}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${u$(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${u}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${a}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${l} + depth * ${u} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${o$(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function n$(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${KC().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,s=KC();if(t)return`\n    vec4 ${a}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`\n    vec4 ${a}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],u=KC();if(null!=s&&b(n,s))return t?`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n\n        return ${u.texture2D}(${a}, uv);\n      }\n    `:`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${u.texture2D}(${a}, uv);\n      }\n    `;if(t)return`\n    vec4 ${r}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${a}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${u.texture2D}(${a}, uv);\n    }\n  `;const l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${l[0]}, ${l[1]}, row, col);\n      return ${u.texture2D}(${a}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){const a=[1,2],s=["b","row","col"];return`\n        ${n$(h$(e,n.slice(1)),t)}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${d$(s,a)});\n        }\n      `}const o=KC();if(t)return`\n    vec4 ${r}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${a}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${a}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${a}, uv);\n    }\n  `;const u=i[0],l=i[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${u}, ${l}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${o.texture2D}(${a}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=KC();if(t)return`\n    vec4 ${a}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${n}, uv);\n    }\n  `;const s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=u[0],c=u[1],h=Math.ceil(s[i-1]/2);let d=h*Math.ceil(s[i-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let e=2;e<i-1;e++)p=`int b${e}, `+p,d*=s[i-e-1],f=`b${e} * ${d} + `+f;return`\n    vec4 ${a}(${p}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});\n      return ${r.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const a$="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",r$="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",s$="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",i$="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function o$(e){return`offset${e}`}function u$(e){const t=e.name,n=g(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function l$(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function c$(e,t,n){const{newShape:a,keptDims:r}=S(t),s=t.length,i=e&&3===s&&1===t[0],o=i?t.slice(1):a,u=!e&&s>1&&!b(t,n)&&a.length<s||i;return{useSqueezeShape:u,uniformShape:u?o:t,keptDims:r}}function h$(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function d$(e,t){return t.map((t=>e[t])).join(", ")}function p$(e,t,n){const a=[],r=[];let s,i,o,u=null,l=null;l=e.getUniformLocation(n,"NAN",!1),1===q().getNumber("WEBGL_VERSION")&&(u=e.getUniformLocation(n,"INFINITY",!1));const c=!1;for(const r of t.variableNames){const s={name:r,uniform:e.getUniformLocation(n,r,c),offset:e.getUniformLocation(n,`offset${r}`,c)};t.enableShapeUniforms&&(s.shape=e.getUniformLocation(n,`${r}Shape`,c),s.texShape=e.getUniformLocation(n,`${r}TexShape`,c)),a.push(s)}if(t.enableShapeUniforms&&(s=e.getUniformLocation(n,"outShape",c),o=e.getUniformLocation(n,"outShapeStrides",c),i=e.getUniformLocation(n,"outTexShape",c)),t.customUniforms)for(const a of t.customUniforms)r.push(e.getUniformLocation(n,a.name,c));return{variablesLocations:a,customUniformLocations:r,infLoc:u,nanLoc:l,outShapeLocation:s,outShapeStridesLocation:o,outTexShapeLocation:i}}function f$(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const a=e.logicalShape,r=t[n],s=r.shape;if(!b(a,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${a} and ${s} must match`);if(e.isUniform&&r.isUniform)return;const i=e.texShape,o=r.isUniform?null:r.texData.texShape;if(!b(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function m$(e){return q().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class g${constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=bC.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=KC();this.outputShape=e,this.enableShapeUniforms=m$(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?YC(["r","c","d"],e):XC(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class b${constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=bC.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=KC();this.outputShape=e,this.enableShapeUniforms=m$(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?YC(["r","c","d"],e):XC(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class y${constructor(e){this.variableNames=["A"],this.outTexUsage=yC.DOWNLOAD;const t=KC();this.outputShape=e,this.userCode=`\n      ${ZC}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class x${constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=yC.DOWNLOAD;const t=KC();this.outputShape=e,this.userCode=`\n      ${ZC}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}const w$={R:0,G:1,B:2,A:3};class k${constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const a=KC();this.outputShape=e,this.enableShapeUniforms=m$(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)");let s="";for(let e=0;e<n.length;e++){const t=n[e];s+=`\n          if(offset == ${e}) {\n            result = values[${w$[t]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":JC(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${a.texture2D}(A, uv);\n          ${s}\n        }\n        ${a.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}class v${constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=KC();this.outputShape=e,this.enableShapeUniforms=m$(this.outputShape.length);let a="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let r=0;r<=1;r++){const s=2*t+r;a+=`\n          localCoords = coords;\n          if(localCoords[2] + ${r} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${r};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":JC(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${a}\n\n          ${n.output} = ${r};\n        }\n    `}}function I$(e,t,n,a,r,s){!function(e,t){const n=q().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return MC(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return SC(e,(()=>e.bindTexture(o,i))),SC(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),SC(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),SC(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),SC(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===q().getNumber("WEBGL_VERSION")?SC(e,(()=>e.texImage2D(o,0,a,t,n,0,r,s,null))):SC(e,(()=>e.texStorage2D(o,1,a,t,n))),SC(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function S$(e){return e.internalFormatFloat}function N$(e){return e.internalFormatHalfFloat}function C$(e){return e.downloadTextureFormat}function $$(e){return e.internalFormatPackedFloat}function T$(e){return e.internalFormatPackedHalfFloat}class _${constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=q().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,function(e,t){fC[e]=t}(t,e)):this.gl=gC(t),e=this.gl,2===q().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>SC(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>SC(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>SC(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>SC(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>SC(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>SC(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>SC(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>SC(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const a="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===q().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=CC(this.gl,e),VC(this.gl,t))this.textureHalfFloatExtension=CC(this.gl,t);else if(q().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),VC(this.gl,a))this.colorBufferHalfFloatExtension=CC(this.gl,a);else if(q().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",VC(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!VC(this.gl,a))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(a)}this.vertexBuffer=function(e){return function(e,t){const n=MC(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return SC(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),SC(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=MC(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return SC(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),SC(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return MC(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=IC(this.gl,this.textureHalfFloatExtension)}get debug(){return q().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;SC(e,(()=>e.finish())),SC(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),SC(e,(()=>e.deleteFramebuffer(this.framebuffer))),SC(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),SC(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),SC(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=wC(t,n);return I$(e,r,s,S$(a),a.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=wC(t,n);return I$(e,r,s,N$(a),a.textureFormatFloat,a.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=wC(t,n);return I$(e,r,s,C$(a),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){SC(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===q().getNumber("WEBGL_VERSION")?SC(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):SC(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===q().getNumber("WEBGL_VERSION")?SC(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):SC(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),SC(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,a){this.throwIfDisposed(),function(e,t,n,a,r,s){let i,o,u;SC(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),r instanceof Uint8Array?(i=new Uint8Array(n*a*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(i=new Float32Array(n*a*4),o=e.FLOAT,u=s.internalFormatPackedFloat),i.set(r),2===q().getNumber("WEBGL_VERSION")?SC(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,a,e.RGBA,o,i))):SC(e,(()=>e.texImage2D(e.TEXTURE_2D,0,u,n,a,0,e.RGBA,o,i))),SC(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,a,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=vC(t,n);return I$(e,r,s,T$(a),e.RGBA,a.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=vC(t,n);return I$(e,r,s,$$(a),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(FC(this.gl,this.framebuffer),this.outputTexture=null),SC(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,a){const[r,s]=wC(t,n),i=new Uint8Array(t*n*4);return SC(e,(()=>e.readPixels(0,0,r,s,a.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,a,r,s){return function(e,t,n,a,r,s,i){const o=e,u=new Float32Array(function(e,t){const[n,a]=vC(e,t);return n*a*4}(s,i));return o.bindBuffer(o.PIXEL_PACK_BUFFER,t),o.getBufferSubData(o.PIXEL_PACK_BUFFER,0,u),o.bindBuffer(o.PIXEL_PACK_BUFFER,null),u}(this.gl,e,0,0,0,r,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const a=e,r=new Float32Array(n);return a.bindBuffer(a.PIXEL_PACK_BUFFER,t),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,r),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),r}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const a=function(e,t,n){const a=e.createBuffer();SC(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));const r=16*t*n;return SC(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,r,e.STREAM_READ))),SC(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),SC(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(q().getBool("WEBGL_FENCE_API_ENABLED")){const a=e,r=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=a.clientWaitSync(r,0,0);return e===a.ALREADY_SIGNALED||e===a.CONDITION_SATISFIED},t=r}else q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const a=new Float32Array(t*n*4);return SC(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,a))),a}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=function(e){const t=KC();return function(e,t){const n=MC(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(SC(e,(()=>e.shaderSource(n,t))),SC(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const n=function(e){return MC(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);SC(t,(()=>t.attachShader(n,this.vertexShader))),SC(t,(()=>t.attachShader(n,e))),function(e,t){if(SC(e,(()=>e.linkProgram(t))),!q().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n);const a=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&_C(t,a),a}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;SC(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),function(e,t,n){SC(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),EC(e,t,"clipSpacePos",n,3,20,0)&&EC(e,t,"uv",n,2,20,12)}(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(SC(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&_C(this.gl,this.program),SC(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return MC(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),SC(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),RC(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[a,r]=vC(t,n);this.setOutputMatrixTextureDriver(e,a,r)}setOutputMatrixWriteRegion(e,t,n,a){this.setOutputMatrixWriteRegionDriver(n,e,a,t)}setOutputPackedMatrixWriteRegion(e,t,n,a){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&_C(this.gl,this.program),DC(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}SC(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),SC(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=CC(this.gl,2===q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await k((()=>this.disposed||this.isQueryAvailable(e,q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),a=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),a&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in q().platform&&(n=q().platform.setTimeoutCustom.bind(q().platform)),k((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),AC(this.gl,e,this.framebuffer),this.debug&&DC(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(AC(this.gl,this.outputTexture,this.framebuffer),this.debug&&DC(this.gl)):FC(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const a=this.gl;AC(a,e,this.framebuffer),this.debug&&DC(a),this.outputTexture=e,SC(a,(()=>a.viewport(0,0,t,n))),SC(a,(()=>a.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,a){this.throwIfDisposed(),SC(this.gl,(()=>this.gl.scissor(e,t,n,a)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{mx:E$,XI:R$,Nk:A$,f6:F$,ct:D$,YG:M$,hH:O$,z3:L$,sG:z$,uM:P$,vS:W$,qB:B$,GG:U$,rq:V$,lg:G$,WR:H$,cu:j$,GE:q$,px:K$,jC:X$,He:Y$,hE:J$,BF:Z$,Dk:Q$,cl:eT,_B:tT,ub:nT,_f:aT,Ku:rT,qy:sT,Zy:iT,bu:oT,zv:uT,dH:lT,HS:cT,yH:hT,l3:dT,z9:pT,x6:fT,_m:mT,eW:gT,GK:bT,SP:yT,yr:xT,dl:wT,Dw:kT,xT:vT,_X:IT,wz:ST}=s;function NT(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function CT(e,t){return 1===t?[e]:NT(e,t)}class $T{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=m$(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=CT("rc",this.rank),t=l$(this.rank),n=this.getOutOfBoundsCondition(e),a=this.getSetup(e),r=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${a}\n\n            setOutput(vec4(${r}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let a=0;a<=1;a++){let r=`${0===n?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let t=2;t<this.rank;t++)r=`${e[e.length-1-t]},`+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],a=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${a};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class TT{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=m$(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var a,r;this.userCode=`\n      ${a=t,r=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${r?function(e,t,n="index"){const a=function(e,t){const n=e.length,a=e.map((e=>`${t}[${e}]`)),r=new Array(n-1);r[n-2]=a[n-1];for(let e=n-3;e>=0;--e)r[e]=`(${r[e+1]} * ${a[e+1]})`;return r}(e.map(((e,t)=>t)),t);return a.map(((t,r)=>`int ${e[r]} = ${n} / ${a[r]}; ${r===a.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${a[r]}`:`index -= ${e[r]} * ${a[r]}`};`)).join("")}(["r","c","d"],"inputShape"):XC(["r","c","d"],a)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":JC(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class _T{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const a=RT(t,n),r=AT(e,a,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const s=ET(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[r].pop();return this.usedTextures[r].push(e),e}let i;return a===xC.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):a===xC.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):a===xC.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):a===xC.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):a===xC.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,n,a){if(null==this.freeTextures)return;const r=RT(n,a),s=AT(t,r,a);s in this.freeTextures||(this.freeTextures[s]=[]);const i=ET(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,a),o=q().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[s],l=u&&u.indexOf(e);if(null==l||l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[l]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function ET(e,t,n,a,r){const s=function(e,t){switch(e){case xC.PACKED_2X2_FLOAT32:return $$(t);case xC.PACKED_2X2_FLOAT16:return T$(t);case xC.UNPACKED_FLOAT32:return S$(t);case xC.UNPACKED_FLOAT16:return N$(t);case xC.PACKED_4X1_UNSIGNED_BYTE:return C$(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,a);let i;if(r){const[t,n]=vC(e[0],e[1]);i=t*n}else{const[t,n]=wC(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,s);return i*o}function RT(e,t){if(e===yC.UPLOAD)return xC.PACKED_2X2_FLOAT32;if(e===yC.RENDER||null==e)return function(e){return q().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?xC.PACKED_2X2_FLOAT32:xC.UNPACKED_FLOAT32:e?xC.PACKED_2X2_FLOAT16:xC.UNPACKED_FLOAT16}(t);if(e===yC.DOWNLOAD||e===yC.PIXELS)return xC.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function AT(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class FT{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=m$(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const DT="if (isnan(x)) return x;",MT="return x;",OT="return abs(x);",LT="return (x >= 0.0) ? x : (exp(x) - 1.0);",zT=DT+"\n  return (x < 0.0) ? 0.0 : x;\n",PT=DT+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",WT="return x;",BT="return 1.0 / (1.0 + exp(-1.0 * x));",UT="return x;",VT="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",GT="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",HT="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",jT="return 1.0 / (1.0 + exp(-1.0 * x));";class qT{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=m$(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class KT{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=m$(this.outputShape.length);const t=e.length,n=CT("rc",t),a=l$(t),r=function(e,t){if(1===e)return"rc";let n="";for(let a=0;a<e;a++)n+=t[a],a<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${a} rc = getOutputCoords();\n        vec4 packedInput = getA(${r});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const XT=Gc,YT={},JT=q().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class ZT extends o{nextDataId(){return ZT.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!q().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof _$)t=e;else{const n=gC(q().getNumber("WEBGL_VERSION"),e);t=new _$(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=gC(q().getNumber("WEBGL_VERSION"));t=new _$(e),this.binaryCache=((n=q().getNumber("WEBGL_VERSION"))in YT||(YT[n]={}),YT[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new _T(this.gpgpu),this.numMBBeforeWarning=null==q().global.screen?1024:q().global.screen.height*q().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new i(this,Lr())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,a,r,s){const i=this.makeTensorInfo(t,n),o=this.texData.get(i.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[a,r]},o.texShape=[a,r];const u=zC(t),l=new k$(u,!1,s),c=this.runWebGLProgram(l,[i],n,[[a,r]]);return c.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(i),c.dataId}write(e,t,n){if((q().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||q().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.texData.set(a,{shape:t,dtype:n,values:e,usage:yC.UPLOAD,refCount:1}),a}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,a,r){if(q().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:a,values:t,usage:yC.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:a,complexTensorInfos:r,slice:s,shape:i,isPacked:o}=t;if(null!=s){let t;t=o?new qT(i,WT):new FT(i,WT);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:a}],a),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===a)return n;const u=null!=this.activeTimers;let l,c;return u&&(l=Ma()),c="complex64"===a?uc(this.readSync(r.real.dataId),this.readSync(r.imag.dataId)):this.getValuesFromTexture(e),u&&(this.downloadWaitMs+=Ma()-l),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:a,slice:r,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(null!=r){let t;t=o?new qT(a,WT):new FT(a,WT);const n=this.runWebGLProgram(t,[{dataId:e,shape:a,dtype:s}],s),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if(q().getBool("DEBUG")&&!q().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===q().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,c=null;if("complex64"!==s&&q().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...kC(a))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);l=uc(e[0],e[1])}else if(null==c)l=this.getValuesFromTexture(e);else{const e=g(a);l=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=u&&this.disposeIntermediateTensorInfo(u),null!=c){const e=this.gpgpu.gl;SC(e,(()=>e.deleteBuffer(c)))}const h=this.convertAndCacheOnCPU(e,l),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Lr().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const n=this.texData.get(e),{values:a,shape:r,slice:s,dtype:i,isPacked:o,texture:u}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=s){let n;n=o?new qT(r,WT):new FT(r,WT);const a=this.runWebGLProgram(n,[{dataId:e,shape:r,dtype:i}],i),s=this.readToGPU(a,t);return this.disposeIntermediateTensorInfo(a),s}if(null==u)throw null!=a?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(e,t.customTexShape),c=Lr().makeTensorFromTensorInfo(l),h=this.texData.get(l.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>La(e)));return ks(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return ks(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!NC(n)){if(q().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:a}=this.texData.get(e),r=g(t);if(q().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),a=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(a.texture.texture,...kC(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),s}const s=q().getBool("WEBGL_PACK")&&!0===a,i=s?zC(t):t,o=s?new x$(i):new y$(i),u=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),l=this.texData.get(u.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(u),c}timerAvailable(){return q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e();const r=Pa(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=Pa(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,a&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(r);i.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Ma(),endMs:null}}endTimer(e){return q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Ma(),e)}async getQueryTime(e){if(q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:a,usage:r,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(a,n),this.textureManager.releaseTexture(t,a,r,s)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=JT){return q().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&g(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){ua("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return XT(e.shape,t)}packedUnaryOp(e,t,n){const a=new qT(e.shape,t),r=this.compileAndRun(a,[e],n);return Lr().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=lT(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(q().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,OT,e.dtype);const t=new FT(e.shape,OT),n=this.compileAndRun(t,[e]);return Lr().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&_(n[0])){const r=n.map((e=>Oa(e)));a=this.write(r,e,t)}else a=this.write(n,e,t);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:t}}makeOutput(e,t,n){return Lr().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new KT(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new $T(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[OC(e.shape),...LC(e.shape)],a={dtype:e.dtype,shape:n,dataId:e.dataId},r=[OC(t),...LC(t)],s=new TT(r,n),i=[n],o=this.runWebGLProgram(s,[a],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:a,shape:r,dtype:s}=n;null!=t&&p(g(r)<=t[0]*t[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."));const i=zC(r);let o;o=a?new b$(i):new g$(i);const u=[null!=t?t:kC(i)];return{dtype:s,shape:r,dataId:this.runWebGLProgram(o,[{shape:i,dtype:s,dataId:e}],s,u,!0,t).dataId}}runWebGLProgram(e,t,n,a,r=!1,s){const i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===bC.DENSE){const t=null!=s?s:kC(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===g(i.shape))return o.values=N(i.dtype,0),i;const u=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&g(t.shape)<=q().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!WC(n.shape,t.shape)){const e=t,a=t.shape;t.shape=n.shape,t=this.packedReshape(t,a),u.push(t),n=this.texData.get(t.dataId),e.shape=a}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const c={shape:i.shape,texData:o,isUniform:!1},h=function(e,t,n){let a="";t.concat(n).forEach((t=>{const r=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const s=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:u}=c$(e.packedInputs,t.shape,s);let l="",c="",h="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];l=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=D(o);h=`${e[0]===s[1]}_${e[e.length-1]===s[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const d=t.shape.length,p=2===o.length&&b(t.shape,s),f=1===g(t.shape),m=js(t.shape,n.shape),y=!e.packedInputs&&d===n.shape.length&&b(s,n.texData.texShape),x=e.packedInputs||o.length>2?"":`${s[0]>1}_${s[1]>1}`;a+=`${d}_${y}_${i?u:""}_${o.length}_${f}_${m}_${p}_${l}_${c}_${h}_${x}_${r}`}else{const e=t.isUniform?"uniform":t.texData.texShape;a+=`${t.shape}_${e}_${r}`}}));const r=e.userCode;let s=e.constructor.name;return s+="_"+a+"_"+r+`${q().getNumber("WEBGL_VERSION")}`,s}(e,l,c),d=this.getAndSaveBinary(h,(()=>function(e,t,n,a){const r=n.map(((e,n)=>{const a={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(a.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:a}})),s=r.map((e=>e.shapeInfo)),i={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},o=e$(r,i,t),u=function(e,t){const n=MC(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(SC(e,(()=>e.shaderSource(n,t))),SC(e,(()=>e.compileShader(n))),q().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw TC(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,o),l=e.createProgram(u);return q().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:u,source:o,webGLProgram:l,inShapeInfos:s,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(l),Object.assign({program:t,fragmentShader:u,source:o,webGLProgram:l,inShapeInfos:s,outShapeInfo:i},p$(e,t,l)))}(this.gpgpu,e,l,c))),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),q().get("ENGINE_COMPILE_ONLY")||function(e,t,n,a,r){t.program.enableShapeUniforms||(f$(t.inShapeInfos,n),f$([t.outShapeInfo],[a]));const s=a.texData.texture,i=a.texData.texShape;a.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):e.setOutputMatrixTexture(s.texture,i[0],i[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===q().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let a=0;a<n.length;++a){const r=n[a],{uniform:s,offset:i,shape:o,texShape:u}=t.variablesLocations[a];if(o){const{uniformShape:n}=c$(t.program.packedInputs,r.shape,r.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(o,new Int32Array(n));break;case 2:e.gl.uniform2iv(o,new Int32Array(n));break;case 3:e.gl.uniform3iv(o,new Int32Array(n));break;case 4:e.gl.uniform4iv(o,new Int32Array(n))}}if(u&&e.gl.uniform2i(u,r.texData.texShape[0],r.texData.texShape[1]),null!=s)if(r.isUniform)if(g(r.shape)<2)e.gl.uniform1f(s,r.uniformValues[0]);else{let t=r.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}else null!=r.texData.slice&&null!=i&&e.gl.uniform1i(i,r.texData.slice.flatOffset),e.setInputMatrixTexture(r.texData.texture.texture,s,a)}const o=t.outShapeLocation;if(o)switch(a.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(a.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(a.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(a.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(a.shape))}if(t.outShapeStridesLocation){const n=D(a.shape);switch(a.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,a.texData.texShape[0],a.texData.texShape[1]),t.program.customUniforms&&r)for(let n=0;n<t.program.customUniforms.length;++n){const a=t.program.customUniforms[n],s=t.customUniformLocations[n],i=r[n];if("float"===a.type)e.gl.uniform1fv(s,i);else if("vec2"===a.type)e.gl.uniform2fv(s,i);else if("vec3"===a.type)e.gl.uniform3fv(s,i);else if("vec4"===a.type)e.gl.uniform4fv(s,i);else if("int"===a.type)e.gl.uniform1iv(s,i);else if("ivec2"===a.type)e.gl.uniform2iv(s,i);else if("ivec3"===a.type)e.gl.uniform3iv(s,i);else{if("ivec4"!==a.type)throw Error(`uniform type ${a.type} is not supported yet.`);e.gl.uniform4iv(s,i)}}e.executeProgram()}(this.gpgpu,d,l,c,a),u.forEach((e=>this.disposeIntermediateTensorInfo(e))),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=q().getNumber("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=Ma();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!q().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===r){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,a,r=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,a,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(q().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Pr((()=>{if(!q().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=q().getBool("DEBUG");q().set("DEBUG",!1);const t=this.abs(As(1e-8)).dataSync()[0];if(q().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:a,values:r,texture:s,usage:i,isPacked:o}=t;if(null!=s)return;const u=null!=this.activeTimers;let l;u&&(l=Ma());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=q().getNumber("WEBGL_MAX_TEXTURE_SIZE"),a=q().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(a===1/0&&q().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(a=n/2),t&&(n*=2,a*=2,1===(e=e.map(((t,n)=>n>=e.length-2?h(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=S(e);e=t.newShape}let r=g(e),s=null;e.length<=1&&r<=n?s=[1,r]:2===e.length&&e[0]<=n&&e[1]<=n?s=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?s=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?s=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?s=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(s=[e[0],e[1]*e[2]*e[3]]);const i=null!=s&&Math.max(...s)>a&&Math.min(...s)<=(t?2:1)&&Math.min(...s)>0;if(null==s||i)if(t){const t=OC(e);let n=2,a=2;e.length&&([n,a]=LC(e)),r=t*(n/2)*(a/2),s=x(r).map((e=>2*e))}else s=x(r);return s}(n,o),t.texShape=c),null!=r){const e=zC(n);let s,i=c[1],h=c[0];const d=r instanceof Uint8Array||r instanceof Uint8ClampedArray;!o&&d||([i,h]=vC(c[0],c[1])),s=o?new v$(e,d):new k$(e,d);const p=d?[h,i]:c,f=this.makeTensorInfo(p,a),m=this.texData.get(f.dataId);m.usage=d?yC.PIXELS:yC.UPLOAD,m.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,h,r);const g=[[h,i]],b=!0,y=this.runWebGLProgram(s,[f],a,g,b),x=this.texData.get(y.dataId);t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,q().get("ENGINE_COMPILE_ONLY")?this.disposeData(y.dataId):(t.texture=x.texture,t.values=null,this.texData.delete(y.dataId)),this.disposeIntermediateTensorInfo(f),u&&(this.uploadWaitMs+=Ma()-l)}else{const e=this.acquireTexture(c,i,a,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:a}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,a)),n.values}acquireTexture(e,t,n,a){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,a)}computeBytes(e,t){return e[0]*e[1]*T(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await zl(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw TC(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:a,nanLoc:r,outShapeLocation:s,outShapeStridesLocation:i,outTexShapeLocation:o}=p$(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=a,e.nanLoc=r,e.outShapeLocation=s,e.outShapeStridesLocation=i,e.outTexShapeLocation=o}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:a,height:r,width:s,channels:i}=e,o=Lr().backend;if(!o.gpgpu.gl.isTexture(a))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const u=o.writeTexture(a,t,n,r,s,i);return Lr().makeTensorFromDataId(u,t,n,o)}}ZT.nextDataId=0,Nr()&&Ur("webgl",(()=>new ZT),2);const QT="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class e_{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=Ks(t,n),this.enableShapeUniforms=m$(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const t_="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class n_{constructor(e,t,n,a=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Ks(t,n);const r=this.outputShape.length;this.enableShapeUniforms=m$(r);let s="";if(a)if(0===r||1===g(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(s=`\n          ${l$(r)} coords = getOutputCoords();\n        `,1===r)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=CT("coords",r);this.enableShapeUniforms?s+=`\n            bool nextRowOutOfBounds =\n              (${e[r-2]} + 1) >= outShape[${r} - 2];\n            bool nextColOutOfBounds =\n              (${e[r-1]} + 1) >= outShape[${r} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:s+=`\n            bool nextRowOutOfBounds =\n              (${e[r-2]} + 1) >= ${this.outputShape[r-2]};\n            bool nextColOutOfBounds =\n              (${e[r-1]} + 1) >= ${this.outputShape[r-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}}function a_(e){const{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const r_={kernelName:dt,backendName:"webgl",kernelFunc:a_};function s_(e){const{inputs:t,backend:n}=e,{real:a,imag:r}=t,s=n.makeTensorInfo(a.shape,"complex64"),i=n.texData.get(s.dataId),o=a_({inputs:{x:a},backend:n}),u=a_({inputs:{x:r},backend:n});return i.complexTensorInfos={real:o,imag:u},s}const i_={kernelName:Se,backendName:"webgl",kernelFunc:s_},o_="return (a < 0.) ? b * a : a;",u_="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",l_={kernelName:yt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:s}=a,i=n.makeTensorInfo([],"float32",Fa(s,"float32")),o=q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new n_(u_,r.shape,i.shape):new e_(o_,r.shape,i.shape),u=n.runWebGLProgram(o,[r,i],"float32");return n.disposeIntermediateTensorInfo(i),u}},c_="return (a < 0.) ? b * a : a;",h_="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",d_={kernelName:Qt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a,alpha:r}=t,s=q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new n_(h_,a.shape,r.shape):new e_(c_,a.shape,r.shape);return n.runWebGLProgram(s,[a,r],"float32")}},p_="if (isnan(x)) return x;";function f_({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:a}){return({inputs:r,backend:s})=>{const{x:i}=r,o=s,u=a||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,u);return o.makeTensorInfo(i.shape,u,t)}let l;return l=q().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new qT(i.shape,t):new FT(i.shape,e),o.runWebGLProgram(l,[i],u)}}function m_({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:a=!1,cpuKernelImpl:r,dtype:s}){return({inputs:i,backend:o})=>{const{a:u,b:l}=i,c=o;if(a&&"complex64"===u.dtype){const t=c.texData.get(u.dataId),n=c.texData.get(l.dataId),[a,r]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,a]=t,r={dataId:n.dataId,dtype:n.dtype,shape:u.shape},s={dataId:a.dataId,dtype:a.dtype,shape:l.shape},i=new e_(e,u.shape,l.shape);return c.runWebGLProgram(i,[r,s],cr(n.dtype,a.dtype))})),s=s_({inputs:{real:a,imag:r},backend:c});return c.disposeIntermediateTensorInfo(a),c.disposeIntermediateTensorInfo(r),s}const h=s||cr(u.dtype,l.dtype);if(("string"===u.dtype||"string"===l.dtype||c.shouldExecuteOnCPU([u,l]))&&null!=r){const e=c.texData.get(u.dataId).values,t=c.texData.get(l.dataId).values,n="string"===u.dtype?Uc(e):e,a="string"===u.dtype?Uc(t):t,[s,i]=r(u.shape,l.shape,n,a,h),o=c.makeTensorInfo(i,h);return c.texData.get(o.dataId).values=s,o}let d;return d=q().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new n_(t,u.shape,l.shape,n):new e_(e,u.shape,l.shape),c.runWebGLProgram(d,[u,l],h)}}function g_(e,t=!1){if("linear"===e)return t?UT:MT;if("relu"===e)return t?GT:zT;if("elu"===e)return t?VT:LT;if("relu6"===e)return t?HT:PT;if("prelu"===e)return t?h_:c_;if("leakyrelu"===e)return t?u_:o_;if("sigmoid"===e)return t?jT:BT;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class b_{constructor(e,t,n,a=!1,r=!1,s=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=m$(this.outputShape.length);const l=a?e[1]:e[2],c=Math.ceil(l/2),h=a?"i * 2, rc.y":"rc.y, i * 2",d=r?"rc.z, i * 2":"i * 2, rc.z",p=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const b=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let y="rc.x",x="rc.x";e[0]<t[0]?y=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(x=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${y};\n        int batchB = ${x};\n        for (int i = 0; i < ${c}; i++) {\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${b}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}const y_={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class x_{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Ks(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const w_="return a * b;";function k_(e){const{inputs:t,backend:n}=e,{a,b:r}=t,s=cr(a.dtype,r.dtype);if("complex64"===a.dtype){const e=n.texData.get(a.dataId),t=n.texData.get(r.dataId),s=new x_(y_.REAL,a.shape,r.shape),i=new x_(y_.IMAG,a.shape,r.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape}],u=n.runWebGLProgram(s,o,"float32"),l=n.runWebGLProgram(i,o,"float32"),c=s_({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([a,r])){const e=n.texData.get(a.dataId),t=n.texData.get(r.dataId),[i,o]=Z$(a.shape,r.shape,e.values,t.values,s),u=n.makeTensorInfo(o,s);return n.texData.get(u.dataId).values=i,u}let i;return i=q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new n_(w_,a.shape,r.shape):new e_(w_,a.shape,r.shape),n.runWebGLProgram(i,[a,r],s)}const v_={kernelName:Ut,backendName:"webgl",kernelFunc:k_};function I_(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:s}=a,i=n,o=g(r.shape),u=v(s,o),l=g(u);p(o===l,(()=>`The new shape (${u}) has ${l} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(r.dataId);return!c.isPacked||WC(r.shape,u)||null!==c.texture&&WC(c.shape,u)?(i.incRef(r.dataId),{dataId:r.dataId,shape:u,dtype:r.dtype}):function(e,t,n){const a=[OC(e.shape),...LC(e.shape)],r={dtype:e.dtype,shape:a,dataId:e.dataId},s=[OC(t),...LC(t)],i=new TT(s,a),o=[a],u=n.runWebGLProgram(i,[r],e.dtype,o,!0);return{dataId:u.dataId,shape:t,dtype:u.dtype}}(r,u,i)}const S_={kernelName:ln,backendName:"webgl",kernelFunc:I_};class N_{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:r,outSize:s}=e;this.outputShape=[a,s];const i=4*Math.floor(n/4),o=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${y(e)?e.toPrecision(2):e}, ones);`}let l="";r%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class C_{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:r,outSize:s}=e;this.outputShape=[a,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";r%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${u});\n      }\n    `}}function $_(e,t,n,a){const r=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],a=ql(n);t.push({inSize:n,windowSize:a,outSize:Math.ceil(n/a)})}return t}(e.shape);let s=e;for(let i=0;i<r.length;i++){const{inSize:o,windowSize:u,outSize:l}=r[i];let c,h;c="mean"===n?0===i?new N_({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},o):new N_({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l}):new C_({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},n),h=s,s=a.runWebGLProgram(c,[s],t),h.dataId!==e.dataId&&a.disposeIntermediateTensorInfo(h)}return s}class T_{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;const a=l$(this.rank),r=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],a=new Array(t);for(let t=0;t<e.length;t++)a[e[t]]=n[t];return a.join()}(t);this.userCode=`\n    void main() {\n      ${a} resRC = getOutputCoords();\n      setOutput(getA(${r}));\n    }\n    `}}class __{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const a=l$(this.rank),r=NT("rc",this.rank),s=new Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=r[e];const i=`vec2(${s.slice(-2).join()})`,o=`++${r[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${a} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${r[this.rank-1]};\n      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function E_(e,t,n){const a=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new __(e.shape,t):new T_(e.shape,t);return n.runWebGLProgram(a,[e],e.dtype)}function R_(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;return function(e,t,n,a){const r=t,s=e.shape.length,i=I(r,e.shape);let o=i;const u=Bo(o,s),l=null!=u;let c=e;l&&(c=E_(e,u,a),o=Vo(o.length,s)),Wo("sum",o,s);const[h,d]=zo(c.shape,o);let p=h;n&&(p=Po(h,i));const f=g(d),m=I_({inputs:{x:c},attrs:{shape:[g(e.shape)/f,f]},backend:a}),b=$_(m,hr(e.dtype),"sum",a),y=I_({inputs:{x:b},attrs:{shape:p},backend:a});return a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(b),l&&a.disposeIntermediateTensorInfo(c),y}(r,s,i,n)}const A_={kernelName:En,backendName:"webgl",kernelFunc:R_};function F_(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{perm:s}=a,i=n,o=r.shape.length,u=new Array(o);for(let e=0;e<u.length;e++)u[e]=r.shape[s[e]];let l;if(i.shouldExecuteOnCPU([r])){const e=i.texData.get(r.dataId).values,t=IT(e,r.shape,r.dtype,s,u);l=i.makeTensorInfo(u,r.dtype),i.texData.get(l.dataId).values=t}else l=E_(r,s,i);return l}const D_={kernelName:Zn,backendName:"webgl",kernelFunc:F_},M_=1e3;function O_({a:e,b:t,transposeA:n,transposeB:a,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){const l=e.shape.length,c=t.shape.length,h=n?e.shape[l-2]:e.shape[l-1],d=a?t.shape[c-1]:t.shape[c-2],f=n?e.shape[l-1]:e.shape[l-2],m=a?t.shape[c-2]:t.shape[c-1],b=e.shape.slice(0,-2),y=t.shape.slice(0,-2),x=g(b),w=g(y),k=Ks(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([f,m]);p(h===d,(()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${a} must match.`));const v=n?[x,h,f]:[x,f,h],I=a?[w,m,d]:[w,d,m],S=I_({inputs:{x:e},backend:r,attrs:{shape:v}}),N=I_({inputs:{x:t},backend:r,attrs:{shape:I}}),C=[S,N],$=Math.max(x,w),T=n?S.shape[1]:S.shape[2],_=null!=s,E=null!=i,R="leakyrelu"===u,A=null!=u?g_(u,!0):null;let F;if((1===f||1===m)&&T>M_&&!1===(_||E||R||null!=A)){let e=S,t=N;n&&(e=F_({inputs:{x:S},backend:r,attrs:{perm:[0,2,1]}}),C.push(e)),a&&(t=F_({inputs:{x:N},backend:r,attrs:{perm:[0,2,1]}}),C.push(t));const s=1===m;let i=e;1!==m&&(i=I_({inputs:{x:e},backend:r,attrs:{shape:[$,T,1]}}),C.push(i));const o=1===m?2:1;let u=t;s&&(u=I_({inputs:{x:t},backend:r,attrs:{shape:[$,1,T]}}),C.push(u));const l=k_({inputs:{a:i,b:u},backend:r});F=R_({inputs:{x:l},backend:r,attrs:{axis:o,keepDims:!0}}),C.push(l)}else{const u=cr(e.dtype,t.dtype),l=new b_(v,I,[$,f,m],n,a,_,A,E,R),c=[S,N];if(null!=s&&c.push(s),E&&c.push(i),R){const e=r.makeTensorInfo([],"float32",Fa(o,"float32"));c.push(e),C.push(e)}F=r.runWebGLProgram(l,c,u)}const D=I_({inputs:{x:F},backend:r,attrs:{shape:k}});C.push(F);for(const e of C)r.disposeIntermediateTensorInfo(e);return D}const L_={kernelName:sa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=a;return O_({a:r,b:s,transposeA:u,transposeB:l,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},z_="return abs(x);",P_={kernelName:Z,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){const e=n.texData.get(a.dataId),t=lT(e.values);return n.makeTensorInfo(a.shape,a.dtype,t)}let r;return r=q().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new qT(a.shape,z_):new FT(a.shape,z_),n.runWebGLProgram(r,[a],a.dtype)}},W_=f_({opSnippet:DT+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),B_={kernelName:Q,backendName:"webgl",kernelFunc:W_},U_=f_({opSnippet:DT+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),V_={kernelName:ee,backendName:"webgl",kernelFunc:U_},G_="return a + b;",H_=m_({opSnippet:G_,packedOpSnippet:G_,supportsComplex:!0,cpuKernelImpl:E$}),j_={kernelName:te,backendName:"webgl",kernelFunc:H_};class q_{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const a=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${a};\n        setOutput(result);\n      }\n    `}}class K_{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const a=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${a};\n        setOutput(result);\n      }\n    `}}const X_={kernelName:ne,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,r=n;if(1===r.length)return a_({inputs:{x:r[0]},backend:a});if(r.length>q().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(r.length/2),n=e({inputs:r.slice(0,t),backend:a}),s=e({inputs:r.slice(t),backend:a});return e({inputs:[n,s],backend:a})}const s=r.map((e=>e.dtype)).reduce(((e,t)=>cr(e,t))),i=r.map((e=>e.shape)),o=q().getBool("WEBGL_PACK")?new K_(r[0].shape,i):new q_(r[0].shape,i);return a.runWebGLProgram(o,r,s)}},Y_={kernelName:ae,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,o=r.shape.length,u=I(s,r.shape);let l=u;const c=Bo(l,o);let h=r;null!=c&&(h=F_({inputs:{x:r},backend:n,attrs:{perm:c}}),l=Vo(l.length,o)),Wo("all",l,o);const[d,p]=zo(h.shape,l),f=I_({inputs:{x:h},backend:n,attrs:{shape:[-1,g(p)]}}),m=$_(f,f.dtype,"all",n);let b;return b=I_(i?{inputs:{x:m},backend:n,attrs:{shape:Po(d,u)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),b}},J_={kernelName:re,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,o=r.shape.length,u=I(s,r.shape);let l=u;const c=Bo(l,o);let h=r;null!=c&&(h=F_({inputs:{x:r},backend:n,attrs:{perm:c}}),l=Vo(l.length,o)),Wo("any",l,o);const[d,p]=zo(h.shape,l),f=I_({inputs:{x:h},backend:n,attrs:{shape:[-1,g(p)]}}),m=$_(f,f.dtype,"any",n);let b;return b=I_(i?{inputs:{x:m},backend:n,attrs:{shape:Po(d,u)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),b}};class Z_{constructor(e,t,n){this.variableNames=["A"];const{windowSize:a,batchSize:r,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,s];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${a};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${a}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class Q_{constructor(e,t,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,p(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const r=e[e.length-1],s=Math.ceil(r/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),a||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,u=l$(o),l=CT("coords",o);let c,h;if(1===s){h=o+1;const e=l$(h);c=`\n        ${e} sourceLocR = ${e}(${l.join()}, 0);\n        ++${l[o-1]};\n        ${e} sourceLocG = ${e}(${l.join()}, 0);\n        ++${l[o-2]};\n        ${e} sourceLocA = ${e}(${l.join()}, 0);\n        --${l[o-1]};\n        ${e} sourceLocB = ${e}(${l.join()}, 0);\n        --${l[o-2]};`}else h=o,c=`\n        ${u} sourceLocR = coords;\n        ++${l[o-1]};\n        ${u} sourceLocG = coords;\n        ++${l[o-2]};\n        ${u} sourceLocA = coords;\n        --${l[o-1]};\n        ${u} sourceLocB = coords;\n        --${l[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),f="."+d[h-1],m=d.map((e=>"int "+e)),g=CT("sourceLocR",h-1).concat("inIdx.r"),b=CT("sourceLocG",h-1).concat("inIdx.g"),y=CT("sourceLocB",h-1).concat("inIdx.b"),x=CT("sourceLocA",h-1).concat("inIdx.a"),w="max"===n?"greaterThan":"lessThan",k=a?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${x.join()})));`,v=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${b.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,I=a?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${I}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${l[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${l[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${k}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${w}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function eE(e,t,n,a=null){let r=t.shape[0],s=t.shape[1];null!=a&&(r=a.shape[0],s=a.shape[1]);const i=ql(s),o={windowSize:i,inSize:s,batchSize:r,outSize:Math.ceil(s/i)},u=new Z_(o,n,null==a),l=[t];null!=a&&l.push(a);const c=e.runWebGLProgram(u,l,"int32");if(1===c.shape[1])return c;const h=eE(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function tE(e,t,n,a=null){const r=null!=a?a.shape:t.shape,s=ql(r[r.length-1]),i=new Q_(r,s,n,null==a),o=null==a?[t]:[t,a],u=e.runWebGLProgram(i,o,"int32");if(u.shape.length===t.shape.length){const a=tE(e,t,n,u);return e.disposeIntermediateTensorInfo(u),a}return u}function nE(e,t,n,a){const r=[n];if(Wo("arg"+a.charAt(0).toUpperCase()+a.slice(1),r,t.shape.length),!q().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],s=e.texData.get(t.dataId);let i=t;null!==s&&s.isPacked&&(i=e.unpackTensor(t),n.push(i));const[o,u]=zo(i.shape,r),l=g(u),c=I_({inputs:{x:i},backend:e,attrs:{shape:[-1,l]}});n.push(c);const h=eE(e,c,a);n.push(h);const d=I_({inputs:{x:h},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return tE(e,t,a)}const aE={kernelName:se,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;let i=I(s,r.shape);const o=Bo(i,r.shape.length);let u=r;const l=[];null!=o&&(u=F_({inputs:{x:r},backend:n,attrs:{perm:o}}),l.push(u),i=Vo(i.length,u.shape.length)),Wo("argMax",[i[0]],u.shape.length);const c=nE(n,u,i[0],"max");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},rE={kernelName:ie,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;let i=I(s,r.shape);const o=Bo(i,r.shape.length);let u=r;const l=[];null!=o&&(u=F_({inputs:{x:r},backend:n,attrs:{perm:o}}),l.push(u),i=Vo(i.length,u.shape.length)),Wo("argMin",[i[0]],u.shape.length);const c=nE(n,u,i[0],"min");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},sE=f_({opSnippet:DT+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),iE={kernelName:oe,backendName:"webgl",kernelFunc:sE},oE=f_({opSnippet:DT+"return log(x + sqrt(x * x + 1.0));"}),uE={kernelName:ue,backendName:"webgl",kernelFunc:oE},lE=f_({opSnippet:DT+"\n  return atan(x);\n"}),cE={kernelName:le,backendName:"webgl",kernelFunc:lE},hE=m_({opSnippet:QT+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+t_+"\n  return result;\n"}),dE={kernelName:he,backendName:"webgl",kernelFunc:hE},pE=f_({opSnippet:DT+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),fE={kernelName:ce,backendName:"webgl",kernelFunc:pE};class mE{constructor(e,t,n,a=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let b="0.0";if(f||(b="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${a?r?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let y=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(y="avgValue / max(count, 1.0)");const x=4*Math.floor(s/4),w=s%4,k=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${k}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${k}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${k}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${k}\n          }\n        }\n        setOutput(${y});\n      }\n    `}}class gE{constructor(e,t,n,a=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;const y="avg"===t;let x="0.0";if(y||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${b});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${a?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(w="avgValue / max(count, 1.0)");const k=4*Math.floor(s/4),v=s%4,I=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${b});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${k}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${k};\n            if (${1===v}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===v}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===v}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n        }\n        setOutput(${w});\n      }\n    `}}const bE={kernelName:de,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;jC(r,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=a;p(Hi(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=Mi(r.shape,s,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&b(l.inShape,l.outShape))return a_({inputs:{x:r},backend:n});const c=new mE(l,"avg",!1);return n.runWebGLProgram(c,[r],"float32")}},yE={kernelName:fe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=a,c=Oi(r.shape,s,i,[1,1,1],o,u,l),h=new gE(c,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}};class xE{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=o-1-e.padInfo.top,c=u-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${a}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class wE{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*a);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${r}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const kE={kernelName:me,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=a,h=Oi(i.shape,o,u,[1,1,1],l,c),d=new wE(h);return n.runWebGLProgram(d,[r],i.dtype)}},vE={kernelName:pe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s;jC([r,s],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=a,c=Mi(i.shape,o,u,1,l),h=new xE(c);return n.runWebGLProgram(h,[r],i.dtype)}},IE={kernelName:ge,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:i,transposeB:o}=a;return O_({a:r,b:s,transposeA:i,transposeB:o,backend:n})}};class SE{constructor(e,t,n,a,r,s){this.outputShape=[],this.variableNames=["x","mean","variance"],Ks(e,t),Ks(e,n);let i="0.0";null!=a&&(Ks(e,a),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=r&&(Ks(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class NE{constructor(e,t,n,a,r,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Ks(e,t),Ks(e,n);let i="vec4(0.0)";null!=a&&(Ks(e,a),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=r&&(Ks(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const CE={kernelName:ot,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,mean:r,variance:s,offset:i,scale:o}=e;p(r.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),p(null==i||r.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),p(null==o||r.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=n;null==u&&(u=.001);const l=[a,r,s];let c=null;null!=i&&(c=i.shape,l.push(i));let h=null;null!=o&&(h=o.shape,l.push(o));const d=q().getBool("WEBGL_PACK_NORMALIZATION")?new NE(a.shape,r.shape,s.shape,c,h,u):new SE(a.shape,r.shape,s.shape,c,h,u);return t.runWebGLProgram(d,l,l[0].dtype)}};class $E{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=l$(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return TE.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let a;a=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${TE[t]} = start[${t}] + coords.${TE[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${a}\n        setOutput(getSource(${n}));\n      }\n    `}}const TE=["x","y","z","w","u","v"];class _E{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=l$(this.rank),n=CT("coords",this.rank),a=CT("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":`vec2(${a.slice(-2).join()})`,s=`getChannel(getSource(${a.join()}), ${r})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${a[this.rank-1]};\n        result.y = ${s};\n        --${a[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${a[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${a[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${a[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}function EE(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,size:i}=a,[o,u]=Ti(r,s,i);if(fi(r,o,u),0===g(u))return n.makeTensorInfo(u,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){const e=n.texData.get(r.dataId),t=cT(e.values,o,u,r.shape,r.dtype);return n.makeTensorInfo(u,r.dtype,t)}const{isPacked:l}=n.texData.get(r.dataId),c=Ci(r.shape,o,u);if(l||!c){const e=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new _E(u):new $E(u),t=[o];return n.runWebGLProgram(e,[r],r.dtype,t)}return n.uploadToGPU(r.dataId),function(e,t,n,a){const r=a.texData.get(e.dataId),s=a.makeTensorInfo(n,e.dtype),i=a.texData.get(s.dataId);Object.assign(i,r),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=$i(t,D(e.shape));r.slice&&(o+=r.slice.flatOffset),i.slice={flatOffset:o,origDataId:r.slice&&r.slice.origDataId||e.dataId};const u=a.dataRefCount.get(i.slice.origDataId)||1;return a.dataRefCount.set(i.slice.origDataId,u+1),s}(r,o,u,n)}const RE={kernelName:In,backendName:"webgl",kernelFunc:EE},AE={kernelName:be,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,crops:i}=a;p(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=s.reduce(((e,t)=>e*t)),u=Xl(r.shape,s,o),l=Yl(u.length,s.length),c=Jl(r.shape,s,o),h=Zl(i,s.length),d=Ql(c,i,s.length),f=[],m=I_({inputs:{x:r},backend:n,attrs:{shape:u}}),g=F_({inputs:{x:m},backend:n,attrs:{perm:l}}),b=I_({inputs:{x:g},backend:n,attrs:{shape:c}}),y=EE({inputs:{x:b},backend:n,attrs:{begin:h,size:d}});return f.push(m),f.push(g),f.push(b),f.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},FE={kernelName:ye,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:i}=a,o=n.readSync(r.dataId),u=n.readSync(s.dataId),l=R$(o,u,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,l)}},DE={kernelName:xe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a,b:r}=t,s=q().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=q().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([a,r])||1===i){const e=n.texData.get(a.dataId).values,t=n.texData.get(r.dataId).values,[s,i]=F$(a.shape,r.shape,e,t,a.dtype),o=n.makeTensorInfo(i,a.dtype);return n.texData.get(o.dataId).values=s,o}let o;return o=s?new n_("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",a.shape,r.shape,!1):new e_("\n  return float(int(a.r) & int(b.r));\n",a.shape,r.shape),n.runWebGLProgram(o,[a,r],a.dtype)}},ME={kernelName:we,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:r}=t,s=n.readSync(a.dataId),i=n.readSync(r.dataId),o=Ks(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},OE=m_({opSnippet:"return float(a != b);",cpuKernelImpl:eT,dtype:"bool"}),LE={kernelName:Gt,backendName:"webgl",kernelFunc:OE};function zE(e){const{inputs:t,backend:n}=e,{input:a}=t;return a_({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.real},backend:n})}const PE={kernelName:sn,backendName:"webgl",kernelFunc:zE},WE={kernelName:ke,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a,attrs:r}=t,{x:s}=n,{dtype:i}=r;if("complex64"===i){if("complex64"===s.dtype)return a_({inputs:{x:s},backend:a});const t=nu(s.shape),n=e({inputs:{x:s},backend:a,attrs:{dtype:"float32"}}),r=s_({inputs:{real:n,imag:t},backend:a});return t.dispose(),a.disposeIntermediateTensorInfo(n),r}if("complex64"===s.dtype){const t=zE({inputs:{input:s},backend:a}),n=e({inputs:{x:t},backend:a,attrs:{dtype:i}});return a.disposeIntermediateTensorInfo(t),n}if(!$(s.dtype,i)){const e=a_({inputs:{x:s},backend:a});return{dataId:e.dataId,shape:e.shape,dtype:i}}if(a.shouldExecuteOnCPU([s])){const e=a.texData.get(s.dataId).values,[t,n,r]=D$(e,s.shape,s.dtype,i);return a.makeTensorInfo(t,n,r)}if("int32"===i)return function(e,t){const n=new FT(e.shape,"return float(int(x));"),a=t.runWebGLProgram(n,[e],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}(s,a);if("bool"===i){const e=a.makeTensorInfo([],"bool",N("bool",1)),t=OE({inputs:{a:s,b:e},backend:a});return a.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}},BE="return ceil(x);",UE=f_({opSnippet:BE,packedOpSnippet:BE,cpuKernelImpl:M$}),VE={kernelName:ve,backendName:"webgl",kernelFunc:UE};class GE{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class HE{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const jE={kernelName:Ie,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{clipValueMin:s,clipValueMax:i}=a;let o;o=q().getBool("WEBGL_PACK_CLIP")?new HE(r.shape):new GE(r.shape);const u=[[s],[i]];return n.runWebGLProgram(o,[r],r.dtype,u)}};class qE{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function KE(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const XE={kernelName:Ne,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=n.texData.get(a.dataId),s=new qE(a.shape),i=[KE(a,r.complexTensorInfos.real),KE(a,r.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}};class YE{constructor(e){this.outputShape=[],this.outputShape=Wl(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const a=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${a}));`)}const a=t.length,r=t[t.length-1];n.push(`else setOutput(getT${a}(yR, yC-${r}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class JE{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Wl(e,t);const n=this.outputShape,a=n.length,r=l$(a),s=CT("coords",a),i=["x","y","z","w","u","v"].slice(0,a);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const u=i[t],l=i.slice(-2),c=i.join();let h=`if (${u} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${l.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\n        if (${u} < ${o[e]}  && ${u} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${ZE(i,u,t)}),\n            vec2(${ZE(l,u,t)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${ZE(i,u,p)}),\n          vec2(${ZE(l,u,p)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${r} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[a-1]} = ${s[a-1]} + 1;\n        if (${s[a-1]} < ${n[a-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[a-2]} = ${s[a-2]} + 1;\n        if (${s[a-2]} < ${n[a-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[a-1]} = ${s[a-1]} - 1;\n        if (${s[a-2]} < ${n[a-2]} &&\n            ${s[a-1]} < ${n[a-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}}function ZE(e,t,n){const a=e.indexOf(t);return e.map(((e,t)=>t===a?`${e} - ${n}`:e)).join()}function QE(e){const{inputs:t,backend:n}=e,{input:a}=t;return a_({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.imag},backend:n})}const eR={kernelName:ft,backendName:"webgl",kernelFunc:QE};function tR(e,t,n){const a=e[0].dtype;if("complex64"===a){const a=e.map((e=>zE({inputs:{input:e},backend:n}))),r=e.map((e=>QE({inputs:{input:e},backend:n}))),s=tR(a,t,n),i=tR(r,t,n),o=s_({inputs:{real:s,imag:i},backend:n});return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),r.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}let r=n.shouldExecuteOnCPU(e);if("string"===a&&(r=!0),r){const r=e.map((e=>{const a=g(e.shape.slice(t));return I_({inputs:{x:e},backend:n,attrs:{shape:[-1,a]}})})),s=r.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=Wl(r.map((e=>e.shape)),1),o=1===r[0].shape[0],u=O$(s,i,a,o),l=Wl(e.map((e=>e.shape)),t),c=n.makeTensorInfo(l,a,u);return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const s=e.filter((e=>g(e.shape)>0)),i=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1;if(1===s.length){const t=i?new FT(e[0].shape,WT):new qT(e[0].shape,WT);return n.runWebGLProgram(t,e,a)}const o=q().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>o){const e=[];for(let a=0;a<s.length;a+=o){const r=s.slice(a,a+o);e.push(tR(r,t,n))}const a=tR(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return a}if(i){const e=new JE(s.map((e=>e.shape)),t);return n.runWebGLProgram(e,s,a)}const{tensors2D:u,outShape:l}=function(e,t,n){const a=Wl(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>I_({inputs:{x:e},attrs:{shape:[-1,g(e.shape.slice(t))]},backend:n}))),outShape:a}}(s,t,n),c=new YE(u.map((e=>e.shape))),h=n.runWebGLProgram(c,u,a);u.forEach((e=>n.disposeIntermediateTensorInfo(e)));const d=I_({inputs:{x:h},attrs:{shape:l},backend:n});return n.disposeIntermediateTensorInfo(h),d}function nR(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,s=I(r,t[0].shape)[0];Pl(t.map((e=>e.shape)),s);const i=Wl(t.map((e=>e.shape)),s);if(0===g(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>g(e.shape)>0));return 1===o.length?a_({inputs:{x:o[0]},backend:n}):tR(o,s,n)}const aR={kernelName:Ce,backendName:"webgl",kernelFunc:nR};class rR{constructor(e,t=!1,n=null,a=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,b=m?2:3,y=m?3:1;let x="",w="";n&&(x=a?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,w="result = activation(result);");const k=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${b}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${k}\n        ${w}\n        setOutput(result);\n      }\n    `}}class sR{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,a=e.padInfo.left,r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${r}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${a});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class iR{constructor(e,t=!1,n=null,a=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=m$(this.outputShape.length);const s=e.padInfo.left,i=e.strideWidth,o=e.dilationWidth,u=e.filterHeight,l=e.filterWidth,c=l;let d="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<l;e++)d+=`\n           vec4 xTexelC${2*e};\n           int xTexelC${2*e}Ready;\n           vec4 xTexelC${2*e+1};\n           int xTexelC${2*e+1}Ready;\n           vec4 xC${e};`;d+=`\n     for (int r = 0; r < ${u}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let e=0;e<l;e++)d+=`\n           xTexelC${2*e} = vec4(0.0);\n           xTexelC${2*e}Ready = 0;\n           xTexelC${2*e+1} = vec4(0.0);\n           xTexelC${2*e+1}Ready = 0;\n           xC${e} = vec4(0.0);`;d+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let t=0;t<(c+1)/2;t++){const n=2*t;if(d+=`\n           xC = xCCorner + ${n*o};\n           `,1===i){if(n<l&&(s%2==1?(d+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n               `,d+=1===o&&n>0?`\n                 xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                   } else {\n                     xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                   }\n                   `):d+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xC${n} = xTexelC${n};\n                 `,n+1<l)){const e=s%2==0?h(o):o;o%2==0&&s%2==1||o%2!=0&&s%2!=1?(d+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                     xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${n+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${n+1}Ready = 1;\n                   }\n                   `,d+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${n+1} = vec4(previous.zw, xTexelC${n+1}.xy);\n                     } else {\n                      xC${n+1} = vec4(0.0, 0.0, xTexelC${n+1}.xy);\n                     }\n                     `:`\n                     xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                     `):d+=1===e?`\n                     xC${n+1} = xTexelC${n};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                       xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${n+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${n+1}Ready = 1;\n                     }\n\n                     xC${n+1} = xTexelC${n+1};\n                     `}}else n<l&&(s%2==1?(d+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n               `,n+1<l&&(d+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                 `)):(d+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(\n                   xTexelC${n}.xy, xTexelC${n+1}.xy);\n               `,n+1<l&&(d+=`\n                   xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                 `)));n<l&&(d+=`\n             wTexel = getW(r, ${n}, d1, d2);\n             dotProd += xC${n}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${n}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,n+1<l&&(d+=`\n               wTexel = getW(r, ${n+1}, d1, d2);\n               dotProd += xC${n+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${n+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}d+="\n     }\n   ",d+="\n     }\n   ",d+="\n     }\n   ";let p="",f="";n&&(p=a?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:r?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${p}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${d}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${m}\n         ${f}\n         setOutput(result);\n       }\n     `}}class oR{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=m$(this.outputShape.length);const{dataFormat:n}=t,a=KC(),r="channelsLast"===n,s=r?1:2,i=r?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let u="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)u+=`\n          blockIndex = rc.z + ${t};\n          pos = rc.y + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${s}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${r}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${a.output} = result;\n      }\n    `}}function uR(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function lR({x:e,filter:t,convInfo:n,backend:a,bias:r=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){const u=e.shape,l=a.texData.get(e.dataId),c=n.inChannels,h=u[0]*u[1]*u[2],d=n.outChannels,f="channelsLast"===n.dataFormat,m=!1;let g;const y=[];if(null!=s){const e=uR(s.shape,f);null!=e&&(s=I_({inputs:{x:s},backend:a,attrs:{shape:e}}),y.push(s))}if(null!=r){const e=uR(r.shape,f);null!=e&&(r=I_({inputs:{x:r},backend:a,attrs:{shape:e}}),y.push(r))}if((1!==h&&1!==d||!(c>M_))&&l.isPacked&&f&&null!=l.texture&&u[2]%2!=0&&b(l.shape.slice(-3),u.slice(-3))){const c=u[0]*u[1]*(u[2]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},d=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,p(WC(l.shape,h.shape),(()=>`packed reshape ${l.shape} to ${h.shape} isn't free`));const f=I_({inputs:{x:t},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}});y.push(f);const b=O_({a:h,b:f,backend:a,transposeA:!1,transposeB:m,bias:r,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),x=a.texData.get(b.dataId);p(x.isPacked,(()=>"batchMatMul result is expected to be packed")),l.shape=d,x.shape=n.outShape,g=a_({inputs:{x:b},backend:a}),g.shape=n.outShape,y.push(b)}else{const u=n.outHeight*n.outWidth,l=I_({inputs:{x:e},backend:a,attrs:{shape:f?[n.batchSize,u,n.inChannels]:[n.batchSize,n.inChannels,u]}}),c=I_({inputs:{x:t},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=O_({a:f?l:c,b:f?c:l,transposeA:!f,transposeB:m,backend:a,bias:r,activation:o,preluActivationWeights:s,leakyreluAlpha:i});g=I_({inputs:{x:h},backend:a,attrs:{shape:n.outShape}}),y.push(l),y.push(c),y.push(h)}for(const e of y)a.disposeIntermediateTensorInfo(e);return g}function cR({x:e,filter:t,convInfo:n,backend:a,bias:r=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:u,filterHeight:l,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,f="channelsLast"===p,m=u*l*c,b=d*h,y=[n.batchSize,m,b],x=[];if(null!=s){const e=uR(s.shape,f);null!=e&&(s=I_({inputs:{x:s},backend:a,attrs:{shape:e}}),x.push(s))}if(null!=r){const e=uR(r.shape,f);null!=e&&(r=I_({inputs:{x:r},backend:a,attrs:{shape:e}}),x.push(r))}const w=I_({inputs:{x:t},backend:a,attrs:{shape:[1,m,g(t.shape)/m]}});x.push(w);const k=new oR(y,n),v=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],I=a.runWebGLProgram(k,[e],"float32",v),S=I_({inputs:{x:I},backend:a,attrs:{shape:y}});x.push(I),x.push(S);const N=null!=r,C=null!=s,$="leakyrelu"===o,T=o?g_(o,!0):null,_=new b_(f?S.shape:w.shape,f?w.shape:S.shape,f?[n.batchSize,b,n.outChannels]:[n.batchSize,n.outChannels,b],!0,!1,N,T,C,$),E=f?[S,w]:[w,S];if(r&&E.push(r),C&&E.push(s),$){const e=a.makeTensorInfo([],"float32",Fa(i,"float32"));E.push(e),x.push(e)}const R=a.runWebGLProgram(_,E,"float32"),A=I_({inputs:{x:R},backend:a,attrs:{shape:n.outShape}});x.push(R);for(const e of x)a.disposeIntermediateTensorInfo(e);return A}const hR={kernelName:$e,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=a,h=qi(u),d=Li(r.shape,s.shape,i,l,o,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(d.strideWidth<=2&&"channelsLast"===h&&q().getBool("WEBGL_EXP_CONV")){const e=new iR(d),t=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=n.runWebGLProgram(e,[r,s],"float32",t)}else if(q().getBool("WEBGL_CONV_IM2COL"))p=cR({x:r,filter:s,convInfo:d,backend:n});else{const e=new rR(d);p=n.runWebGLProgram(e,[r,s],"float32")}else p=lR({x:r,filter:s,convInfo:d,backend:n});const f=I_({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class dR{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${a};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              ${s?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class pR{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=s?1:2,l=s?2:3,c=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${a}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class fR{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${r};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${a} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class mR{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=a-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${r}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${a}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${a} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const gR={kernelName:Te,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=a,h=qi(u),d=Li(r.shape,c,i,1,o,l,!1,h),p=new dR(d);return n.runWebGLProgram(p,[r,s],"float32")}};class bR{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=m$(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,a=t-1-e.padInfo.top,r=n-1-e.padInfo.left;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${r});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            int wCPerm = ${n} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}}const yR={kernelName:_e,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=a,h=qi(l),d=Li(i,s.shape,o,1,u,c,!1,h);if(q().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===h){const e=[[d.strideHeight,d.strideWidth]],t=new bR(d);return n.runWebGLProgram(t,[r,s],"float32",e)}{const e=new pR(d);return n.runWebGLProgram(e,[r,s],"float32")}}},xR={kernelName:Ee,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:u}=a,l=zi(r.shape,s.shape,i,u,o),c=new sR(l);return n.runWebGLProgram(c,[r,s],"float32")}},wR={kernelName:Re,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:o,filterShape:u}=a,l=zi(r.shape,u,i,1,o),c=new fR(l);return n.runWebGLProgram(c,[r,s],"float32")}},kR={kernelName:Ae,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{pad:i,strides:o,inputShape:u}=a,l=zi(u,s.shape,o,1,i),c=new mR(l);return n.runWebGLProgram(c,[r,s],"float32")}},vR=f_({opSnippet:p_+"\n  return cos(x);\n",packedOpSnippet:`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${t_}\n  return result;\n`}),IR={kernelName:Fe,backendName:"webgl",kernelFunc:vR},SR=f_({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),NR={kernelName:De,backendName:"webgl",kernelFunc:SR};class CR{constructor(e,t,n,a,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,i,o,u]=e,[l]=t,[c,h]=n;this.outputShape=[l,c,h,u];const d="bilinear"===a?1:0,[p,f]=[i-1+".0",o-1+".0"],[m,g,b]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[y,x,w]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${b};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${r}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${r}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const $R={kernelName:Le,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=a,c=new CR(r.shape,s.shape,o,u,l);return n.runWebGLProgram(c,[r,s,i],"float32")}};var TR;!function(e){e.Prod="*",e.Sum="+"}(TR||(TR={}));class _R{constructor(e,t,n,a){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,s=this.op===TR.Prod?"1.0":"0.0",i=n?s:`getX(${ER(r,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1];let u="",l="";n?(u=a?"end != "+(o-1):"end != 0",l=a?"end + 1":"end - 1"):(u=a?`end + pow2 < ${o}`:"end >= pow2",l=a?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${l$(r)} coords = getOutputCoords();\n        int end = ${RR(r,"coords",this.op)};\n        float val = ${i};\n        int pow2 = int(pow(2.0, index));\n        if (${u}) {\n          int idx = ${l};\n          ${RR(r,"coords",this.op)} = idx;\n          val ${this.op}= getX(${ER(r,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function ER(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function RR(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function AR(e,t,n,a,r,s){const i=t.shape.length,o=Bo([a],i);let u=t;null!=o&&(u=F_({inputs:{x:t},backend:n,attrs:{perm:o}}));const l=Vo(1,i)[0];if(l!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${a}`);const c=u.shape[l];let h=a_({inputs:{x:u},backend:n});for(let t=0;t<=Math.ceil(Math.log2(c))-1;t++){const a=new _R(e,u.shape,!1,s),r=[[t]],i=h;h=n.runWebGLProgram(a,[h],h.dtype,r),n.disposeIntermediateTensorInfo(i)}if(r){const t=new _R(e,u.shape,r,s),a=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(a)}if(null!=o){const e=F_({inputs:{x:h},backend:n,attrs:{perm:Uo(o)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(u),e}return h}const FR={kernelName:Me,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=a;return AR(TR.Prod,r,n,s,i,o)}},DR={kernelName:Oe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=a;return AR(TR.Sum,r,n,s,i,o)}},MR={kernelName:ze,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:i,binaryOutput:o}=a;if(1===r.shape.length){const e=n.readSync(r.dataId),t=n.readSync(s.dataId),a=R$(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,a)}if(2===r.shape.length){const e=n.bufferSync(r),t=n.bufferSync(s),a=A$(e,t,i,o);return n.makeTensorInfo(a.shape,s.dtype,a.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}};class OR{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const LR={kernelName:Pe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:s,dataFormat:i}=a,o=r.shape[0],u=("NHWC"===i?r.shape[1]:r.shape[2])*s,l=("NHWC"===i?r.shape[2]:r.shape[3])*s,c=("NHWC"===i?r.shape[3]:r.shape[1])/(s*s),h=new OR("NHWC"===i?[o,u,l,c]:[o,c,u,l],s,i);return n.runWebGLProgram(h,[r],r.dtype)}};class zR{constructor(e,t=!1,n=null,a=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=m$(this.outputShape.length);const s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let u="",l="";n&&(u=a?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,l="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${s}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${l}\n        setOutput(result);\n      }\n    `}}class PR{constructor(e,t=!1,n=null,a=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=m$(this.outputShape.length);const s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,c=e.filterWidth,d=c;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<c;e++)p+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;p+=`\n    for (int r = 0; r < ${l}; r++) {\n      `;for(let e=0;e<c;e++)p+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(d+1)/2;e++){const t=2*e;if(p+=`\n          xC = xCCorner + ${t*u};\n          `,1===o){if(t<c&&(i%2==1?(p+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,p+=1===u&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):p+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<c)){const e=i%2==0?h(u):u;u%2==0&&i%2==1||u%2!=0&&i%2!=1?(p+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,p+=u>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                    } else {\n                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                    }\n                    `:`\n                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                    `):p+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<c&&(i%2==1?(p+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<c&&(p+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(p+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<c&&(p+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<c&&(p+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<c&&(p+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}p+="\n    }\n  ",p+="\n      }\n    ";let f="",m="";n&&(f=a?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,m="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${f}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${s};\n        int q = d2 - d1 * ${s};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${p}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${g}\n        ${m}\n        setOutput(result);\n      }\n    `}}const WR={kernelName:We,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=a;let c=u;null==c&&(c=[1,1]),p(Hi(i,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=Li(r.shape,s.shape,i,c,o,l,!0);let d;d=q().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new PR(h):new zR(h);const f=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[r,s],"float32",f)}};class BR{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${a};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class UR{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${a}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const VR={kernelName:Be,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=a,h=Li(r.shape,c,i,o,u,l,!0),d=new BR(h);return n.runWebGLProgram(d,[r,s],"float32")}},GR={kernelName:Ue,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=a,h=Li(c,s.shape,i,o,u,l,!0),d=new UR(h);return n.runWebGLProgram(d,[r,s],"float32")}};class HR{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const jR={kernelName:Ve,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=[...a.shape,...a.shape],s=g(a.shape),i=I_({inputs:{x:a},backend:n,attrs:{shape:[s]}}),o=new HR(s),u=n.runWebGLProgram(o,[i],i.dtype),l=I_({inputs:{x:u},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}};class qR{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:a,strideHeight:r,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:l}=e,{top:c,left:h}=a;this.userCode=`\n      const ivec2 strides = ivec2(${r}, ${s});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const KR={kernelName:Ge,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:u}=a,l=Di(r.shape,s.shape,i,o,"NHWC",u);let c;const h=new qR(l);c=n.runWebGLProgram(h,[r,s],"float32");const d=I_({inputs:{x:c},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(c),d}},XR={kernelName:Ke,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,s=t,{allDims:i,summedDims:o,idDims:u}=wc(r,s.length);vc(i.length,u,s);const{path:l,steps:c}=Ic(o,u),h=c.length;let d=null,p=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:a}=kc(p,u[t]);let r;Sc(e)?r=s[t]:(r=F_({inputs:{x:s[t]},backend:n,attrs:{perm:e}}),f.push(r));const i=r.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);b(r.shape,i)||(r=I_({inputs:{x:r},backend:n,attrs:{shape:i}}),f.push(r)),null===d?d=r:(d=k_({inputs:{a:r,b:d},backend:n}),f.push(d))}e<h-1&&(l[e]>=0&&(d=R_({inputs:{x:d},backend:n,attrs:{axis:l[e]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},YR=f_({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),JR={kernelName:Xe,backendName:"webgl",kernelFunc:YR},ZR={kernelName:Ye,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:a,y:r}=t,s=q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new n_("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",a.shape,r.shape):new e_("return (b >= 0.0) ? a : a * (b + 1.0);",a.shape,r.shape);return n.runWebGLProgram(s,[a,r],a.dtype)}},QR=m_({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:L$}),eA={kernelName:Ze,backendName:"webgl",kernelFunc:QR},tA=f_({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${nc};\n  float a1 = ${ac};\n  float a2 = ${rc};\n  float a3 = ${sc};\n  float a4 = ${ic};\n  float a5 = ${oc};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),nA={kernelName:Je,backendName:"webgl",kernelFunc:tA},aA=f_({opSnippet:p_+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:z$,dtype:"float32"}),rA={kernelName:Qe,backendName:"webgl",kernelFunc:aA};function sA(e){const{inputs:t,attrs:n,backend:a}=e,{dim:r}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice();let u=r;return r<0&&(p(-(i+1)<=r,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+r+1),o.splice(u,0,1),I_({inputs:{x:s},backend:a,attrs:{shape:o}})}const iA={kernelName:et,backendName:"webgl",kernelFunc:sA},oA="return exp(x) - 1.0;",uA=f_({opSnippet:oA,packedOpSnippet:oA,cpuKernelImpl:P$}),lA={kernelName:tt,backendName:"webgl",kernelFunc:uA};class cA{constructor(e,t,n){this.variableNames=["real","imag"];const a=t[1];this.outputShape=t;const r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${a}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${r};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${a});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${a}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function hA(e,t,n){const a=n.texData.get(e.dataId),r=g(e.shape),s=e.shape[e.shape.length-1],i=I_({inputs:{x:e},backend:n,attrs:{shape:[r/s,s]}}),o=i.shape,u=new cA("real",o,t),l=new cA("imag",o,t),c=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:o},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(u,c,"float32"),d=n.runWebGLProgram(l,c,"float32"),p=s_({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=I_({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(p),f}const dA={kernelName:nt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return hA(a,!1,n)}};class pA{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function fA(e){const{backend:t,attrs:n}=e,{shape:a,value:r}=n;let{dtype:s}=n;if(s=s||R(r),"string"===s){const e=C(s,g(a));return e.fill(r),t.makeTensorInfo(a,s,e)}{const e=new pA(a,r),n=[[r]];return t.runWebGLProgram(e,[],s,n)}}const mA={kernelName:at,backendName:"webgl",kernelFunc:fA};class gA{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const bA={kernelName:rt,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,a=t,r=new gA(n.shape);return a.runWebGLProgram(r,[n],n.dtype)}},yA="return floor(x);",xA=f_({opSnippet:yA,packedOpSnippet:yA,cpuKernelImpl:W$}),wA={kernelName:st,backendName:"webgl",kernelFunc:xA},kA=m_({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),vA={kernelName:it,backendName:"webgl",kernelFunc:kA};class IA{constructor(e){this.variableNames=["A"];const t=KC(),[n,a]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class SA{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=KC(),[n,a]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${a}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const NA={kernelName:"FromPixels",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e;let{pixels:r}=t;const{numChannels:s}=a,i="undefined"!=typeof HTMLVideoElement&&r instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&r instanceof HTMLImageElement,[u,l]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],c=[l,u],h=[l,u,s];if(o||i){const e=q().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=CA&&e===$A||($A=e,CA=document.createElement("canvas").getContext("2d",{willReadFrequently:$A})),CA.canvas.width=u,CA.canvas.height=l,CA.drawImage(r,0,0,u,l),r=CA.canvas}const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=yC.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),r);const p=q().getBool("WEBGL_PACK")?new SA(h):new IA(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}};let CA,$A=q().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const TA={kernelName:ia,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=a,m=qi(c),g=Li(r.shape,s.shape,u,h,l,d,!1,m);let b;const y=[],x=null!=i,w=null!=o,k="leakyrelu"===p,v=()=>{const e=[r,s],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=I_({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return y.push(t),t}return e};if(x&&e.push(t(i,c)),w&&e.push(t(o,c)),k){const t=n.makeTensorInfo([],"float32",Fa(f,"float32"));e.push(t),y.push(t)}return e};if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(g.strideWidth<=2&&"channelsLast"===m&&q().getBool("WEBGL_EXP_CONV")){const e=p?g_(p,!0):null,t=new iR(g,x,e,w,k),a=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],r=v();b=n.runWebGLProgram(t,r,"float32",a)}else if(q().getBool("WEBGL_CONV_IM2COL"))b=cR({x:r,filter:s,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const e=p?g_(p,!1):null,t=new rR(g,x,e,w,k),a=v();b=n.runWebGLProgram(t,a,"float32")}else b=lR({x:r,filter:s,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const I=I_({inputs:{x:b},backend:n,attrs:{shape:g.outShape}});return y.push(b),y.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}},_A={kernelName:oa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:f}=a,m=[];let g=c;null==g&&(g=[1,1]),p(Hi(u,g),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${g}'`));const b=Li(r.shape,s.shape,u,g,l,h,!0),y=q().getBool("WEBGL_PACK_DEPTHWISECONV")&&b.strideWidth<=2&&b.outChannels/b.inChannels==1,x=d?g_(d,y):null,w=[r,s],k=null!=i,v=null!=o,I="leakyrelu"===d;if(k&&w.push(i),v&&w.push(o),I){const e=n.makeTensorInfo([],"float32",Fa(f,"float32"));w.push(e),m.push(e)}let S;S=y?new PR(b,k,x,v,I):new zR(b,k,x,v,I);const N=[[b.padInfo.top,b.padInfo.left],[b.strideHeight,b.strideWidth],[b.dilationHeight,b.dilationWidth],[b.inHeight,b.inWidth]],C=n.runWebGLProgram(S,w,"float32",N);return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),C}};class EA{constructor(e,t,n,a){this.sliceDim=e,this.strides=t,this.paramsShape=a,this.variableNames=["x","indices"],this.outputShape=n;const r=l$(n.length);let s="\n    int index;";for(let e=0;e<this.sliceDim;e++)s+=`\n          index = round(getIndices(coords[0], ${e}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[e]};\n          flattenIndex += index * ${this.strides[e]};`;this.userCode=`\n         void main() {\n          ${r} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${s}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const RA={kernelName:lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:r}=t,s=r.shape,i=s[s.length-1],o=g(a.shape),[u,l,c,h]=ui(a,r),d=I_({inputs:{x:r},backend:n,attrs:{shape:[l,i]}}),p=I_({inputs:{x:a},backend:n,attrs:{shape:[g(a.shape)/c,c]}});if(n.shouldExecuteOnCPU([a,r])||"string"===a.dtype){const e=n.readSync(r.dataId),t=n.bufferSync(a),s=B$(e,t,a.dtype,l,i,c,h,a.shape,o);return n.makeTensorInfo(u,a.dtype,s.values)}const f=new EA(i,h,[l,c],a.shape),m=n.runWebGLProgram(f,[p,d],p.dtype),b=I_({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),b}};class AA{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=l$(this.rank),a=function(e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let a=0;a<e.length;a++)2===a?n.push("index"):n.push(`${t[a]}`);return n.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${a}));\n      }\n    `}}function FA(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,indices:s}=t,{axis:i,batchDims:o}=a,u=I(i,r.shape)[0];if(q().get("DEBUG")){const e=n.readSync(s.dataId),t=r.shape[u];for(let n=0;n<e.length;++n){const a=e[n];p(a<=t-1&&a>=0,(()=>`GatherV2: the index value ${a} is not in [0, ${t-1}]`))}}const l=Bc(r,s,u,o),c=g(s.shape),h=[],d=I_({inputs:{x:r},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),f=I_({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,c/l.batchSize]}});h.push(d),h.push(f);const m=[l.batchSize,l.outerSize,c/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.bufferSync(f),t=n.bufferSync(d),a=U$(t,e,m);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l.outputShape,a.dtype,a.values)}const b=new AA(d.shape,m),y=n.runWebGLProgram(b,[d,f],d.dtype);h.push(y);const x=I_({inputs:{x:y},backend:n,attrs:{shape:l.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}const DA={kernelName:ut,backendName:"webgl",kernelFunc:FA},MA=m_({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:V$,dtype:"bool"}),OA={kernelName:ct,backendName:"webgl",kernelFunc:MA},LA=m_({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:G$}),zA={kernelName:ht,backendName:"webgl",kernelFunc:LA},PA={kernelName:pt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return hA(a,!0,n)}},WA=f_({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),BA={kernelName:mt,backendName:"webgl",kernelFunc:WA},UA=f_({opSnippet:"return float(isinf(x));",dtype:"bool"}),VA={kernelName:gt,backendName:"webgl",kernelFunc:UA},GA=f_({opSnippet:"return float(isnan(x));",dtype:"bool"}),HA={kernelName:bt,backendName:"webgl",kernelFunc:GA},jA=m_({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:H$,dtype:"bool"}),qA={kernelName:xt,backendName:"webgl",kernelFunc:jA},KA=m_({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:j$,dtype:"bool"}),XA={kernelName:wt,backendName:"webgl",kernelFunc:KA},YA={kernelName:kt,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,num:s}=n,i=q$(a,r,s);return t.makeTensorInfo([i.length],"float32",i)}},JA=f_({opSnippet:p_+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:K$}),ZA={kernelName:vt,backendName:"webgl",kernelFunc:JA},QA=f_({opSnippet:p_+"\n  return log(1.0 + x);\n"}),eF={kernelName:It,backendName:"webgl",kernelFunc:QA},tF=m_({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),nF={kernelName:St,backendName:"webgl",kernelFunc:tF},aF=f_({opSnippet:"return float(!(x >= 1.0));"}),rF={kernelName:Nt,backendName:"webgl",kernelFunc:aF},sF=m_({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),iF={kernelName:Ct,backendName:"webgl",kernelFunc:sF};class oF{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[];const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${a}) * sum`;o=.5===r?`inversesqrt(${u})`:1===r?`1.0/(${u})`:`exp(log(${u}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class uF{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${a}) * sum`;o=.5===r?`inversesqrt(${u})`:1===r?`1.0/(${u})`:`exp(log(${u}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const lF={kernelName:$t,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:s,bias:i,alpha:o,beta:u}=a,l=q().getBool("WEBGL_PACK_NORMALIZATION")?new uF(r.shape,s,i,o,u):new oF(r.shape,s,i,o,u);return n.runWebGLProgram(l,[r],r.dtype)}};class cF{constructor(e,t,n,a,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=a,this.beta=r,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${a}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${a})\n                * float(${r})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${r});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const hF={kernelName:Tt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=a,h=new cF(r.shape,o,u,l,c);return n.runWebGLProgram(h,[r,s,i],r.dtype)}};function dF(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:s,keepDims:i}=a,o=r.shape.length,u=I(s,r.shape);let l=u;const c=Bo(l,o),h=null!=c,d=n.shouldExecuteOnCPU([r]);let p=r;if(h){if(d){const e=n.texData.get(p.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const a=IT(e,r.shape,r.dtype,c,t);p=n.makeTensorInfo(t,r.dtype),n.texData.get(p.dataId).values=a}else p=E_(r,c,n);l=Vo(l.length,o)}Wo("max",l,o);const[f,m]=zo(p.shape,l);let b,y=f;if(i&&(y=Po(f,u)),d){const e=n.texData.get(p.dataId).values,t=X$(e,g(m),y,r.dtype);b=n.makeTensorInfo(y,r.dtype),n.texData.get(b.dataId).values=t}else b=function(e,t,n,a){const r=g(t),s=I_({inputs:{x:e},attrs:{shape:[g(e.shape)/r,r]},backend:a}),i=$_(s,e.dtype,"max",a),o=I_({inputs:{x:i},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),o}(p,m,y,n);return h&&n.disposeIntermediateTensorInfo(p),b}const pF={kernelName:_t,backendName:"webgl",kernelFunc:dF},fF=m_({opSnippet:QT+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+t_+"\n  return result;\n",cpuKernelImpl:Y$}),mF={kernelName:Et,backendName:"webgl",kernelFunc:fF},gF={kernelName:Rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;jC(r,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=a;p(Hi(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=Mi(r.shape,s,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&b(l.inShape,l.outShape))return a_({inputs:{x:r},backend:n});const c=new mE(l,"max",!1);return n.runWebGLProgram(c,[r],r.dtype)}},bF={kernelName:Ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dataFormat:u,dimRoundingMode:l}=a,c=Oi(r.shape,s,i,[1,1,1],o,l,u),h=new gE(c,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}};class yF{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,a=e.dilationHeight,r=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=r-1-e.padInfo.top,o=s-1-e.padInfo.left,u=r*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${r};\n          wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class xF{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=u-1-e.padInfo.top,d=l-1-e.padInfo.left,p=o*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${r}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const wF={kernelName:Dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=a,h=Oi(i.shape,o,u,[1,1,1],l,c),d=new gE(h,"max",!0),p=n.runWebGLProgram(d,[i],i.dtype),f=new xF(h),m=n.runWebGLProgram(f,[r,p],i.dtype);return n.disposeIntermediateTensorInfo(p),m}},kF={kernelName:At,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s,output:i}=t,o=s;jC([s,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=a,d=Mi(o.shape,u,l,1,c,h),p=new mE(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new yF(d),g=n.runWebGLProgram(m,[r,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},vF={kernelName:Mt,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:a}=e,{filterSize:r,strides:s,pad:i,includeBatchInIndex:o}=t,u=n;p(4===a.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${a.shape.length}.`));const l=[1,1];p(Hi(s,l),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${l}'`));const c=Mi(a.shape,r,s,l,i),[h,d]=function(e,t,n,a){let r=new mE(n,"max",!1);const s=a.runWebGLProgram(r,[e],"float32");return r=new mE(n,"max",!0,!0,t),[s,a.runWebGLProgram(r,[e],"float32")]}(a,o,c,u);return[h,d]}},IF={kernelName:Ot,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:a}=e,{keepDims:r,axis:s}=t,i=n,o=a.shape.length,u=I(s,a.shape);let l=u;const c=Bo(l,o),h=null!=c,d=i.shouldExecuteOnCPU([a]),p=[];let f=a;if(h){if(d){const e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=a.shape[c[e]];const n=IT(e,a.shape,a.dtype,c,t);f=i.makeTensorInfo(t,a.dtype),i.texData.get(f.dataId).values=n}else f=E_(a,c,i);p.push(f),l=Vo(l.length,o)}Wo("sum",l,o);const[m,b]=zo(f.shape,l);let y=m;r&&(y=Po(m,u));const x=function(e,t,n,a){const r=g(t),s=I_({inputs:{x:e},attrs:{shape:[g(e.shape)/r,r]},backend:a}),i=$_(s,"float32","mean",a),o=I_({inputs:{x:i},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),o}(f,b,y,i);for(const e of p)i.disposeIntermediateTensorInfo(e);return x}},SF={kernelName:Lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,o=r.shape.length,u=I(s,r.shape);let l=u;const c=Bo(l,o);let h=r;null!=c&&(h=F_({inputs:{x:r},backend:n,attrs:{perm:c}}),l=Vo(l.length,r.shape.length)),Wo("min",l,o);const[d,p]=zo(h.shape,l),f=I_({inputs:{x:h},backend:n,attrs:{shape:[-1,g(p)]}}),m=$_(f,f.dtype,"min",n);let b;return b=I_(i?{inputs:{x:m},backend:n,attrs:{shape:Po(d,u)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),b}},NF=m_({opSnippet:QT+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+t_+"\n  return result;\n",cpuKernelImpl:J$}),CF={kernelName:zt,backendName:"webgl",kernelFunc:NF};class $F{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=l$(a),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),u="reflect"===n?0:1;this.userCode=1!==a?`\n      ${r} start = ${r}(${s});\n      ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        for (int i = 0; i < ${a}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${r} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class TF{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=l$(a),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=CT("rc",a),u=CT("source",a),l=`${o[a-1]} < ${this.outputShape[a-1]}`,c=1===a?"source":`vec2(${u.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===a){const e=`\n        ${r} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[a-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${r} source = rc;\n        ${r} lt = ${r}(lessThan(source, start));\n        ${r} gte = ${r}(greaterThanEqual(source, end));\n        ${r} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[a-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[a-2]} += 1;\n        if(${o[a-2]} < ${this.outputShape[a-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${o[a-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${r} start = ${r}(${s});\n      const ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const _F={kernelName:Pt,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a}=e,{paddings:r,mode:s}=n,i=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new TF(a.shape,r,s):new $F(a.shape,r,s);return t.runWebGLProgram(i,[a],a.dtype)}},EF=m_({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+t_+"\n  return result;\n"}),RF={kernelName:Wt,backendName:"webgl",kernelFunc:EF};class AF{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const FF=m_({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),DF={kernelName:qe,backendName:"webgl",kernelFunc:FF},MF="return a - b;",OF=m_({opSnippet:MF,packedOpSnippet:MF,supportsComplex:!0,cpuKernelImpl:wT}),LF={kernelName:jn,backendName:"webgl",kernelFunc:OF};function zF(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:s}=a,i=I([s],r.shape),o=dF({inputs:{x:r},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),u=Po(o.shape,i),l=I_({inputs:{x:o},backend:n,attrs:{shape:u}}),c=OF({inputs:{a:r,b:l},backend:n}),h=aA({inputs:{x:c},backend:n}),d=R_({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),p=I_({inputs:{x:d},backend:n,attrs:{shape:u}}),f=FF({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const PF={kernelName:Fn,backendName:"webgl",kernelFunc:zF},WF={kernelName:Bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:s,seed:i,normalized:o}=a,u=o?r:zF({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),l=u.shape[0],c=u.shape[1],h=new AF(l,c,s),d=[[i]],p=n.runWebGLProgram(h,[u],"int32",d);return o||n.disposeIntermediateTensorInfo(u),p}},BF=DT+"\n  return -x;\n",UF={kernelName:Vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])){const e=n.texData.get(a.dataId),[t,r]=Q$(e.values,a.shape,a.dtype);return n.makeTensorInfo(r,a.dtype,t)}let r;return r=q().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new qT(a.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new FT(a.shape,BF),n.runWebGLProgram(r,[a],a.dtype)}},VF=ll,GF={kernelName:Ht,backendName:"webgl",kernelFunc:function(e){ua("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=a,l=n.readSync(r.dataId),c=n.readSync(s.dataId),{selectedIndices:h}=VF(l,c,i,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},HF=cl,jF={kernelName:jt,backendName:"webgl",kernelFunc:function(e){ua("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=a,c=n.readSync(r.dataId),h=n.readSync(s.dataId),{selectedIndices:d,validOutputs:p}=HF(c,h,i,o,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},qF=hl,KF={kernelName:qt,backendName:"webgl",kernelFunc:function(e){ua("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=a,c=n.readSync(r.dataId),h=n.readSync(s.dataId),d=i,p=o,f=u,m=l,{selectedIndices:g,selectedScores:b}=qF(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class XF{constructor(e,t,n,a){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${a}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const YF={kernelName:Xt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:s,depth:i,onValue:o,offValue:u}=a,l=g(r.shape),c=new XF(l,i,o,u),h=I_({inputs:{x:r},backend:n,attrs:{shape:[l]}}),d=n.runWebGLProgram(c,[h],s);n.disposeIntermediateTensorInfo(h);const p=I_({inputs:{x:d},backend:n,attrs:{shape:[...r.shape,i]}});return n.disposeIntermediateTensorInfo(d),p}};function JF(e){const{inputs:t,backend:n}=e,{x:a}=t;if("complex64"===a.dtype){const e=zE({inputs:{input:a},backend:n}),t=JF({inputs:{x:e},backend:n}),r=QE({inputs:{input:a},backend:n}),s=JF({inputs:{x:r},backend:n}),i=s_({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),i}return fA({attrs:{shape:a.shape,dtype:a.dtype,value:"string"===a.dtype?"":0},backend:n})}const ZF={kernelName:na,backendName:"webgl",kernelFunc:JF},QF={kernelName:Kt,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const t=zE({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),s=QE({inputs:{input:r},backend:a}),i=JF({inputs:{x:s},backend:a}),o=s_({inputs:{real:n,imag:i},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),o}return fA({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:a})}},eD={kernelName:Yt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return sA({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{f(s,e.shape,"All tensors passed to stack must have matching shapes"),p(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=nR({inputs:t.map((e=>{const t=sA({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}};class tD{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=l$(a),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);this.userCode=1!==a?`\n      ${r} start = ${r}(${s});\n      ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${r} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class nD{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=l$(a),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=CT("rc",a),u=CT("source",a),l=`${o[a-1]} < ${this.outputShape[a-1]}`,c=1===a?"source":`vec2(${u.slice(-2).join()})`,h=[`${r} rc = outputLoc;`,`${o[a-1]} += 1;\n       if(${l}) {\n      `,1===a?"":`}\n       rc = outputLoc;\n       ${o[a-2]} += 1;\n       if(${o[a-2]} < ${this.outputShape[a-2]}) {`,1===a?"":`  ${o[a-1]} += 1;\n         if(${l}) {`],d=1===a?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let e=0,t=1===a?2:4;e<t;e++)p+=`\n        ${h[e]}\n        if (${d}) {\n          result[${e}] = float(value);\n        } else {\n          ${r} source = rc - start;\n          result[${e}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;p+=1===a?"} ":"}}",this.userCode=`\n      const ${r} start = ${r}(${s});\n      const ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const aD=e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,constantValue:i}=a;if(0===g(r.shape)){const e=s.map(((e,t)=>e[0]+r.shape[t]+e[1]));return fA({backend:n,attrs:{shape:e,value:i,dtype:r.dtype}})}const o=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new nD(r.shape,s,i):new tD(r.shape,s,i),u=[[i]];return n.runWebGLProgram(o,[r],r.dtype,u)},rD={kernelName:Jt,backendName:"webgl",kernelFunc:aD},sD=m_({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+t_+"\n  return result;\n"}),iD={kernelName:Zt,backendName:"webgl",kernelFunc:sD},oD={kernelName:en,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,o=r.shape.length,u=[],l=I(s,r.shape);let c=l;const h=Bo(c,o);let d,p=r;if(null!=h&&(p=F_({inputs:{x:r},backend:n,attrs:{perm:h}}),c=Vo(c.length,o),u.push(p)),Wo("prod",c,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:a,outDtype:r}=tT(p.shape,p.dtype,e,c);d=n.makeTensorInfo(a,r,t)}else{const[e,t]=zo(p.shape,c),a=g(t),s=I_({inputs:{x:p},backend:n,attrs:{shape:[-1,a]}}),i=$_(s,hr(r.dtype),"prod",n);d=I_({inputs:{x:i},backend:n,attrs:{shape:e}}),u.push(s),u.push(i)}if(i){u.push(d);const e=Po(d.shape,l);d=I_({inputs:{x:d},backend:n,attrs:{shape:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},uD={kernelName:tn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{paramsNestedSplits:r,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=a,u=r.map((e=>n.readSync(e.dataId))),l=r.map((e=>e.shape)),c=n.readSync(s.dataId),h=n.readSync(i.dataId),[d,p,f]=nT(u,l,c,s.shape,s.dtype,h,i.shape,o),m=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,s.dtype,p);return m.concat([g])}},lD={kernelName:nn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:a,limits:r,deltas:s}=t,i=n.readSync(a.dataId),o=n.readSync(r.dataId),u=n.readSync(s.dataId),[l,c]=aT(i,a.shape,a.dtype,o,r.shape,u,s.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([c.length],a.dtype,c)]}},cD={kernelName:an,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{shape:r,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:u}=a,l=n.readSync(r.dataId),c=n.readSync(s.dataId),h=n.readSync(i.dataId),d=o.map((e=>n.readSync(e.dataId))),p=o.map((e=>e.shape)),[f,m]=rT(l,r.shape,c,s.shape,s.dtype,h,i.shape,d,p,u);return n.makeTensorInfo(f,s.dtype,m)}},hD=e=>{const{backend:t,attrs:n}=e,{start:a,stop:r,step:s,dtype:i}=n,o=sT(a,r,s,i);return t.makeTensorInfo([o.length],i,o)},dD={kernelName:rn,backendName:"webgl",kernelFunc:hD},pD=f_({opSnippet:"return 1.0 / x;"}),fD={kernelName:on,backendName:"webgl",kernelFunc:pD},mD=f_({opSnippet:DT+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),gD={kernelName:un,backendName:"webgl",kernelFunc:mD},bD=f_({opSnippet:DT+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),yD={kernelName:fn,backendName:"webgl",kernelFunc:bD};class xD{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[a&&t>1?i-1:i,a&&n>1?o-1:o],c=[a&&t>1?t-1:t,a&&n>1?n-1:n];let h;h=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class wD{constructor(e,t,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[a&&t>1?i-1:i,a&&n>1?o-1:o],c=[a&&t>1?t-1:t,a&&n>1?n-1:n];let h;h=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const kD={kernelName:dn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=a,[u,l]=o,c=q().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new wD(r.shape,u,l,s,i):new xD(r.shape,u,l,s,i);return n.runWebGLProgram(c,[r],"float32")}};class vD{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,r]=t,[,s,i]=e,o=[n&&s>1?a-1:a,n&&i>1?r-1:r],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${a-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const ID={kernelName:pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:i}=a,o=new vD(s.shape,r.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};class SD{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[a&&t>1?i-1:i,a&&n>1?o-1:o],c=[a&&t>1?t-1:t,a&&n>1?n-1:n],h=a?"0.5":"0.0";let d;d=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class ND{constructor(e,t,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[a&&t>1?i-1:i,a&&n>1?o-1:o],c=[a&&t>1?t-1:t,a&&n>1?n-1:n],h=a?"0.5":"0.0";let d;d=r?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const CD={kernelName:cn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=a,[u,l]=o,c=q().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new ND(r.shape,u,l,s,i):new SD(r.shape,u,l,s,i);return n.runWebGLProgram(c,[r],r.dtype)}};class $D{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,r]=t,[,s,i]=e,o=[n&&s>1?a-1:a,n&&i>1?r-1:r],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const TD={kernelName:hn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:i}=a,o=new $D(s.shape,r.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};class _D{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const a=e.map(((n,a)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(a))).join(","),r=l$(n);this.userCode=`\n      void main() {\n        ${r} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}}class ED{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const a=CT("rc",n),r=`${a[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${a[n-2]} + 1 < ${this.outputShape[n-2]}`,i=l$(n);function o(n){const a=e.map(((a,r)=>function(n,a){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${a[n]} - 1`:`${a[n]}`}(r,n)));return`getChannel(getX(${a.join(",")}), vec2(${a.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${r}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(a.slice())};\n          if(${r}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(a.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(a.slice())};\n            if(${r}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(a.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const RD={kernelName:mn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a,i=r.shape.length,o=I(s,r.shape);if(0===i)return a_({inputs:{x:r},backend:n});const u=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ED(r.shape,o):new _D(r.shape,o);return n.runWebGLProgram(u,[r],r.dtype)}};class AD{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],a=e[2];this.outputShape=e;let r="";r="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${r}\n          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const FD={kernelName:ra,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:a}=e,{radians:r,fillValue:s,center:i}=t,o=n,u=new AD(a.shape,s),[l,c]=Kl(i,a.shape[1],a.shape[2]),h=[[l,c,Math.sin(r),Math.cos(r)]];return o.runWebGLProgram(u,[a],a.dtype,h)}},DD=f_({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),MD={kernelName:gn,backendName:"webgl",kernelFunc:DD},OD=f_({opSnippet:"return inversesqrt(x);",cpuKernelImpl:iT}),LD={kernelName:bn,backendName:"webgl",kernelFunc:OD};class zD{constructor(e,t,n,a,r,s,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const u=l$(r.length),l=l$(s.length);let c="";1===n?c="i":2===n&&(c="i, j");const h=`getIndices(${c})`;let d="";1===a?d="i":2===a&&(d="i, coords[1]");const p=`getUpdates(${d})`;let f="";o&&(f="coords[0], coords[1]");const m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides";this.userCode=`\n        ${u} strides = ${u}(${r});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${h});\n              flattenedIndex += index * ${g};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(${m}, sum, float(found)));\n        }\n      `}}class PD{constructor(e,t,n,a,r,s,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;const u=l$(r.length),l=l$(s.length);let c="";1===n?c="i":2===n&&(c="i, j");const h=`getIndices(${c})`;let d="";1===a?d="i":2===a&&(d="i, coords[1]");const p=`getUpdates(${d})`;let f="";o&&(f="coords[0], coords[1]");const m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides",b=t>1?"strides[j + 1]":"strides";this.userCode=`\n        ${u} strides = ${u}(${r});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${e}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${t}; j+=2) {\n              ivec4 index = round(${h});\n              flattenedIndex += index.xz * ${g};\n              if (j + 1 < ${t}) {\n                flattenedIndex += index.yw * ${b};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ${p};\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(${m}, sum, found));\n        }\n      `}}const WD={kernelName:yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:s}=t,{shape:i}=a,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=hi(0,r,i),d=[h/l,l];if(0===h)return n.makeTensorInfo(i,r.dtype);const p=I_({inputs:{x:r},backend:n,attrs:{shape:[u,o]}}),f=I_({inputs:{x:s},backend:n,attrs:{shape:[u,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0]));let g;g=q().getBool("WEBGL_PACK")?new PD(u,o,p.shape.length,f.shape.length,c,d):new zD(u,o,p.shape.length,f.shape.length,c,d);const b=n.runWebGLProgram(g,[f,p,m],f.dtype),y=I_({inputs:{x:b},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(m),y}};class BD{constructor(e,t,n,a){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const r=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,s=2===q().getNumber("WEBGL_VERSION")?"while (left < right) {":r,i="left"===a?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${s}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${i} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const UD={kernelName:wn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:s}=t,{side:i}=a,o=new BD(r.shape[0],r.shape[1],s.shape[1],i),u=[[r.shape[1]]];return n.runWebGLProgram(o,[r,s],"int32",u)}};class VD{constructor(e,t,n){let a,r;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)r="resRC",a="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let a=0;a<t.length;a++)i.push(`${n[a]}`),a<e&&s.push(`${n[a]}`);a=s.join(),r=i.join()}const s=l$(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${a});\n        if (cVal >= 1.0) {\n          setOutput(getA(${r}));\n        } else {\n          setOutput(getB(${r}));\n        }\n      }\n    `}}const GD={kernelName:kn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t,i=new VD(a.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(i,[a,r,s],cr(r.dtype,s.dtype))}},HD=f_({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${ec};\n  float scale = ${tc};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),jD={kernelName:vn,backendName:"webgl",kernelFunc:HD},qD=f_({opSnippet:p_+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:uT}),KD={kernelName:$n,backendName:"webgl",kernelFunc:qD},XD=f_({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),YD={kernelName:Cn,backendName:"webgl",kernelFunc:XD},JD=f_({opSnippet:p_+"\n  return sin(x);\n",packedOpSnippet:`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${t_}\n  return result;\n`}),ZD={kernelName:Sn,backendName:"webgl",kernelFunc:JD},QD=f_({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),eM={kernelName:Nn,backendName:"webgl",kernelFunc:QD},tM=f_({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),nM={kernelName:Tn,backendName:"webgl",kernelFunc:tM},aM={kernelName:Rn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,paddings:i}=a;p(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=s.reduce(((e,t)=>e*t)),u=[[0,0]];u.push(...i);for(let e=1+s.length;e<r.shape.length;++e)u.push([0,0]);const l=[],c=aD({inputs:{x:r},backend:n,attrs:{paddings:u,constantValue:0}}),h=Xl(c.shape,s,o,!1),d=Yl(h.length,s.length,!1),f=Jl(c.shape,s,o,!1),m=I_({inputs:{x:c},backend:n,attrs:{shape:h}}),g=F_({inputs:{x:m},backend:n,attrs:{perm:d}}),b=I_({inputs:{x:g},backend:n,attrs:{shape:f}});return l.push(c),l.push(m),l.push(g),l.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},rM={kernelName:Dn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:a,values:r,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==a.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${a.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n         ${r.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(a.dataId),u=n.readSync(r.dataId),l=n.readSync(s.dataId),c=n.readSync(i.dataId)[0],[h,d,p,f,m]=hT(o,a.shape,a.dtype,u,r.dtype,l,c);return[n.makeTensorInfo(d,a.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}},sM={kernelName:Mn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:a,inputShape:r,newShape:s}=t;if(2!==a.shape.length)throw new Error(`Input indices should be a matrix but received shape ${a.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.readSync(r.dataId)),o=n.readSync(a.dataId),u=Array.from(n.readSync(s.dataId)),[l,c,h]=dT(o,a.shape,a.dtype,i,u);return[n.makeTensorInfo(c,a.dtype,l),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}},iM={kernelName:On,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${r.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${s.shape}`);const i=n.readSync(a.dataId),o=n.readSync(r.dataId),u=n.readSync(s.dataId),[l,c]=pT(i,a.shape,a.dtype,o,u,!0);return n.makeTensorInfo(c,a.dtype,l)}},oM={kernelName:Ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${r.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${s.shape}`);const i=n.readSync(a.dataId),o=n.readSync(r.dataId),u=n.readSync(s.dataId),[l,c]=pT(i,a.shape,a.dtype,o,u);return n.makeTensorInfo(c,a.dtype,l)}},uM={kernelName:zn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:s,defaultValue:i}=t,{outputShape:o}=a,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=hi(0,r,o),p=!1;if("string"===s.dtype){const e=n.bufferSync(r),t=n.bufferSync(s),a=La(n.readSync(i.dataId)[0]),f=oT(e,t,o,d,c,l,u,h,a,p);return n.makeTensorInfo(o,f.dtype,f.values)}const f=new zD(l,u,r.shape.length,s.shape.length,h,[d,1],p),m=n.runWebGLProgram(f,[s,r,i],s.dtype),g=I_({inputs:{x:m},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(m),g}},lM={kernelName:An,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:i}=a,o=I(i,r.shape)[0],u=Cc(r,s,o),l=r.shape.length,c=new Array(l).fill(0),h=r.shape.slice();return u.map((e=>{const t=[...h];t[o]=e;const a=EE({inputs:{x:r},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,a}))}},cM="return sqrt(x);",hM=f_({opSnippet:cM,packedOpSnippet:cM,cpuKernelImpl:fT}),dM={kernelName:_n,backendName:"webgl",kernelFunc:hM},pM={kernelName:Wn,backendName:"webgl",kernelFunc:f_({opSnippet:"return x * x;"})},fM="return (a - b) * (a - b);",mM=m_({opSnippet:fM,packedOpSnippet:fM}),gM={kernelName:Pn,backendName:"webgl",kernelFunc:mM},bM={kernelName:Bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");const s=Uc(n.readSync(r.dataId)),i=mT(s,"string",a);return n.makeTensorInfo(r.shape,"string",i)}},yM={kernelName:aa,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:a}=e,r=DT+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,s=new FT(a.shape,r);return n.runWebGLProgram(s,[a],a.dtype)}};class xM{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const a=n.length,r=l$(n.length),s=l$(n.length);let i="";if(1===a)i="coords * strides + begin";else{let e=0;i=n.map(((t,a)=>(e++,1===n.length?`coords * strides[${a}] + begin[${a}]`:`coords[${e-1}] * strides[${a}] + begin[${a}]`))).join(",")}this.userCode=`\n      ${r} begin = ${r}(${e});\n      ${r} strides = ${r}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const wM={kernelName:Un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=a,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:b,isSimpleSlice:y,begin:x,end:w,strides:k}=_i(r.shape,s,i,o,u,l,c,h,d);let v;if(g)v=I_({inputs:{x:r},backend:n,attrs:{shape:m}});else if(b||y){p(r.shape.length>=1,(()=>`Input must have rank at least 1, got: ${r.shape.length}`));const e=gi(x,w,k),t=EE({inputs:{x:r},backend:n,attrs:{begin:x,size:e}});v=I_({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else if(n.shouldExecuteOnCPU([r])){const e=n.readSync(r.dataId),t=ks(r.shape,r.dtype,e),a=gT(f,t,k,x);v=n.makeTensorInfo(m,r.dtype,a.values)}else{const e=new xM(x,k,f);v=n.runWebGLProgram(e,[r],r.dtype)}const I=I_({inputs:{x:v},backend:n,attrs:{shape:m}});return n.disposeIntermediateTensorInfo(v),I}},kM={kernelName:Vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:s,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=a,{data:c,dataSplits:h}=t,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,m]=bT(d,p,r,s,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},vM={kernelName:Gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{skipEmpty:r}=a,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(s.dataId),u=n.readSync(i.dataId)[0],[l,c,h]=yT(o,u,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},IM={kernelName:Hn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{numBuckets:r}=a,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(s.dataId),o=xT(i,r);return n.makeTensorInfo(s.shape,"int32",o)}},SM=f_({opSnippet:"return tan(x);"}),NM={kernelName:qn,backendName:"webgl",kernelFunc:SM},CM=f_({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),$M={kernelName:Kn,backendName:"webgl",kernelFunc:CM},TM={kernelName:xn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{tensor:r,indices:s,updates:i}=t,{}=a,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=hi(0,s,r.shape),d=[h/l,l];if(0===h)return n.makeTensorInfo(r.shape,s.dtype);const p=I_({inputs:{x:s},backend:n,attrs:{shape:[u,o]}}),f=I_({inputs:{x:i},backend:n,attrs:{shape:[u,l]}}),m=I_({inputs:{x:r},backend:n,attrs:{shape:d}}),g=new zD(u,o,p.shape.length,f.shape.length,c,d,!1,!0),b=n.runWebGLProgram(g,[f,p,m],m.dtype),y=I_({inputs:{x:b},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),y}};class _M{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;const a=l$(this.rank),r=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],a=[];for(let t=0;t<e.length;t++)a.push(`imod(${n[t]}, ${e[t]})`);return a.join()}(e);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}function EM(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:s}=a;if("string"===r.dtype||r.shape.length>5){const e=n.readSync(r.dataId),t="string"===r.dtype?e.map((e=>La(e))):e,a=ks(r.shape,r.dtype,t),i=kT(a,s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new _M(r.shape,s);return n.runWebGLProgram(i,[r],r.dtype)}const RM={kernelName:Xn,backendName:"webgl",kernelFunc:EM};class AM{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class FM{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function DM(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function MM(e){let t=1;for(;t<e;)t*=2;return t}const OM={kernelName:Yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:s,sorted:i}=a,o=q().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=q().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=r.shape,c=l[l.length-1];if(n.shouldExecuteOnCPU([r])||c<o||s>u){const e=n.readSync(r.dataId),[t,a]=vT(e,l,r.dtype,s,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(a.shape,a.dtype,a.values)]}if(0===s)return l[l.length-1]=0,[n.makeTensorInfo(l,r.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(1===c)return[r,fA({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const h=n.texData.get(r.dataId),d=null!==h&&h.isPacked,p=d?n.unpackTensor(r):r,f=g(l)/c,m=I_({inputs:{x:p},attrs:{shape:[f,c]},backend:n});d&&DM(n,p);const b=MM(s),y=MM(c);let x=null;const w=()=>null===x?[m,m]:[m,x],k=(e,t,a)=>{const r=w(),s=new AM(a),i=[[c],[null===x?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=x;x=n.runWebGLProgram(s,r,"int32",i),DM(n,o)};for(let e=1;e<b;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)k(t,n,[f,y])}for(let e=y;e>b;e/=2){const t=w(),a=new FM([f,e/2]),r=[[c],[null===x?1:0],[b]],s=x;x=n.runWebGLProgram(a,t,"int32",r),DM(n,s);const i=b/2,o=2*i;for(let e=i;e>=1;e/=2)k(o,e,x.shape)}let v=x;x=EE({inputs:{x},backend:n,attrs:{begin:0,size:[f,s]}}),DM(n,v);let I=FA({inputs:{x:m,indices:x},backend:n,attrs:{axis:1,batchDims:1}});DM(n,m);const S=l.slice(0,-1);S.push(s),v=x,x=I_({inputs:{x},attrs:{shape:S},backend:n}),DM(n,v);const N=I;return I=I_({inputs:{x:I},attrs:{shape:S},backend:n}),DM(n,N),[I,x]}};class LM{constructor(e,t,n,a,r,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const i="nearest"===n?1:2;let o;switch(a){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${r});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${r});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const zM={kernelName:Jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=a,[c,h,d,p]=r.shape,[f,m]=null!=l?l:[h,d],g=new LM(h,d,i,o,u,[c,f,m,p]);return n.runWebGLProgram(g,[r,s],"float32")}},PM={kernelName:Qn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:s}=t;jC(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=a.readSync(s.dataId),{outputValues:o,outputShape:u,indices:l}=ST(i,r,s.shape,s.dtype);return[a.makeTensorInfo(u,s.dtype,o),a.makeTensorInfo([l.length],"int32",l)]}},WM={kernelName:ea,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:r}=t;let{axis:s}=a;s<0&&(s+=r.shape.length);const i=r,o=i.shape.length,u=r.shape[s],l=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==s&&(l[c++]=i.shape[e]);const h=[],d=new Array(o).fill(0),p=i.shape.slice();p[s]=1;const f=new Array(u);for(let e=0;e<f.length;e++){d[s]=e;const t=EE({inputs:{x:i},backend:n,attrs:{begin:d,size:p}}),a=I_({inputs:{x:t},backend:n,attrs:{shape:l}});f[e]=a,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class BM{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,a=e.batchSize,r=e.inSize,s=e.numSegments,i=s*Math.ceil(r/n);this.outputShape=[a,i];const o=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";r%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `);let h="";r%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}const UM={kernelName:ta,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:s}=t,{numSegments:i}=a,o=r.shape.length,u=[];let l=0;const c=Bo([l],o);let h=r;null!=c&&(h=F_({inputs:{x:r},backend:n,attrs:{perm:c}}),u.push(h),l=Vo(1,o)[0]);const d=Wc(h.shape,l,i),p=g([h.shape[l]]),f=I_({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});u.push(f);const m=hr(r.dtype),b=(e,t,a,r,s)=>{const i=e.shape[0],o=e.shape[1],l=Pc(o,s),c=new BM({windowSize:l,inSize:o,batchSize:i,numSegments:s},t),h=n.compileAndRun(c,[e,a],r);if(u.push(h),h.shape[1]===s)return h;const d=hD({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),p=EM({inputs:{x:d},backend:n,attrs:{reps:[o/l]}});return u.push(d),u.push(p),b(h,t,p,r,s)},y=I_({inputs:{x:b(f,"unsortedSegmentSum",s,m,i)},backend:n,attrs:{shape:d}});let x=y;if(null!=c){u.push(y);const e=Uo(c);x=F_({inputs:{x},backend:n,attrs:{perm:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},VM=[L_,P_,B_,V_,j_,X_,Y_,J_,aE,rE,iE,uE,cE,dE,fE,bE,yE,kE,vE,IE,CE,AE,FE,DE,ME,WE,VE,jE,i_,XE,aR,hR,gR,yR,xR,wR,kR,IR,NR,$R,FR,DR,MR,LR,WR,VR,GR,jR,KR,XR,JR,ZR,eA,nA,rA,iA,lA,dA,mA,bA,wA,vA,NA,TA,_A,RA,DA,OA,zA,r_,PA,eR,BA,VA,HA,l_,qA,XA,YA,ZA,eF,nF,rF,iF,lF,hF,pF,mF,gF,bF,wF,kF,vF,IF,SF,CF,_F,RF,WF,v_,UF,GF,jF,KF,LE,YF,QF,eD,rD,iD,d_,oD,uD,lD,cD,dD,PE,DF,fD,gD,yD,S_,kD,ID,CD,TD,RD,FD,MD,LD,WD,UD,GD,jD,KD,YD,ZD,eM,RE,PF,nM,aM,rM,sM,iM,oM,uM,lM,dM,pM,gM,bM,yM,wM,kM,vM,IM,LF,A_,NM,$M,TM,RM,OM,zM,D_,PM,WM,UM,ZF];for(const e of VM)ma(e);var GM,HM;let jM;!function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"}(GM||(GM={})),function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu"}(HM||(HM={}));const qM={kernelName:sa,backendName:"wasm",setupFunc:function(e){jM=e.wasm.cwrap(sa,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:i,preluActivationWeights:o}=t;if("float32"!==r.dtype||"float32"!==s.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");const{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=a,d=n.dataIdMap.get(r.dataId).id,p=n.dataIdMap.get(s.dataId).id;let f=0;if(null!=i){const e=n.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);f=e.id}const m=null==o?0:n.dataIdMap.get(o.dataId).id,g=HM[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);const b=u?r.shape[2]:r.shape[1],y=l?s.shape[1]:s.shape[2],x=Ks(r.shape.slice(0,-2),s.shape.slice(0,-2)),w=n.makeOutput([...x,b,y],r.dtype),k=n.dataIdMap.get(w.dataId).id,v=new Uint8Array(new Int32Array(r.shape).buffer),I=new Uint8Array(new Int32Array(s.shape).buffer);return jM(d,v,r.shape.length,p,I,s.shape.length,u,l,g,f,m,h||0,k),w}};function KM(e,t){let n;return{kernelName:e,backendName:"wasm",setupFunc:function(t){n=t.wasm.cwrap(e,null,["number","number","number"])},kernelFunc:function(e){const{backend:a,inputs:{x:r}}=e,s=a.dataIdMap.get(r.dataId).id,i=a.makeOutput(r.shape,t||r.dtype),o=a.dataIdMap.get(i.dataId).id;return 0===g(i.shape)||n(s,GM[r.dtype],o),i}}}const XM=KM(Z),YM=KM(Q),JM=KM(ee);function ZM(e,t,n){let a;return{kernelName:e,backendName:"wasm",setupFunc:function(t){a=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:r}=e,{a:s,b:i}=r,o=t.dataIdMap.get(s.dataId).id,u=t.dataIdMap.get(i.dataId).id,l=null!=n?n:s.dtype,c=Ks(s.shape,i.shape),h=t.makeOutput(c,l);if(0===g(c))return h;const d=new Uint8Array(new Int32Array(s.shape).buffer),p=new Uint8Array(new Int32Array(i.shape).buffer),f=t.dataIdMap.get(h.dataId).id;return a(o,d,s.shape.length,u,p,i.shape.length,GM[s.dtype],f),h}}}const QM=ZM(te);let eO;const tO={kernelName:ne,backendName:"wasm",setupFunc:function(e){eO=e.wasm.cwrap(ne,null,["array","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,a=n.makeOutput(t[0].shape,t[0].dtype);if(0===g(a.shape))return a;const r=t.map((e=>n.dataIdMap.get(e.dataId).id)),s=new Uint8Array(new Int32Array(r).buffer),i=n.dataIdMap.get(a.dataId).id;return eO(s,r.length,GM[a.dtype],i),a}};function nO(e){const{inputs:{x:t},backend:n}=e;if("string"===t.dtype)return Mr(n.readSync(t.dataId),t.shape,t.dtype);const a=n.makeOutput(t.shape,t.dtype),r=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(a).set(r),a}const aO={kernelName:dt,backendName:"wasm",kernelFunc:nO};let rO;function sO(e){const{inputs:t,backend:n,attrs:a}=e,[r,s]=function(e,t){const n=[],a=[];for(let r=0;r<e.length;++r)1!==e[r]&&n.push(e[r]),1!==e[t[r]]&&a.push(t[r]);for(let e=0;e<a.length;++e){let t=-1;for(let n=0;n<a.length;++n)a[n]>=e&&(-1===t||a[t]>a[n])&&(t=n);a[t]=e}return[n,a]}(t.x.shape,a.perm);let i=!0;for(let e=0;e<s.length;e++)s[e]!==e&&(i=!1);const o=function(e,t){const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];return n}(t.x.shape,a.perm),u={dataId:t.x.dataId,shape:r,dtype:t.x.dtype};if(i){const e=nO({inputs:t,backend:n});return e.shape=o,e}const l=n.makeOutput(o,u.dtype),c=n.dataIdMap.get(u.dataId).id,h=n.dataIdMap.get(l.dataId).id,d=new Uint8Array(new Int32Array(s).buffer),p=new Uint8Array(new Int32Array(u.shape).buffer);return rO(c,p,u.shape.length,GM[u.dtype],h,d,s.length),l}const iO={kernelName:Zn,backendName:"wasm",kernelFunc:sO,setupFunc:function(e){rO=e.wasm.cwrap(Zn,null,["number","array","number","number","number","array","number"])}};function oO(e,t,n){const a=e.shape,r=e.shape.length,s=I(t,a);let i=s;const o=Bo(i,r);let u=null,l=!1;if(null!=o){const t=new Array(r);for(let e=0;e<t.length;e++)t[e]=a[o[e]];i=Vo(i.length,r),u=sO({inputs:{x:e},attrs:{perm:o},backend:n});const s=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(u.dataId).id!==s&&(l=!0)}return{transposed:u,originalAxes:s,axes:i,inputWasTransposed:l}}let uO;const lO={kernelName:ae,backendName:"wasm",setupFunc:function(e){uO=e.wasm.cwrap(ae,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:s}=a,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,u=i;const{transposed:l,axes:c,originalAxes:h,inputWasTransposed:d}=oO(i,r,t);d&&(u=l,o=t.dataIdMap.get(l.dataId).id),Wo("all",c,u.shape.length);const[p,f]=zo(u.shape,c),m=g(f),b=t.makeOutput(p,i.dtype);if(0!==g(u.shape)){const e=t.dataIdMap.get(b.dataId).id;uO(o,m,e)}if(d&&t.disposeData(l.dataId),s){const e=Po(b.shape,h);b.shape=e}return b}};let cO;const hO={kernelName:re,backendName:"wasm",setupFunc:function(e){cO=e.wasm.cwrap(re,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:s}=a,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,u=i;const{transposed:l,axes:c,originalAxes:h,inputWasTransposed:d}=oO(i,r,t);d&&(u=l,o=t.dataIdMap.get(l.dataId).id),Wo("any",c,u.shape.length);const[p,f]=zo(u.shape,c),m=g(f),b=t.makeOutput(p,i.dtype);if(0!==g(u.shape)){const e=t.dataIdMap.get(b.dataId).id;cO(o,m,e)}if(d&&t.disposeData(l.dataId),s){const e=Po(b.shape,h);b.shape=e}return b}};function dO(e){let t;return{kernelName:e,backendName:"wasm",setupFunc:function(n){t=n.wasm.cwrap(e,null,["number","number","number","number","number"])},kernelFunc:function(e){const{backend:n,inputs:a,attrs:r}=e,{axis:s}=r,{x:i}=a,o=n.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:h,inputWasTransposed:d}=oO(i,s,n);if(d){const e=n.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e)}const p=l.shape.slice(0,-1),f=n.makeOutput(p,"int32"),m=n.dataIdMap.get(f.dataId).id,b=g(f.shape),y=l.shape[h[0]];return t(u,GM[l.dtype],b,y,m),d&&n.disposeData(c.dataId),f}}}const pO=dO(se),fO=dO(ie),mO=KM(oe),gO=KM(ue),bO=KM(le),yO=ZM(he),xO=KM(ce);let wO;const kO={kernelName:de,backendName:"wasm",setupFunc:function(e){wO=e.wasm.cwrap(de,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,r=t.x,s=a.dataIdMap.get(r.dataId).id,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=n,c=Mi(r.shape,i,o,1,u,l),h=c.filterHeight,d=c.filterWidth,p=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,g=c.padInfo.left,b=c.strideHeight,y=c.strideWidth,x=c.inChannels;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);if(1!==c.dilationWidth||1!==c.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${c.dilationHeight}, ${c.dilationWidth}].`);const w=a.makeOutput(c.outShape,"float32"),k=a.dataIdMap.get(w.dataId).id;return wO(s,r.shape[0],r.shape[1],r.shape[2],h,d,p,f,m,g,b,y,x,k),w}};let vO;const IO={kernelName:fe,backendName:"wasm",setupFunc:function(e){vO=e.wasm.cwrap("AvgPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=a,c=Oi(r.shape,s,i,1,o,u,l),h=n.makeOutput(c.outShape,r.dtype);return vO(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(h.dataId).id,c.batchSize,c.inChannels,c.inDepth,c.inHeight,c.inWidth,c.outDepth,c.outHeight,c.outWidth,c.strideDepth,c.strideHeight,c.strideWidth,c.dilationDepth,c.dilationHeight,c.dilationWidth,c.effectiveFilterDepth,c.effectiveFilterHeight,c.effectiveFilterWidth,c.padInfo.front,c.padInfo.top,c.padInfo.left),h}};let SO;const NO={kernelName:me,backendName:"wasm",setupFunc:function(e){SO=e.wasm.cwrap("AvgPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=a,c=Oi(s.shape,i,o,1,u,l),h=n.makeOutput(s.shape,s.dtype);return SO(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(h.dataId).id,c.batchSize,c.inChannels,c.inDepth,c.inHeight,c.inWidth,c.outDepth,c.outHeight,c.outWidth,c.strideDepth,c.strideHeight,c.strideWidth,c.dilationDepth,c.dilationHeight,c.dilationWidth,c.effectiveFilterDepth,c.effectiveFilterHeight,c.effectiveFilterWidth,c.padInfo.front,c.padInfo.top,c.padInfo.left,c.filterDepth,c.filterHeight,c.filterWidth),h}};let CO;const $O={kernelName:pe,backendName:"wasm",setupFunc:function(e){CO=e.wasm.cwrap("AvgPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,{filterSize:i,strides:o,pad:u}=a,l=Mi(s.shape,i,o,1,u),c=n.makeOutput(s.shape,s.dtype);return CO(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(c.dataId).id,l.batchSize,l.inChannels,l.inHeight,l.inWidth,l.outHeight,l.outWidth,l.strideHeight,l.strideWidth,l.dilationHeight,l.dilationWidth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.top,l.padInfo.left,l.filterHeight,l.filterWidth),c}};function TO(e){const{inputs:t,attrs:n}=e,{x:a}=t,{shape:r}=n,s=g(a.shape),i=v(r,s);return p(s===g(i),(()=>`new shape: ${i}, old shape: ${a.shape}. New shape and old shape must have the same number of elements.`)),e.backend.incRef(a.dataId),{dataId:a.dataId,shape:i,dtype:a.dtype}}const _O={kernelName:ln,backendName:"wasm",kernelFunc:TO};let EO;const RO={kernelName:ge,backendName:"wasm",setupFunc:function(e){EO=e.wasm.cwrap(ge,null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:i,transposeB:o}=a;if("float32"!==r.dtype||"float32"!==s.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");const u=r.shape.length,l=s.shape.length,c=i?r.shape[u-2]:r.shape[u-1],h=o?s.shape[l-1]:s.shape[l-2],d=i?r.shape[u-1]:r.shape[u-2],f=o?s.shape[l-2]:s.shape[l-1],m=r.shape.slice(0,-2),b=s.shape.slice(0,-2),y=g(m),x=g(b),w=Ks(r.shape.slice(0,-2),s.shape.slice(0,-2)).concat([d,f]);p(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${r.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));const k=o?[x,f,h]:[x,h,f],v=TO({inputs:{x:r},backend:n,attrs:{shape:i?[y,c,d]:[y,d,c]}}),I=TO({inputs:{x:s},backend:n,attrs:{shape:k}}),S=n.dataIdMap.get(v.dataId).id,N=n.dataIdMap.get(I.dataId).id,C=i?v.shape[2]:v.shape[1],$=o?I.shape[1]:I.shape[2],T=Math.max(y,x),_=n.makeOutput([T,C,$],v.dtype),E=n.dataIdMap.get(_.dataId).id,R=new Uint8Array(new Int32Array(v.shape).buffer),A=new Uint8Array(new Int32Array(I.shape).buffer);return EO(S,R,v.shape.length,N,A,I.shape.length,i,o,E),n.disposeData(v.dataId),n.disposeData(I.dataId),_.shape=w,_}};function AO(e){const{inputs:{x:t},attrs:{begin:n,size:a},backend:r}=e,[s,i]=Ti(t,n,a),o=Ci(t.shape,s,i),u=r.readSync(t.dataId),l=r.makeOutput(i,t.dtype),c=D(t.shape),h=r.dataIdMap.get(l.dataId);if(o){const e=$i(s,c);return"string"===t.dtype?h.stringBytes=u.slice(e,e+g(i)):r.typedArrayFromHeap(l).set(u.subarray(e,e+g(i))),l}if("string"===t.dtype){const e=ik(u,s,i,t.shape,t.dtype);return h.stringBytes=e,l}const d=r.typedArrayFromHeap(l),p=t.shape.length;if(2===p)!function(e,t,n,a,r){let s=0;const i=a[0],o=a[1],u=i+r[0];for(let a=i;a<u;a++){const i=a*t+o;n.set(e.subarray(i,i+r[1]),s),s+=r[1]}}(u,c[0],d,s,i);else if(3===p)!function(e,t,n,a,r,s){let i=0;const o=r[0],u=r[1],l=r[2],c=o+s[0],h=u+s[1];for(let r=o;r<c;r++)for(let o=u;o<h;o++){const u=r*t+o*n+l;a.set(e.subarray(u,u+s[2]),i),i+=s[2]}}(u,c[0],c[1],d,s,i);else if(4===p)!function(e,t,n,a,r,s,i){let o=0;const u=s[0],l=s[1],c=s[2],h=u+i[0],d=l+i[1],p=c+i[2],f=s[3];for(let s=u;s<h;s++)for(let u=l;u<d;u++)for(let l=c;l<p;l++){const c=s*t+u*n+l*a+f;r.set(e.subarray(c,c+i[3]),o),o+=i[3]}}(u,c[0],c[1],c[2],d,s,i);else{const e=ik(u,s,i,t.shape,t.dtype);d.set(e)}return l}const FO={kernelName:In,backendName:"wasm",kernelFunc:AO},DO={kernelName:be,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,crops:i}=a,o=s.reduce(((e,t)=>e*t)),u=Xl(r.shape,s,o),l=Yl(u.length,s.length),c=Jl(r.shape,s,o),h=Zl(i,s.length),d=Ql(c,i,s.length),p=TO({inputs:{x:r},backend:n,attrs:{shape:u}}),f=sO({inputs:{x:p},backend:n,attrs:{perm:l}}),m=TO({inputs:{x:f},backend:n,attrs:{shape:c}}),g=AO({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeData(p.dataId),n.disposeData(f.dataId),n.disposeData(m.dataId),g}};let MO;const OO={kernelName:ye,backendName:"wasm",setupFunc:function(e){MO=e.wasm.cwrap(ye,null,["number","number","boolean","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{x:r,weights:s}=n,{size:i}=a,o=0!==s.shape.reduce(((e,t)=>e*t),1),u=1===r.shape.length?[i]:[r.shape[0],i],l=t.makeOutput(u,s.dtype);function c(e){return t.dataIdMap.get(e.dataId).id}return MO(c(r),i,o,c(s),GM[s.dtype],c(l)),l}},LO=ZM(xe),zO={kernelName:we,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:r}=t,s=n.typedArrayFromHeap(a),i=n.typedArrayFromHeap(r),o=Ks(Array.from(s),Array.from(i));return n.makeOutput([o.length],"int32",void 0,new Int32Array(o))}};function PO(e){const{inputs:{x:t},attrs:{dtype:n},backend:a}=e,r=a.makeOutput(t.shape,n),s=a.typedArrayFromHeap(t);return a.typedArrayFromHeap(r).set(s),r}const WO={kernelName:ke,backendName:"wasm",kernelFunc:PO},BO=KM(ve);let UO;const VO={kernelName:Ie,backendName:"wasm",setupFunc:function(e){UO=e.wasm.cwrap(Ie,null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{clipValueMin:s,clipValueMax:i}=a,o=n.dataIdMap.get(r.dataId).id,u=n.makeOutput(r.shape,r.dtype),l=n.dataIdMap.get(u.dataId).id;return UO(o,s,i,l),u}};function GO(e){const{inputs:t,backend:n}=e,a=I(e.attrs.axis,t[0].shape)[0];Pl(t.map((e=>e.shape)),a);let r=Wl(t.map((e=>e.shape)),a);const s=t.filter((e=>g(e.shape)>0));if(1===s.length)return nO({inputs:{x:s[0]},backend:n});const i=n.makeOutput(r,t[0].dtype);if(0===g(r))return i;if("string"===s[0].dtype){const e=s.map((e=>{const t=g(e.shape.slice(a));return TO({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),o=e.map((e=>({vals:n.readSync(e.dataId),shape:e.shape})));r=Wl(e.map((e=>e.shape)),1);const u=1===e[0].shape[0],l=vk(o,r,t[0].dtype,u),c=Wl(s.map((e=>e.shape)),a);return i.shape=c,n.dataIdMap.get(i.dataId).stringBytes=Vc(l),e.forEach((e=>n.disposeData(e.dataId))),i}const o=g(s[0].shape.slice(0,a));let u=0;const l=s.map((e=>{const t=g(e.shape.slice(a));return u+=t,t})),c=s.map((e=>n.typedArrayFromHeap(e))),h=n.typedArrayFromHeap(i);for(let e=0;e<o;e++){let t=e*u;for(let n=0;n<c.length;n++){const a=l[n],r=e*a,s=c[n].subarray(r,r+a);h.set(s,t),t+=a}}return i}const HO={kernelName:Ce,backendName:"wasm",kernelFunc:GO};let jO;const qO={kernelName:$e,backendName:"wasm",setupFunc:function(e){jO=e.wasm.cwrap($e,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{x:r,filter:s}=t,i=a.dataIdMap.get(r.dataId).id,o=a.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:c,dimRoundingMode:h,dataFormat:d}=n,p=qi(d),f=Li(r.shape,s.shape,u,l,c,h,!1,p),m=f.filterHeight,g=f.filterWidth,b=f.padInfo.top,y=f.padInfo.right,x=f.padInfo.bottom,w=f.padInfo.left,k=f.dilationHeight,v=f.dilationWidth,I=f.strideHeight,S=f.strideWidth,N=f.inChannels,C=f.outChannels,$="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);const T=a.makeOutput(f.outShape,"float32"),_=a.dataIdMap.get(T.dataId).id;return jO(i,r.shape[0],r.shape[1],r.shape[2],o,m,g,b,y,x,w,$,k,v,I,S,N,C,_),T}};let KO;const XO={kernelName:_e,backendName:"wasm",setupFunc:function(e){KO=e.wasm.cwrap(_e,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{dy:r,filter:s}=n,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,inputShape:c}=a,h=qi(u),d=Li(c,s.shape,i,1,o,l,!1,h),{batchSize:p,filterHeight:f,filterWidth:m,inChannels:g,inHeight:b,inWidth:y,outChannels:x,outHeight:w,outWidth:k,strideHeight:v,strideWidth:I}=d,S=f-1-d.padInfo.top,N=m-1-d.padInfo.left,C="channelsLast"===d.dataFormat,$=D(d.inShape),T=D(r.shape),[_,E,R]=D(s.shape),A=$[0],F=C?$[1]:$[2],M=C?$[2]:1,O=C?1:$[1],L=T[0],z=C?T[1]:T[2],P=C?T[2]:1,W=C?1:T[1],B=t.makeOutput(d.inShape,"float32"),U=t.dataIdMap.get(B.dataId).id,V=t.dataIdMap.get(r.dataId).id,G=t.dataIdMap.get(s.dataId).id;return KO(V,G,p,f,m,b,y,g,w,k,x,v,I,S,N,_,E,R,A,F,M,O,L,z,P,W,U),B}};let YO;const JO={kernelName:Ee,backendName:"wasm",setupFunc:function(e){YO=e.wasm.cwrap(Ee,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:u}=a;if("float32"!==r.dtype)throw new Error(`Tensor x must have dtype float32, got ${r.dtype}`);if("float32"!==s.dtype)throw new Error(`Tensor filter must have dtype float32, got ${s.dtype}`);const l=zi(r.shape,s.shape,i,u,o),c=n.makeOutput(l.outShape,r.dtype);return YO(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(c.dataId).id,l.batchSize,l.inDepth,l.inHeight,l.inWidth,l.inChannels,l.outDepth,l.outHeight,l.outWidth,l.outChannels,l.strideDepth,l.strideHeight,l.strideWidth,l.dilationDepth,l.dilationHeight,l.dilationWidth,l.filterDepth,l.filterHeight,l.filterWidth,l.padInfo.front,l.padInfo.top,l.padInfo.left),c}};let ZO;const QO={kernelName:Re,backendName:"wasm",setupFunc:function(e){ZO=e.wasm.cwrap(Re,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:o,filterShape:u}=a;if("float32"!==r.dtype)throw new Error(`Tensor dy must have dtype float32, got ${r.dtype}`);if("float32"!==s.dtype)throw new Error(`Tensor filter must have dtype float32, got ${s.dtype}`);const l=zi(r.shape,u,i,1,o),c=n.makeOutput(l.filterShape,s.dtype);return ZO(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(c.dataId).id,l.batchSize,l.inDepth,l.inHeight,l.inWidth,l.inChannels,l.outDepth,l.outHeight,l.outWidth,l.outChannels,l.strideDepth,l.strideHeight,l.strideWidth,l.dilationDepth,l.dilationHeight,l.dilationWidth,l.filterDepth,l.filterHeight,l.filterWidth,l.padInfo.front,l.padInfo.top,l.padInfo.left),c}};let eL;const tL={kernelName:Ae,backendName:"wasm",setupFunc:function(e){eL=e.wasm.cwrap(Ae,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{pad:i,strides:o,inputShape:u}=a;if("float32"!==r.dtype)throw new Error(`Tensor dy must have dtype float32, got ${r.dtype}`);if("float32"!==s.dtype)throw new Error(`Tensor filter must have dtype float32, got ${s.dtype}`);const l=zi(u,s.shape,o,1,i),c=n.makeOutput(l.inShape,r.dtype);return eL(n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(c.dataId).id,l.batchSize,l.inDepth,l.inHeight,l.inWidth,l.inChannels,l.outDepth,l.outHeight,l.outWidth,l.outChannels,l.strideDepth,l.strideHeight,l.strideWidth,l.dilationDepth,l.dilationHeight,l.dilationWidth,l.filterDepth,l.filterHeight,l.filterWidth,l.padInfo.front,l.padInfo.top,l.padInfo.left),c}},nL=KM(Fe),aL=KM(De);var rL;let sL;!function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"}(rL||(rL={}));const iL={kernelName:Le,backendName:"wasm",setupFunc:function(e){sL=e.wasm.cwrap(Le,null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{method:r,extrapolationValue:s,cropSize:i}=a,{image:o,boxes:u,boxInd:l}=n,c=u.shape[0],[h,d]=i,p=[c,h,d,o.shape[3]];let f,m=t.dataIdMap.get(o.dataId);"float32"!==o.dtype&&(f=PO({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(f.dataId));const g=m.id,b=t.dataIdMap.get(u.dataId).id,y=t.dataIdMap.get(l.dataId).id,x=t.makeOutput(p,"float32"),w=t.dataIdMap.get(x.dataId).id,k=new Uint8Array(new Int32Array(o.shape).buffer);return sL(g,b,y,c,k,h,d,rL[r],s,w),null!=f&&t.disposeData(f.dataId),x}};let oL;const uL={kernelName:Me,backendName:"wasm",setupFunc:function(e){oL=e.wasm.cwrap(Me,null,["number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=a,u=r.shape.length;p("float32"===r.dtype||"int32"===r.dtype,(()=>`cumprod does not support ${r.dtype} tensors in the WASM backend`));const l=Bo([s],u);let c=r;null!==l&&(c=sO({inputs:{x:r},attrs:{perm:l},backend:n}));const h=Vo(1,u)[0];Wo("cumprod",[h],u);const d=n.makeOutput(c.shape,c.dtype),f=c.shape[h],m=n.dataIdMap.get(c.dataId).id,g=n.dataIdMap.get(d.dataId).id;oL(m,i?1:0,o?1:0,f,g,GM[r.dtype]);let b=d;return null!==l&&(b=sO({inputs:{x:d},attrs:{perm:Uo(l)},backend:n}),n.disposeData(c.dataId),n.disposeData(d.dataId)),b}};let lL;const cL={kernelName:Oe,backendName:"wasm",setupFunc:function(e){lL=e.wasm.cwrap(Oe,null,["number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=a,u=r.shape.length;p("float32"===r.dtype||"int32"===r.dtype,(()=>`cumsum does not support ${r.dtype} tensors in the WASM backend`));const l=Bo([s],u);let c=r;null!==l&&(c=sO({inputs:{x:r},attrs:{perm:l},backend:n}));const h=Vo(1,u)[0];Wo("cumsum",[h],u);const d=n.makeOutput(c.shape,c.dtype),f=c.shape[h],m=n.dataIdMap.get(c.dataId).id,g=n.dataIdMap.get(d.dataId).id;lL(m,i?1:0,o?1:0,f,g,GM[r.dtype]);let b=d;return null!==l&&(b=sO({inputs:{x:d},attrs:{perm:Uo(l)},backend:n}),n.disposeData(c.dataId),n.disposeData(d.dataId)),b}};let hL;const dL={kernelName:ze,backendName:"wasm",setupFunc:function(e){hL=e.wasm.cwrap("DenseBincount",null,["number","array","number","number","boolean","number","number","boolean","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{x:r,weights:s}=n,{size:i,binaryOutput:o}=a,u=0!==s.shape.reduce(((e,t)=>e*t),1),l=1===r.shape.length?[i]:[r.shape[0],i],c=t.makeOutput(l,s.dtype);function h(e){return t.dataIdMap.get(e.dataId).id}return hL(h(r),new Uint8Array(new Int32Array(r.shape).buffer),r.shape.length,i,u,h(s),GM[s.dtype],o,h(c)),c}};let pL;const fL={kernelName:Pe,backendName:"wasm",setupFunc:function(e){pL=e.wasm.cwrap(Pe,null,["number","number","number","array","number","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{x:r}=n,{blockSize:s,dataFormat:i}=a,o=r.shape[0],u=("NHWC"===i?r.shape[1]:r.shape[2])*s,l=("NHWC"===i?r.shape[2]:r.shape[3])*s,c=("NHWC"===i?r.shape[3]:r.shape[1])/(s*s),h="NHWC"===i?[o,u,l,c]:[o,c,u,l],d=t.makeOutput(h,"float32"),p=t.dataIdMap.get(r.dataId).id,f=new Uint8Array(new Int32Array(D(r.shape)).buffer),m=new Uint8Array(new Int32Array(h).buffer),g=new Uint8Array(new Int32Array(D(h)).buffer),b=t.dataIdMap.get(d.dataId).id;return pL(p,s,"NHWC"===i?1:0,f,r.shape.length-1,m,g,h.length,b),d}};let mL;const gL={kernelName:We,backendName:"wasm",setupFunc:function(e){mL=e.wasm.cwrap(We,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{x:r,filter:s}=t,i=a.dataIdMap.get(r.dataId).id,o=a.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:c,dimRoundingMode:h}=n,d=null==l?[1,1]:l,p=Li(r.shape,s.shape,u,d,c,h,!0),f=p.filterHeight,m=p.filterWidth,g=p.padInfo.top,b=p.padInfo.right,y=p.padInfo.bottom,x=p.padInfo.left,w=p.dilationHeight,k=p.dilationWidth,v=p.strideHeight,I=p.strideWidth,S=p.inChannels,N=p.outChannels,C="SAME"===p.padInfo.type?1:0;if("channelsLast"!==p.dataFormat)throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);const $=a.makeOutput(p.outShape,"float32"),T=a.dataIdMap.get($.dataId).id;return mL(i,r.shape[0],r.shape[1],r.shape[2],o,f,m,g,b,y,x,C,w,k,v,I,S,N,T),$}};let bL;const yL={kernelName:Ve,backendName:"wasm",setupFunc:function(e){bL=e.wasm.cwrap("Diag",null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=g(a.shape),s=n.makeOutput([...a.shape,...a.shape],a.dtype);return bL(n.dataIdMap.get(a.dataId).id,GM[a.dtype],r,n.dataIdMap.get(s.dataId).id),s}};let xL;const wL={kernelName:Ge,backendName:"wasm",setupFunc:function(e){xL=e.wasm.cwrap(Ge,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:u}=a;if(r.dtype!==s.dtype)throw new Error(`Dilation2D error: x must have the same dtype as filter. Got ${r.dtype} and ${s.dtype}`);const l=Di(r.shape,s.shape,i,o,"NHWC",u),c=n.makeOutput(l.outShape,r.dtype);return xL(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(c.dataId).id,GM[r.dtype],l.batchSize,l.inChannels,l.inHeight,l.inWidth,l.outHeight,l.outWidth,l.strideHeight,l.strideWidth,l.dilationHeight,l.dilationWidth,l.filterHeight,l.filterWidth,l.padInfo.top,l.padInfo.left),c}};let kL;const vL={kernelName:je,backendName:"wasm",setupFunc:function(e){kL=e.wasm.cwrap(je,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,dy:i}=t,{strides:o,pad:u,dilations:l}=a;if(r.dtype!==s.dtype||r.dtype!==i.dtype)throw new Error(`Dilation2DBackpropFilter error: x must have the same dtype as filter and dy. Got ${r.dtype}, ${s.dtype}, and ${i.dtype}`);const c=Di(r.shape,s.shape,o,u,"NHWC",l),h=n.makeOutput(s.shape,s.dtype);return kL(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(h.dataId).id,GM[r.dtype],c.batchSize,c.inChannels,c.inHeight,c.inWidth,c.outHeight,c.outWidth,c.strideHeight,c.strideWidth,c.dilationHeight,c.dilationWidth,c.filterHeight,c.filterWidth,c.padInfo.top,c.padInfo.left),h}};let IL;const SL={kernelName:He,backendName:"wasm",setupFunc:function(e){IL=e.wasm.cwrap(He,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,dy:i}=t,{strides:o,pad:u,dilations:l}=a;if(r.dtype!==s.dtype||r.dtype!==i.dtype)throw new Error(`Dilation2DBackpropInput error: x must have the same dtype as filter and dy. Got ${r.dtype}, ${s.dtype}, and ${i.dtype}`);const c=Di(r.shape,s.shape,o,u,"NHWC",l),h=n.makeOutput(r.shape,r.dtype);return IL(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(h.dataId).id,GM[r.dtype],c.batchSize,c.inChannels,c.inHeight,c.inWidth,c.outHeight,c.outWidth,c.strideHeight,c.strideWidth,c.dilationHeight,c.dilationWidth,c.filterHeight,c.filterWidth,c.padInfo.top,c.padInfo.left),h}},NL=KM(Xe);let CL;const $L={kernelName:Ye,backendName:"wasm",setupFunc:function(e){CL=e.wasm.cwrap(Ye,null,["number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:a,y:r}=t,s=n.makeOutput(r.shape,"float32"),i=e=>n.dataIdMap.get(e.dataId).id;return CL(i(r),i(a),i(s)),s}},TL=ZM(Ze,0,"bool"),_L=KM(Je),EL=KM(Qe,"float32");function RL(e){const{inputs:t,attrs:n,backend:a}=e,{input:r}=t,{dim:s}=n,i=r.shape.length,o=r.shape.slice();let u=s;return s<0&&(p(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+s+1),o.splice(u,0,1),TO({inputs:{x:r},backend:a,attrs:{shape:o}})}const AL={kernelName:et,backendName:"wasm",kernelFunc:RL},FL=KM(tt,"float32");function DL(e){const{attrs:{shape:t,value:n},backend:a}=e;let{attrs:{dtype:r}}=e;r=r||R(n);const s=a.makeOutput(t,r);return a.typedArrayFromHeap(s).fill(n),s}const ML={kernelName:at,backendName:"wasm",kernelFunc:DL};let OL;const LL={kernelName:rt,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{image:a}=t,r=n.makeOutput(a.shape,a.dtype),s=n.dataIdMap.get(a.dataId).id,i=n.dataIdMap.get(r.dataId).id,[o,u,l,c]=a.shape;return OL(s,o,u,l,c,i),r},setupFunc:function(e){OL=e.wasm.cwrap(rt,null,["number","number","number","number","number","number"])}},zL=KM(st),PL=ZM(it);let WL;const BL={kernelName:ot,backendName:"wasm",setupFunc:function(e){WL=e.wasm.cwrap(ot,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{varianceEpsilon:r}=a,{x:s,mean:i,variance:o,offset:u,scale:l}=n,c=t.dataIdMap.get(s.dataId).id,h=t.dataIdMap.get(i.dataId).id,d=t.dataIdMap.get(o.dataId).id,p=null!=u?t.dataIdMap.get(u.dataId).id:0,f=null!=l?t.dataIdMap.get(l.dataId).id:0,m=t.makeOutput(s.shape,s.dtype);if(0===g(s.shape))return m;const b=t.dataIdMap.get(m.dataId).id;return WL(c,h,d,p,f,r,b),m}};let UL;const VL={kernelName:ia,backendName:"wasm",setupFunc:function(e){UL=e.wasm.cwrap(ia,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dataFormat:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=n,m=Li(r.shape,s.shape,u,c,l,d),g=HM[p];if(null==g)throw new Error(`${p} activation not yet supported for FusedConv2D in the wasm backend.`);const b=a.dataIdMap.get(r.dataId).id,y=a.dataIdMap.get(s.dataId).id,x=m.outChannels;let w=0;if(null!=i){const e=a.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);w=e.id}const k=m.filterHeight,v=m.filterWidth,I=m.padInfo.top,S=m.padInfo.right,N=m.padInfo.bottom,C=m.padInfo.left,$=m.dilationHeight,T=m.dilationWidth,_=m.strideHeight,E=m.strideWidth,R=m.inChannels,A="SAME"===m.padInfo.type?1:0,F=m.batchSize,D=m.inHeight,M=m.inWidth;if("NHWC"!==h)throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);const O=a.makeOutput(m.outShape,"float32"),L=a.dataIdMap.get(O.dataId).id,z=null==o?0:a.dataIdMap.get(o.dataId).id;return UL(b,F,D,M,y,k,v,w,I,S,N,C,A,$,T,_,E,R,x,g,z,f||0,L),O}};let GL;const HL={kernelName:oa,backendName:"wasm",setupFunc:function(e){GL=e.wasm.cwrap(oa,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dataFormat:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=n,m=Li(r.shape,s.shape,u,c,l,d,!0),g=HM[p];if(null==g)throw new Error(`${p} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);const b=a.dataIdMap.get(r.dataId).id,y=a.dataIdMap.get(s.dataId).id,x=m.outChannels;let w=0;if(null!=i){const e=a.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);w=e.id}const k=m.filterHeight,v=m.filterWidth,I=m.padInfo.top,S=m.padInfo.right,N=m.padInfo.bottom,C=m.padInfo.left,$=m.dilationHeight,T=m.dilationWidth,_=m.strideHeight,E=m.strideWidth,R=m.inChannels,A="SAME"===m.padInfo.type?1:0,F=m.batchSize,D=m.inHeight,M=m.inWidth;if("NHWC"!==h)throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);const O=a.makeOutput(m.outShape,"float32"),L=a.dataIdMap.get(O.dataId).id,z=null==o?0:a.dataIdMap.get(o.dataId).id;return GL(b,F,D,M,y,k,v,w,I,S,N,C,A,$,T,_,E,R,x,g,z,f||0,L),O}};let jL;const qL={kernelName:lt,backendName:"wasm",setupFunc:function(e){jL=e.wasm.cwrap(lt,null,["number","number","number","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{params:a,indices:r}=n,[s,i,o,u]=ui(a,r),l=t.makeOutput(s,a.dtype);if(0===i)return l;const c=r.shape,h=c[c.length-1],d=t.dataIdMap.get(a.dataId).id,p=t.dataIdMap.get(r.dataId).id,f=new Uint8Array(new Int32Array(u).buffer),m=t.dataIdMap.get(l.dataId).id;return jL(d,GM[a.dtype],p,i,h,o,f,m),l}};let KL;const XL={kernelName:ut,backendName:"wasm",setupFunc:function(e){KL=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{x:r,indices:s}=n,{axis:i,batchDims:o}=a,u=I(i,r.shape)[0],l=t.readSync(s.dataId),c=r.shape[u];for(let e=0;e<l.length;++e){const t=l[e];p(t<=c-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`))}const h=Bc(r,s,u,o),d=TO({inputs:{x:r},attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]},backend:t}),f=g(s.shape),m=TO({inputs:{x:s},attrs:{shape:[h.batchSize,f/h.batchSize]},backend:t}),b=[h.batchSize,h.outerSize,f/h.batchSize,h.sliceSize],y=t.makeOutput(b,r.dtype);if(0===g(r.shape))return y;const x=d.shape.length-1,w=t.dataIdMap.get(d.dataId).id,k=t.dataIdMap.get(m.dataId).id,v=t.dataIdMap.get(y.dataId).id,S=new Uint8Array(new Int32Array(D(d.shape)).buffer),N=new Uint8Array(new Int32Array(D(b)).buffer);return KL(w,GM[r.dtype],S,x,k,h.batchSize,N,v),t.disposeData(d.dataId),t.disposeData(m.dataId),y.shape=h.outputShape,y}},YL=ZM(ct,0,"bool"),JL=ZM(ht,0,"bool"),ZL=KM(mt,"bool"),QL=KM(gt,"bool"),ez=KM(bt,"bool");let tz;const nz={kernelName:yt,backendName:"wasm",setupFunc:function(e){tz=e.wasm.cwrap(yt,null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:{x:t},attrs:{alpha:n},backend:a}=e,r=a.dataIdMap.get(t.dataId).id,s=a.makeOutput(t.shape,"float32");if(0!==g(t.shape)){const e=a.dataIdMap.get(s.dataId).id;tz(r,GM[t.dtype],n,e)}return s}},az=ZM(xt,0,"bool"),rz=ZM(wt,0,"bool");let sz;const iz={kernelName:kt,backendName:"wasm",setupFunc:function(e){sz=e.wasm.cwrap(kt,null,["number","number","number","number"])},kernelFunc:function(e){const{attrs:t,backend:n}=e,{start:a,stop:r,num:s}=t,i=Math.floor(s),o=n.makeOutput([i],"float32");return sz(n.dataIdMap.get(o.dataId).id,a,r,i),o}},oz=KM(vt),uz=KM(It),lz=ZM(St,0,"bool"),cz=KM(Nt),hz=ZM(Ct,0,"bool"),dz=ZM("LogicalXor",0,"bool");let pz;const fz={kernelName:$t,backendName:"wasm",setupFunc:function(e){pz=e.wasm.cwrap($t,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:s,bias:i,alpha:o,beta:u}=a;if("float32"!==r.dtype)throw new Error("LRN error: x must have dtype float32");const l=n.makeOutput(r.shape,r.dtype);return pz(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(l.dataId).id,r.shape[3],s,i,o,u),l}};let mz;const gz={kernelName:Tt,backendName:"wasm",setupFunc:function(e){mz=e.wasm.cwrap(Tt,null,["number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=a;if("float32"!==r.dtype||"float32"!==s.dtype||"float32"!==i.dtype)throw new Error("LRNGrad error: x, y, and dy must have dtype float32");const h=n.makeOutput(r.shape,r.dtype);return mz(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(h.dataId).id,i.shape[3],o,u,l,c),h}};let bz;const yz={kernelName:_t,backendName:"wasm",setupFunc:function(e){bz=e.wasm.cwrap(_t,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{reductionIndices:r,keepDims:s}=a,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,u=i;const{transposed:l,axes:c,originalAxes:h,inputWasTransposed:d}=oO(i,r,t);d&&(u=l,o=t.dataIdMap.get(l.dataId).id),Wo("max",c,u.shape.length);const[p,f]=zo(u.shape,c),m=g(f),b=t.makeOutput(p,i.dtype);if(0!==g(u.shape)){const e=t.dataIdMap.get(b.dataId).id;bz(o,GM[i.dtype],m,e)}if(d&&t.disposeData(l.dataId),s){const e=Po(b.shape,h);b.shape=e}return b}},xz=ZM(Et);let wz;const kz={kernelName:Rt,backendName:"wasm",setupFunc:function(e){wz=e.wasm.cwrap(Rt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,r=t.x,s=a.dataIdMap.get(r.dataId).id;p("float32"===r.dtype,(()=>`Error in MaxPool: only float32 input is supported. Got ${r.dtype}.`));const{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=n,c=Mi(r.shape,i,o,1,u,l),h=c.filterHeight,d=c.filterWidth,f=c.padInfo.top,m=c.padInfo.right,g=c.padInfo.bottom,b=c.padInfo.left,y=c.dilationHeight,x=c.dilationWidth,w=c.strideHeight,k=c.strideWidth,v=c.inChannels,I=c.outChannels;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);const S=a.makeOutput(c.outShape,"float32"),N=a.dataIdMap.get(S.dataId).id;return wz(s,r.shape[0],r.shape[1],r.shape[2],h,d,f,m,g,b,y,x,w,k,v,I,N),S}};let vz;const Iz={kernelName:Ft,backendName:"wasm",setupFunc:function(e){vz=e.wasm.cwrap("MaxPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=a,c=Oi(r.shape,s,i,1,o,u,l),h=n.makeOutput(c.outShape,r.dtype);return vz(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(h.dataId).id,c.batchSize,c.inChannels,c.inDepth,c.inHeight,c.inWidth,c.outDepth,c.outHeight,c.outWidth,c.strideDepth,c.strideHeight,c.strideWidth,c.dilationDepth,c.dilationHeight,c.dilationWidth,c.effectiveFilterDepth,c.effectiveFilterHeight,c.effectiveFilterWidth,c.padInfo.front,c.padInfo.top,c.padInfo.left),h}};let Sz;const Nz={kernelName:Dt,backendName:"wasm",setupFunc:function(e){Sz=e.wasm.cwrap("MaxPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=a,c=Oi(s.shape,i,o,1,u,l),h=n.makeOutput(s.shape,s.dtype);return Sz(n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(h.dataId).id,c.batchSize,c.inChannels,c.inDepth,c.inHeight,c.inWidth,c.outDepth,c.outHeight,c.outWidth,c.strideDepth,c.strideHeight,c.strideWidth,c.dilationDepth,c.dilationHeight,c.dilationWidth,c.effectiveFilterDepth,c.effectiveFilterHeight,c.effectiveFilterWidth,c.padInfo.front,c.padInfo.top,c.padInfo.left),h}};let Cz;const $z={kernelName:At,backendName:"wasm",setupFunc:function(e){Cz=e.wasm.cwrap("MaxPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=a,c=Mi(s.shape,i,o,1,u,l),h=n.makeOutput(s.shape,s.dtype);return Cz(n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(h.dataId).id,c.batchSize,c.inChannels,c.inHeight,c.inWidth,c.outHeight,c.outWidth,c.strideHeight,c.strideWidth,c.dilationHeight,c.dilationWidth,c.effectiveFilterHeight,c.effectiveFilterWidth,c.padInfo.top,c.padInfo.left),h}};let Tz;const _z={kernelName:Mt,backendName:"wasm",setupFunc:function(e){Tz=e.wasm.cwrap("MaxPoolWithArgmax",null,["number","number","number","number","boolean","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,includeBatchInIndex:u}=a;p(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const l=[1,1];p(Hi(i,l),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`));const c=Mi(r.shape,s,i,[1,1],o),h=n.makeOutput(c.outShape,r.dtype),d=n.makeOutput(c.outShape,"int32");return Tz(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(h.dataId).id,n.dataIdMap.get(d.dataId).id,GM[r.dtype],u,c.batchSize,c.inChannels,c.inHeight,c.inWidth,c.outHeight,c.outWidth,c.strideHeight,c.strideWidth,c.dilationHeight,c.dilationWidth,c.effectiveFilterHeight,c.effectiveFilterWidth,c.padInfo.top,c.padInfo.left),[h,d]}};let Ez;const Rz={kernelName:Ot,backendName:"wasm",setupFunc:function(e){Ez=e.wasm.cwrap(Ot,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:s}=a,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:h,originalAxes:d,inputWasTransposed:p}=oO(i,r,t);let f=h;if(p){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e,f=Vo(f.length,l.shape.length))}Wo("mean",f,l.shape.length);const[m,b]=zo(l.shape,f),y=g(b);let x=l;"float32"!==l.dtype&&(x=PO({backend:t,inputs:{x:l},attrs:{dtype:"float32"}}),u=t.dataIdMap.get(x.dataId).id);const w=t.makeOutput(m,"float32");if(0!==g(l.shape)){const e=t.dataIdMap.get(w.dataId).id;Ez(u,y,e)}if(p&&t.disposeData(c.dataId),s){const e=Po(w.shape,d);w.shape=e}return"float32"!==l.dtype&&t.disposeData(x.dataId),w}};let Az;const Fz={kernelName:Lt,backendName:"wasm",setupFunc:function(e){Az=e.wasm.cwrap(Lt,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:s}=a,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:h,originalAxes:d,inputWasTransposed:p}=oO(i,r,t);if(p){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e)}Wo("min",h,l.shape.length);const[f,m]=zo(l.shape,h),b=g(m),y=t.makeOutput(f,l.dtype);if(0!==g(l.shape)){const e=t.dataIdMap.get(y.dataId).id;Az(u,GM[i.dtype],b,e)}if(p&&t.disposeData(c.dataId),s){const e=Po(y.shape,d);y.shape=e}return y}},Dz=ZM(zt);var Mz;let Oz;!function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"}(Mz||(Mz={}));const Lz={kernelName:Pt,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:a,mode:r}}=e,s=a.map(((e,n)=>e[0]+t.shape[n]+e[1])),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),u=n.dataIdMap.get(o.dataId).id,l=new Uint8Array(new Int32Array(t.shape).buffer),c=a.map((e=>e[0])),h=a.map((e=>e[1])),d=new Uint8Array(new Int32Array(c).buffer),p=new Uint8Array(new Int32Array(h).buffer);return Oz(i,l,t.shape.length,GM[t.dtype],d,p,Mz[r],u),o},setupFunc:function(e){Oz=e.wasm.cwrap(Pt,null,["number","array","number","number","array","array","number","number"])}};let zz;function Pz(e){const{backend:t,inputs:{logits:n},attrs:{dim:a}}=e,r=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(s.dataId).id,o=n.shape[a],u=g(n.shape)/o;return 0===g(s.shape)||zz(r,i,o,u),s}const Wz={kernelName:Fn,backendName:"wasm",setupFunc:function(e){zz=e.wasm.cwrap(Fn,null,["number","number","number","number"])},kernelFunc:Pz};let Bz;const Uz={kernelName:Bt,backendName:"wasm",setupFunc:function(e){Bz=e.wasm.cwrap(Bt,null,["number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:s,seed:i,normalized:o}=a;if("float32"!==r.dtype)throw new Error(`Tensor logits must have dtype float32, got ${r.dtype}`);const u=o?r:Pz({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),[l,c]=u.shape,h=n.makeOutput([l,s],"int32");return Bz(n.dataIdMap.get(u.dataId).id,l,c,s,i,n.dataIdMap.get(h.dataId).id),o||n.disposeData(u.dataId),h}},Vz=ZM(Wt),Gz=ZM(Ut),Hz=KM(Vt);function jz(e,t){const n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),a=n[0],r=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:a,selectedSize:r,pSelectedScores:s,pValidOutputs:i}}let qz;const Kz={kernelName:Ht,backendName:"wasm",setupFunc:function(e){qz=e.wasm.cwrap(Ht,"number",["number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{iouThreshold:r,maxOutputSize:s,scoreThreshold:i}=a,{boxes:o,scores:u}=n,l=t.dataIdMap.get(o.dataId).id,c=t.dataIdMap.get(u.dataId).id,h=qz(l,c,s,r,i),{pSelectedIndices:d,selectedSize:p,pSelectedScores:f,pValidOutputs:m}=jz(t,h);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([p],"int32",d)}};let Xz;const Yz={kernelName:jt,backendName:"wasm",setupFunc:function(e){Xz=e.wasm.cwrap(jt,"number",["number","number","number","number","number","bool"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{iouThreshold:r,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=a,{boxes:u,scores:l}=n,c=t.dataIdMap.get(u.dataId).id,h=t.dataIdMap.get(l.dataId).id,d=Xz(c,h,s,r,i,o),{pSelectedIndices:p,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=jz(t,d);return t.wasm._free(m),[t.makeOutput([f],"int32",p),t.makeOutput([],"int32",g)]}};let Jz;const Zz={kernelName:qt,backendName:"wasm",setupFunc:function(e){Jz=e.wasm.cwrap(qt,"number",["number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{iouThreshold:r,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=a,{boxes:u,scores:l}=n,c=t.dataIdMap.get(u.dataId).id,h=t.dataIdMap.get(l.dataId).id,d=Jz(c,h,s,r,i,o),{pSelectedIndices:p,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=jz(t,d);return t.wasm._free(g),[t.makeOutput([f],"int32",p),t.makeOutput([f],"float32",m)]}},Qz=ZM(Gt,0,"bool");let eP;const tP={kernelName:Xt,backendName:"wasm",setupFunc:function(e){eP=e.wasm.cwrap(Xt,null,["number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:s,depth:i,onValue:o,offValue:u}=a,l=n.makeOutput([...r.shape,i],s),c=n.dataIdMap.get(l.dataId).id,h=n.dataIdMap.get(r.dataId).id;return eP(h,i,o,u,c),l}},nP={kernelName:Kt,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,a=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(a).fill(1),a}},aP={kernelName:Yt,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return RL({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{f(s,e.shape,"All tensors passed to stack must have matching shapes"),p(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=GO({inputs:t.map((e=>{const t=RL({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeData(e.dataId))),u}};let rP;const sP={kernelName:Jt,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:a,constantValue:r}}=e,s=a.map(((e,n)=>e[0]+t.shape[n]+e[1]));if(0===g(t.shape))return DL({backend:n,attrs:{shape:s,value:r,dtype:t.dtype}});const i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),u=n.dataIdMap.get(o.dataId).id,l=new Uint8Array(new Int32Array(t.shape).buffer),c=a.map((e=>e[0])),h=a.map((e=>e[1])),d=new Uint8Array(new Int32Array(c).buffer),p=new Uint8Array(new Int32Array(h).buffer);return rP(i,l,t.shape.length,GM[t.dtype],d,p,r,u),o},setupFunc:function(e){rP=e.wasm.cwrap(Jt,null,["number","array","number","number","array","array","number","number"])}},iP=ZM(Zt);let oP;const uP={kernelName:Qt,backendName:"wasm",setupFunc:function(e){oP=e.wasm.cwrap(Qt,null,["number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a,alpha:r}=t,s=n.dataIdMap.get(a.dataId).id,i=n.dataIdMap.get(r.dataId).id;let o=s;const u=a;let l=u;"float32"!==u.dtype&&(l=PO({backend:n,inputs:{x:a},attrs:{dtype:"float32"}}),o=n.dataIdMap.get(l.dataId).id);const c=n.makeOutput(a.shape,"float32"),h=n.dataIdMap.get(c.dataId).id;return oP(o,i,h),"float32"!==u.dtype&&n.disposeData(l.dataId),c}};let lP;const cP={kernelName:en,backendName:"wasm",setupFunc:function(e){lP=e.wasm.cwrap(en,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:s}=a,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:h,originalAxes:d,inputWasTransposed:p}=oO(i,r,t);let f=h;if(p){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e,f=Vo(f.length,l.shape.length))}Wo("prod",f,l.shape.length);const[m,b]=zo(l.shape,f),y=g(b),x=t.makeOutput(m,l.dtype);if(0!==g(l.shape)){const e=t.dataIdMap.get(x.dataId).id;lP(u,y,GM[x.dtype],e)}if(p&&t.disposeData(c.dataId),s){const e=Po(x.shape,d);x.shape=e}return x}},hP={kernelName:rn,backendName:"wasm",kernelFunc:e=>{const{backend:t,attrs:n}=e,{start:a,stop:r,step:s,dtype:i}=n,o=LS(a,r,s,i),u=t.makeOutput([o.length],i);return t.typedArrayFromHeap(u).set(o),u}},dP=ZM(qe),pP=KM(on),fP=KM(un),mP=KM(fn);let gP;const bP={kernelName:dn,backendName:"wasm",setupFunc:function(e){gP=e.wasm.cwrap(dn,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{images:r}=n,{alignCorners:s,halfPixelCenters:i,size:o}=a,[u,l]=o,[c,h,d,p]=r.shape,f=[c,u,l,p];let m,b=t.dataIdMap.get(r.dataId);"float32"!==b.dtype&&(m=PO({backend:t,inputs:{x:r},attrs:{dtype:"float32"}}),b=t.dataIdMap.get(m.dataId));const y=b.id,x=t.makeOutput(f,"float32");if(0===g(r.shape))return x;const w=t.dataIdMap.get(x.dataId).id;return gP(y,c,h,d,p,u,l,s?1:0,i?1:0,w),null!=m&&t.disposeData(m.dataId),x}};let yP;const xP={kernelName:pn,backendName:"wasm",setupFunc:function(e){yP=e.wasm.cwrap(pn,null,["number","number","number","array","array","boolean"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:i}=a,o=n.makeOutput(r.shape,"float32");let u,l=n.dataIdMap.get(r.dataId);return"float32"!==l.dtype&&(u=PO({backend:n,inputs:{x:r},attrs:{dtype:"float32"}}),l=n.dataIdMap.get(u.dataId)),yP(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(o.dataId).id,new Uint8Array(new Int32Array(r.shape).buffer),new Uint8Array(new Int32Array(s.shape).buffer),i),null!=u&&n.disposeData(u.dataId),o}};let wP;const kP={kernelName:cn,backendName:"wasm",setupFunc:function(e){wP=e.wasm.cwrap(cn,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{images:r}=n,{alignCorners:s,halfPixelCenters:i,size:o}=a,[u,l]=o,[c,h,d,p]=r.shape,f=[c,u,l,p],m=t.makeOutput(f,"float32");if(0===g(r.shape))return m;let b,y=t.dataIdMap.get(r.dataId);"float32"!==y.dtype&&(b=PO({backend:t,inputs:{x:r},attrs:{dtype:"float32"}}),y=t.dataIdMap.get(b.dataId));const x=y.id,w=t.dataIdMap.get(m.dataId).id;return wP(x,c,h,d,p,u,l,s?1:0,i?1:0,w),null!=b&&t.disposeData(b.dataId),m}};let vP;const IP={kernelName:hn,backendName:"wasm",setupFunc:function(e){vP=e.wasm.cwrap(hn,null,["number","number","number","array","array","boolean"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:i}=a,o=n.makeOutput(r.shape,"float32");let u,l=n.dataIdMap.get(r.dataId);return"float32"!==l.dtype&&(u=PO({backend:n,inputs:{x:r},attrs:{dtype:"float32"}}),l=n.dataIdMap.get(u.dataId)),vP(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(o.dataId).id,new Uint8Array(new Int32Array(r.shape).buffer),new Uint8Array(new Int32Array(s.shape).buffer),i),null!=u&&n.disposeData(u.dataId),o}};let SP;const NP={kernelName:mn,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a,i=I(s,r.shape);if(0===r.shape.length)return nO({inputs:{x:r},backend:n});const o=n.makeOutput(r.shape,r.dtype),u=n.dataIdMap.get(r.dataId).id,l=n.dataIdMap.get(o.dataId).id,c=new Uint8Array(new Int32Array(i).buffer),h=new Uint8Array(new Int32Array(r.shape).buffer);SP(u,c,i.length,h,r.shape.length,l);const d=TO({inputs:{x:o},attrs:{shape:r.shape},backend:n});return n.disposeData(o.dataId),d},setupFunc:function(e){SP=e.wasm.cwrap(mn,null,["number","array","number","array","number","number"])}};let CP;const $P={kernelName:ra,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r}=t,{radians:s,fillValue:i,center:o}=a,u=n.makeOutput(r.shape,r.dtype),l=n.dataIdMap.get(r.dataId).id,c=n.dataIdMap.get(u.dataId).id,[h,d,p,f]=r.shape,[m,g]=Kl(o,d,p),b="number"==typeof i?[i,i,i,0===i?0:255]:[...i,255],y=new Uint8Array(new Int32Array(b).buffer);return CP(l,h,d,p,f,s,m,g,y,b.length,c),u},setupFunc:function(e){CP=e.wasm.cwrap(ra,null,["number","number","number","number","number","number","number","number","array","number","number"])}},TP=KM(gn),_P=KM(bn);let EP;const RP={kernelName:yn,backendName:"wasm",setupFunc:function(e){EP=e.wasm.cwrap(yn,null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{indices:r,updates:s}=n,{shape:i}=a,o=t.makeOutput(i,s.dtype);if(0===g(i))return o;const{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=hi(0,r,i),p=t.dataIdMap.get(r.dataId).id,f=t.dataIdMap.get(s.dataId).id,m=new Uint8Array(new Int32Array(h).buffer),b=t.dataIdMap.get(o.dataId).id;return EP(p,f,GM[s.dtype],u,l,c,m,d,b),o}};let AP;const FP={kernelName:wn,backendName:"wasm",setupFunc:function(e){AP=e.wasm.cwrap(wn,null,["number","number","number","number","number","number","bool","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:s}=t,{side:i}=a;if(r.dtype!==s.dtype)throw new Error(`SearchSorted error: sorted_sequence must have the same dtype as values. Got ${r.dtype} and ${s.dtype}`);const o=n.makeOutput(s.shape,"int32");function u(e){return n.dataIdMap.get(e.dataId).id}return AP(u(r),u(s),r.shape[0],r.shape[1],s.shape[1],GM[r.dtype],"left"===i,u(o)),o}};let DP;const MP={kernelName:kn,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t,i=n.dataIdMap.get(a.dataId).id,o=n.dataIdMap.get(r.dataId).id,u=n.dataIdMap.get(s.dataId).id,l=n.makeOutput(r.shape,r.dtype),c=n.dataIdMap.get(l.dataId).id,h=a.shape.length,d=r.shape.length,p=0===h||h>1||1===d?1:g(r.shape.slice(1));return DP(i,o,u,p,c),l},setupFunc:function(e){DP=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}},OP=KM(vn);let LP;const zP={kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(e){LP=e.wasm.cwrap($n,null,["number","number"])},kernelFunc:function(e){const{backend:t,inputs:{x:n}}=e,a=t.dataIdMap.get(n.dataId).id,r=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(r.dataId).id;return 0===g(r.shape)||LP(a,s),r}},PP=KM(Cn),WP=KM(Sn),BP=KM(Nn),UP=KM(Tn),VP={kernelName:Rn,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,paddings:i}=a,o=g(s),u=[[0,0]];u.push(...i);for(let e=1+s.length;e<r.shape.length;++e)u.push([0,0]);const l=sP.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:u,constantValue:0}}),c=Xl(l.shape,s,o,!1),h=Yl(c.length,s.length,!1),d=Jl(l.shape,s,o,!1),p=TO({inputs:{x:l},backend:n,attrs:{shape:c}}),f=sO({inputs:{x:p},backend:n,attrs:{perm:h}}),m=TO({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeData(l.dataId),n.disposeData(p.dataId),n.disposeData(f.dataId),m}};let GP;const HP={kernelName:Dn,backendName:"wasm",setupFunc:function(e){GP=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{indices:a,values:r,denseShape:s,defaultValue:i}=n,o=a.shape[0],u=a.shape[1],l=t.readSync(s.dataId)[0],c=[o+l,u],h=t.dataIdMap.get(a.dataId).id,d=t.dataIdMap.get(r.dataId).id,p=t.dataIdMap.get(i.dataId).id,f=t.makeOutput(c,a.dtype),m=t.dataIdMap.get(f.dataId).id,g=t.makeOutput(c.slice(0,1),r.dtype),b=t.dataIdMap.get(g.dataId).id,y=t.makeOutput([l],"bool"),x=t.dataIdMap.get(y.dataId).id,w=t.makeOutput([o],a.dtype),k=t.dataIdMap.get(w.dataId).id,v=t.makeOutput([4],"int32"),I=t.dataIdMap.get(v.dataId).id,S=GP(h,d,GM[r.dtype],o,l,u,p,m,b,x,k,I),N=t.readSync(v.dataId);let C;switch(N[0]){case 1:C=$c(N[1]);break;case 2:C=Tc(N[1],N[2]);break;case 3:C=_c(N[1],N[2],N[3]);break;default:C=""}if(t.disposeData(v.dataId),C)throw t.disposeData(f.dataId),t.disposeData(g.dataId),t.disposeData(y.dataId),t.disposeData(w.dataId),new Error(C);let $=f,T=g;return S!==c[0]&&($=AO({inputs:{x:f},attrs:{begin:0,size:[S,u]},backend:t}),T=AO({inputs:{x:g},attrs:{begin:0,size:S},backend:t}),t.disposeData(f.dataId),t.disposeData(g.dataId)),[$,T,y,w]}};let jP;const qP={kernelName:Mn,backendName:"wasm",setupFunc:function(e){jP=e.wasm.cwrap(Mn,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{inputIndices:a,inputShape:r,newShape:s}=n;if(2!==a.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${a.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=t.dataIdMap.get(a.dataId).id,o=t.dataIdMap.get(r.dataId).id,u=t.dataIdMap.get(s.dataId).id,l=a.shape[0],c=g(s.shape),h=t.makeOutput([l,c],a.dtype),d=t.dataIdMap.get(h.dataId).id,p=t.makeOutput([c],s.dtype),f=t.dataIdMap.get(p.dataId).id,m=t.makeOutput([3],"int32"),b=t.dataIdMap.get(m.dataId).id;jP(i,o,u,l,d,f,b);const y=t.readSync(m.dataId);let x;switch(y[0]){case 0:x=Ec(y[1],y[2]);break;case 1:x=Rc(y[1],y[2]);break;case 2:x="reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero";break;case 3:x=Fc(Array.from(t.readSync(r.dataId)),Array.from(t.readSync(p.dataId)));break;case 4:x=Dc(Array.from(t.readSync(r.dataId)),Array.from(t.readSync(p.dataId)));break;default:x=""}if(t.disposeData(m.dataId),x)throw t.disposeData(h.dataId),t.disposeData(p.dataId),new Error(x);return[h,p]}};let KP;function XP(e){KP=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function YP(e,t){const{backend:n,inputs:a}=e,{data:r,indices:s,segmentIds:i}=a,o=s.shape[0],u=n.readSync(i.dataId,o-1,o)[0],l=o>0?u+1:0;if(l<0)throw new Error("segment ids must be >= 0");const c=r.shape.slice();c[0]=l;const h=n.dataIdMap.get(r.dataId).id,d=n.dataIdMap.get(s.dataId).id,p=n.dataIdMap.get(i.dataId).id,f=n.makeOutput(c,r.dtype),m=n.dataIdMap.get(f.dataId).id,g=n.makeOutput([4],"int32"),b=n.dataIdMap.get(g.dataId).id;KP(h,GM[r.dtype],r.shape[0],d,p,m,b,t,0);const y=n.readSync(g.dataId);let x;switch(y[0]){case 0:x="segment ids must be >= 0";break;case 1:x="segment ids are not increasing";break;case 2:x=Lc(y[1],y[2]);break;case 3:x=zc(y[1],y[2],y[3]);break;default:x=""}if(n.disposeData(g.dataId),x)throw n.disposeData(f.dataId),new Error(x);return f}const JP={kernelName:On,backendName:"wasm",setupFunc:XP,kernelFunc:function(e){return YP(e,!0)}},ZP={kernelName:Ln,backendName:"wasm",setupFunc:XP,kernelFunc:function(e){return YP(e,!1)}};let QP;const eW={kernelName:zn,backendName:"wasm",setupFunc:function(e){QP=e.wasm.cwrap(zn,null,["number","number","number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{sparseIndices:r,sparseValues:s,defaultValue:i}=n,{outputShape:o}=a,u=t.makeOutput(o,i.dtype);if(0===g(o))return u;const{sliceRank:l,numUpdates:c,sliceSize:h,strides:d,outputSize:p}=hi(0,r,o),f=t.dataIdMap.get(r.dataId).id,m=t.dataIdMap.get(s.dataId).id,b=t.dataIdMap.get(i.dataId).id,y=new Uint8Array(new Int32Array(d).buffer),x=t.dataIdMap.get(u.dataId).id;return QP(f,m,s.shape.length,b,GM[i.dtype],l,c,h,y,p,x),u}},tW={kernelName:An,backendName:"wasm",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:i}=n,o=I(i,r.shape)[0],u=Cc(r,s,o),l=new Array(r.shape.length).fill(0),c=r.shape.slice();return u.map((e=>{const t=[...c];t[o]=e;const n=AO({inputs:{x:r},attrs:{begin:l,size:t},backend:a});return l[o]+=e,n}))}},nW=KM(_n),aW=KM(Wn),rW=ZM(Pn);let sW;const iW={kernelName:aa,backendName:"wasm",setupFunc:function(e){sW=e.wasm.cwrap(aa,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{alpha:r}=a,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),u=t.dataIdMap.get(o.dataId).id;return sW(i,r,GM[s.dtype],u),o}};let oW;const uW={kernelName:Un,backendName:"wasm",setupFunc:function(e){oW=e.wasm.cwrap(Un,null,["number","array","number","array","array","array","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{x:r}=n,{begin:s,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=a,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:b,isSimpleSlice:y,begin:x,end:w,strides:k}=_i(r.shape,s,i,o,u,l,c,h,d);let v;if(g)v=TO({inputs:{x:r},backend:t,attrs:{shape:m}});else if(b||y){p(r.shape.length>=1,(()=>`Input must have rank at least 1, got: ${r.shape.length}`));const e=gi(x,w,k),n=AO({inputs:{x:r},backend:t,attrs:{begin:x,size:e}});v=TO({inputs:{x:n},backend:t,attrs:{shape:m}}),t.disposeData(n.dataId)}else{const e=t.makeOutput(f,"float32"),n=t.dataIdMap.get(r.dataId).id,a=new Uint8Array(new Int32Array(D(r.shape)).buffer),s=new Uint8Array(new Int32Array(x).buffer),i=new Uint8Array(new Int32Array(w).buffer),o=new Uint8Array(new Int32Array(k).buffer),u=new Uint8Array(new Int32Array(f).buffer),l=new Uint8Array(new Int32Array(D(f)).buffer),c=t.dataIdMap.get(e.dataId).id;oW(n,a,r.shape.length,s,i,o,u,l,f.length,c),v=TO({inputs:{x:e},backend:t,attrs:{shape:m}}),t.disposeData(e.dataId)}return v}},lW={kernelName:Vn,backendName:"wasm",kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{data:r,dataSplits:s}=n,{separator:i,nGramWidths:o,leftPad:u,rightPad:l,padWidth:c,preserveShortSequences:h}=a,d=t.readSync(r.dataId),p=t.readSync(s.dataId),[f,m]=BN(d,p,i,o,u,l,c,h),g=t.makeOutput([f.length],"string");t.dataIdMap.get(g.dataId).stringBytes=f;const b=t.makeOutput(s.shape,"int32");return t.typedArrayFromHeap(b).set(m),[g,b]}},cW={kernelName:Gn,backendName:"wasm",kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{input:r,delimiter:s}=n,{skipEmpty:i}=a,o=t.readSync(r.dataId),u=t.readSync(s.dataId),[l,c,h]=GN(o,u[0],i),d=c.length,p=t.makeOutput([d,2],"int32");t.typedArrayFromHeap(p).set(l);const f=t.makeOutput([d],"string");t.dataIdMap.get(f.dataId).stringBytes=c;const m=t.makeOutput([2],"int32");return t.typedArrayFromHeap(m).set(h),[p,f,m]}},hW={kernelName:Hn,backendName:"wasm",kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{input:r}=n,{numBuckets:s}=a,i=jN(t.readSync(r.dataId),s),o=t.makeOutput(r.shape,"int32");return t.typedArrayFromHeap(o).set(i),o}},dW=ZM(jn);let pW;const fW={kernelName:En,backendName:"wasm",setupFunc:function(e){pW=e.wasm.cwrap(En,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:s}=a,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:h,originalAxes:d,inputWasTransposed:p}=oO(i,r,t);let f=h;if(p){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e,f=Vo(f.length,l.shape.length))}Wo("sum",f,l.shape.length);const[m,b]=zo(l.shape,f),y=g(b),x=t.makeOutput(m,l.dtype);if(0!==g(l.shape)){const e=t.dataIdMap.get(x.dataId).id;pW(u,y,GM[x.dtype],e)}if(p&&t.disposeData(c.dataId),s){const e=Po(x.shape,d);x.shape=e}return x}},mW=KM(qn),gW=KM(Kn);let bW;const yW={kernelName:xn,backendName:"wasm",setupFunc:function(e){bW=e.wasm.cwrap(xn,null,["number","number","number","number","number","number","array","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{tensor:r,indices:s,updates:i}=n,{}=a,o=t.makeOutput(r.shape,r.dtype);if(0===g(r.shape))return o;const{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=hi(0,s,r.shape),p=t.dataIdMap.get(s.dataId).id,f=t.dataIdMap.get(i.dataId).id,m=t.dataIdMap.get(r.dataId).id,b=new Uint8Array(new Int32Array(h).buffer),y=t.dataIdMap.get(o.dataId).id;return bW(p,f,GM[i.dtype],u,l,c,b,d,y,m),o}};let xW;const wW={kernelName:Xn,backendName:"wasm",setupFunc:function(e){xW=e.wasm.cwrap(Xn,null,["number","array","number","array","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,s=n.dataIdMap.get(r.dataId).id,{reps:i}=a,o=new Array(r.shape.length);for(let e=0;e<o.length;e++)o[e]=r.shape[e]*i[e];const u=new Uint8Array(new Int32Array(r.shape).buffer),l=new Uint8Array(new Int32Array(o).buffer),c=n.makeOutput(o,r.dtype),h=n.dataIdMap.get(c.dataId).id;return xW(s,u,r.shape.length,l,o.length,GM[c.dtype],h),c}};let kW;const vW={kernelName:Yn,backendName:"wasm",setupFunc:function(e){kW=e.wasm.cwrap(Yn,null,["number","array","number","number","number","bool","number","number"])},kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a}=e,{k:r,sorted:s}=n,i=t.dataIdMap.get(a.dataId).id,o=new Uint8Array(new Int32Array(a.shape).buffer),u=a.shape.slice();u[u.length-1]=r;const l=t.makeOutput(u,a.dtype),c=t.dataIdMap.get(l.dataId).id,h=t.makeOutput(u,"int32"),d=t.dataIdMap.get(h.dataId).id;return kW(i,o,a.shape.length,GM[a.dtype],r,s,c,d),[l,h]}};let IW;const SW={kernelName:Jn,backendName:"wasm",setupFunc:function(e){IW=e.wasm.cwrap(Jn,null,["number","number","bool","number","number","number","number","number","number","array","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{image:r,transforms:s}=n,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=a,[c,h,d,p]=r.shape,[f,m]=null!=l?l:[h,d],g=[c,f,m,p],b=new Uint8Array(new Int32Array(D(r.shape)).buffer),y=new Uint8Array(new Int32Array(D(g)).buffer),x=t.makeOutput(g,r.dtype),w=t.dataIdMap.get(x.dataId).id,k=t.dataIdMap.get(r.dataId).id,v=t.dataIdMap.get(s.dataId).id,I="nearest"===i?1:2;let S;switch(o){case"constant":default:S=1;break;case"reflect":S=2;break;case"wrap":S=3;break;case"nearest":S=4}return IW(k,v,s.shape[0]>1,c,f,m,p,d,h,b,r.shape.length-1,y,g.length-1,I,S,u,w),x}},NW={kernelName:Qn,backendName:"wasm",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:s}=t,{outputValues:i,outputShape:o,indices:u}=lC(a.readSync(s.dataId),r,s.shape,s.dtype);return[a.makeOutput(o,s.dtype,void 0,i),a.makeOutput([u.length],"int32",void 0,u)]}},CW={kernelName:ea,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:r}=t;let{axis:s}=a;s<0&&(s+=r.shape.length);const i=r.shape[s],o=r.shape.length,u=new Array(o-1);let l=0;for(let e=0;e<o;e++)e!==s&&(u[l++]=r.shape[e]);const c=new Array(i),h=new Array(o).fill(0),d=r.shape.slice();d[s]=1;for(let e=0;e<c.length;e++)h[s]=e,c[e]=AO({inputs:{x:r},attrs:{begin:h,size:d},backend:n});return c.map((({dataId:e,dtype:t})=>({dataId:e,dtype:t,shape:u})))}},$W={kernelName:na,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,a=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(a).fill(0),a}},TW=[qM,XM,YM,JM,QM,tO,lO,hO,pO,fO,mO,gO,bO,yO,xO,kO,$O,IO,NO,RO,DO,OO,LO,zO,WO,BO,VO,HO,qO,XO,JO,QO,tL,nL,aL,iL,uL,cL,dL,fL,gL,yL,wL,vL,SL,NL,$L,TL,_L,EL,AL,FL,ML,LL,zL,PL,BL,VL,HL,qL,XL,YL,JL,aO,ZL,QL,ez,nz,az,rz,iz,uz,oz,lz,cz,hz,dz,fz,gz,yz,xz,kz,Iz,Nz,$z,_z,Rz,Fz,Dz,Lz,Uz,Vz,Gz,Hz,Kz,Yz,Zz,Qz,tP,nP,aP,sP,iP,uP,cP,hP,dP,pP,fP,mP,_O,bP,xP,kP,IP,NP,$P,TP,_P,RP,FP,MP,OP,zP,PP,WP,BP,FO,Wz,UP,VP,HP,qP,JP,ZP,eW,tW,nW,aW,rW,iW,uW,lW,cW,hW,dW,fW,mW,gW,yW,wW,vW,SW,iO,NW,CW,$W];for(const e of TW)ma(e);const _W=q();_W.registerFlag("WASM_HAS_SIMD_SUPPORT",(async()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch(e){return!1}})),_W.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",(async()=>{if(_W.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}}));var EW=n(417),RW=n.n(EW),AW=n(593),FW=n(805),DW=n.n(FW);const MW=RW()||EW,OW=DW()||FW;class LW extends o{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(jW),qW=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new i(this,Lr())}write(e,t,n){const a={id:this.dataIdNextNumber++};return this.move(a,e,t,n,1),a}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){const t=Ma();return e(),{kernelMs:Ma()-t}}move(e,t,n,a,r){const s=this.dataIdNextNumber++;if("string"===a){const i=t;return void this.dataIdMap.set(e,{id:s,stringBytes:i,shape:n,dtype:a,memoryOffset:null,refCount:r})}const i=g(n),o=i*T(a),u=this.wasm._malloc(o)>>>0;this.dataIdMap.set(e,{id:s,memoryOffset:u,shape:n,dtype:a,refCount:r}),this.wasm.tfjs.registerTensor(s,i,u),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),u)}async read(e){return this.readSync(e)}readSync(e,t,n){const{memoryOffset:a,dtype:r,shape:s,stringBytes:i}=this.dataIdMap.get(e);if("string"===r)return null!=t&&0!==t||!(null==n||n>=i.length)?i.slice(t,n):i;t=t||0,n=n||g(s);const o=T(r);return function(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}(this.wasm.HEAPU8.slice(a+t*o,a+n*o).buffer,r)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){const n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){const t=this.dataIdMap.get(e);null!=t&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n,a){let r;if(null==n)r=this.write(null!=a?a:null,e,t);else{const a=this.dataIdNextNumber++;r={id:a},this.dataIdMap.set(r,{id:a,memoryOffset:n,shape:e,dtype:t,refCount:1});const s=g(e);this.wasm.tfjs.registerTensor(a,s,n)}return{dataId:r,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){const a=this.wasm.HEAPU8.buffer,{memoryOffset:r}=this.dataIdMap.get(n),s=g(e);switch(t){case"float32":return new Float32Array(a,r,s);case"int32":return new Int32Array(a,r,s);case"bool":return new Uint8Array(a,r,s);default:throw new Error(`Unknown dtype ${t}`)}}}function zW(e,t,n){if(null!=BW)return BW;let a="tfjs-backend-wasm.wasm";return e&&t?a="tfjs-backend-wasm-threaded-simd.wasm":e&&(a="tfjs-backend-wasm-simd.wasm"),null!=VW&&null!=VW[a]?VW[a]:n+a}async function PW(){const[e,t]=await Promise.all([q().getAsync("WASM_HAS_SIMD_SUPPORT"),q().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise(((n,a)=>{const r={};var s;r.locateFile=(n,a)=>{if(n.endsWith(".worker.js")){const e=AW.$.replace(/\n/g,"\\n"),t=new Blob([e],{type:"application/javascript"});return URL.createObjectURL(t)}return n.endsWith(".wasm")?zW(e,t,null!=UW?UW:a):a+n},HW&&(r.instantiateWasm=(s=zW(e,t,null!=UW?UW:""),(e,t)=>(function(e,t){return q().platform.fetch(e,t)}(s,{credentials:"same-origin"}).then((n=>{n.ok||e.env.a(`failed to load wasm binary file at '${s}'`),n.arrayBuffer().then((n=>{WebAssembly.instantiate(n,e).then((e=>{t(e.instance,e.module)}))}))})),{})));let i,o=!1;r.onAbort=()=>{o||GW||(GW=!0,a({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))},t&&e&&null==BW?(r.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+MW.toString()],{type:"text/javascript"}),i=MW(r)):i=OW(r),i.then((e=>{o=!0,GW=!1,e.tfjs={init:e.cwrap("init",null,[]),initWithThreadsCount:e.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:e.cwrap("get_threads_count","number",[]),registerTensor:e.cwrap("register_tensor",null,["number","number","number"]),disposeData:e.cwrap("dispose_data",null,["number"]),dispose:e.cwrap("dispose",null,[])},n({wasm:e})})).catch(a)}))}const WW=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"];let BW=null,UW=null,VW={},GW=!1,HW=!1,jW=-1,qW=null;Ur("wasm",(async()=>{const{wasm:e}=await PW();return new LW(e)}),2);var KW=function(e,t,n,a){return new(n||(n=Promise))((function(r,s){function i(e){try{u(a.next(e))}catch(e){s(e)}}function o(e){try{u(a.throw(e))}catch(e){s(e)}}function u(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}u((a=a.apply(e,t||[])).next())}))},XW=function(e,t){var n,a,r,s,i={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return s={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function o(o){return function(u){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;s&&(s=0,o[0]&&(i=0)),i;)try{if(n=1,a&&(r=2&o[0]?a.return:o[0]?a.throw||((r=a.return)&&r.call(a),0):a.next)&&!(r=r.call(a,o[1])).done)return r;switch(a=0,r&&(o=[2&o[0],r.value]),o[0]){case 0:case 1:r=o;break;case 4:return i.label++,{value:o[1],done:!1};case 5:i.label++,a=o[1],o=[0];continue;case 7:o=i.ops.pop(),i.trys.pop();continue;default:if(!((r=(r=i.trys).length>0&&r[r.length-1])||6!==o[0]&&2!==o[0])){i=0;continue}if(3===o[0]&&(!r||o[1]>r[0]&&o[1]<r[3])){i.label=o[1];break}if(6===o[0]&&i.label<r[1]){i.label=r[1],r=o;break}if(r&&i.label<r[2]){i.label=r[2],i.ops.push(o);break}r[2]&&i.ops.pop(),i.trys.pop();continue}o=t.call(e,i)}catch(e){o=[6,e],a=0}finally{n=r=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,u])}}},YW=function(e,t,n){var a,r=null!==(a=vpod.env.DATASET_SERVER)&&void 0!==a?a:vpod.location.origin;return"".concat(r,"/dataset/").concat(e,"/train/").concat(t,"/").concat(n)};function JW(e){return KW(this,arguments,void 0,(function(e,t){var n,a,r,s,i,o,u,l,c,h;return void 0===t&&(t=!0),XW(this,(function(d){switch(d.label){case 0:return[4,fetch(e)];case 1:if(!(n=d.sent()).ok)throw new Error("Failed to fetch dataset from ".concat(e));return s=(r=JSON).parse,[4,n.json()];case 2:if(a=s.apply(r,[d.sent()]),console.log("Data Object:",a),!a.data||!a.data.images||!a.data.labels)throw new Error("The dataset JSON structure is invalid or missing required properties.");return i=a.data.images,o=a.data.labels,t&&(i=i.map((function(e){return e.map((function(e){return(e/255-.1307)/.3081}))}))),u=o.length,l=a.shape[0],c=Eu(i,[u,l],"float32"),h=_u(o,"float32"),[2,{images:c,labels:h}]}}))}))}var ZW=function(){function e(e,t,n){this.model=new Gg(undefined),this.model.add(sx({units:t,inputShape:[e],activation:"relu"})),this.model.add(sx({units:t,activation:"relu"})),this.model.add(sx({units:n,activation:"softmax"})),this.model.compile({optimizer:Ol.adam(),loss:"sparseCategoricalCrossentropy",metrics:["accuracy"]})}return e.prototype.getParameters=function(){return this.model.getWeights().map((function(e){return e.arraySync()}))},e.prototype.setParameters=function(e){var t=e.map((function(e){return Mr(e)}));this.model.setWeights(t)},e.prototype.fit=function(e){return KW(this,arguments,void 0,(function(e,t){var n,a,r;return void 0===t&&(t=10),XW(this,(function(s){switch(s.label){case 0:return console.log("Training model..."),n=e.images,a=e.labels,[4,this.model.fit(n,a,{epochs:t,batchSize:64,validationSplit:.2,shuffle:!0})];case 1:return r=s.sent(),console.log("Training completed.",r),n.dispose(),a.dispose(),[2,r]}}))}))},e.prototype.evaluate=function(e){return KW(this,void 0,void 0,(function(){var t,n,a,r,s,i,o;return XW(this,(function(u){switch(u.label){case 0:return t=e.images,n=e.labels,[4,this.model.evaluate(t,n,{batchSize:64})];case 1:if(a=u.sent(),!Array.isArray(a)||2!==a.length)throw new Error("Unexpected evaluation result structure.");return r=null===(i=a[0])||void 0===i?void 0:i.dataSync()[0],s=null===(o=a[1])||void 0===o?void 0:o.dataSync()[0],[2,{loss:r,accuracy:s,length:1e3}]}}))}))},e}(),QW=function(e,t,n){return KW(void 0,void 0,void 0,(function(){var e;return XW(this,(function(t){return e=nB.getParameters(),console.log("Parameters:",e),[2,{params:e}]}))}))},eB=function(e,t,n){return KW(void 0,void 0,void 0,(function(){var t,n;return XW(this,(function(a){switch(a.label){case 0:return t=e.modelWeights||null,[4,nB.setParameters(t)];case 1:return a.sent(),[4,JW(YW("mnist","iid",600))];case 2:return n=a.sent(),[4,nB.fit(n,5)];case 3:return a.sent(),[2,{weights:nB.getParameters(),length:1e3}]}}))}))},tB=function(e,t,n){return KW(void 0,void 0,void 0,(function(){var e;return XW(this,(function(t){switch(t.label){case 0:return[4,JW(YW("mnist","iid",600))];case 1:return e=t.sent(),[4,nB.evaluate(e)];case 2:return[2,t.sent()]}}))}))};console.log("Client TF loading..."),function(e,t=!1){if(GW)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof e)UW=e;else{VW=e;const t=WW.filter((e=>null==VW[e]));if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}HW=t}("dist/");var nB=new ZW(784,200,100);(function(){return KW(this,void 0,void 0,(function(){return XW(this,(function(e){switch(e.label){case 0:return[4,vr.setBackend("wasm")];case 1:return e.sent(),console.log("TF Backend:",vr.backendName),[2]}}))}))})().catch((function(e){return console.error(e)})),console.log("Client TF loaded.")})(),a})()));