/*! For license information please see NonMaxSuppressionV5.js.LICENSE.txt */
import{NonMaxSuppressionV5}from"@tensorflow/tfjs-core";import{parseResultStruct}from"./NonMaxSuppression_util";let wasmFunc;function setup(e){wasmFunc=e.wasm.cwrap(NonMaxSuppressionV5,"number",["number","number","number","number","number","number"])}function kernelFunc(e){const{backend:t,inputs:n,attrs:s}=e,{iouThreshold:u,maxOutputSize:r,scoreThreshold:a,softNmsSigma:o}=s,{boxes:p,scores:c}=n,m=t.dataIdMap.get(p.dataId).id,i=t.dataIdMap.get(c.dataId).id,d=wasmFunc(m,i,r,u,a,o),{pSelectedIndices:l,selectedSize:S,pSelectedScores:b,pValidOutputs:f}=parseResultStruct(t,d);return t.wasm._free(f),[t.makeOutput([S],"int32",l),t.makeOutput([S],"float32",b)]}export const nonMaxSuppressionV5Config={kernelName:NonMaxSuppressionV5,backendName:"wasm",setupFunc:setup,kernelFunc};