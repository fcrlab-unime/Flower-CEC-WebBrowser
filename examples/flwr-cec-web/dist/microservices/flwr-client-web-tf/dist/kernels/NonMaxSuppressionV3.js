/*! For license information please see NonMaxSuppressionV3.js.LICENSE.txt */
import{NonMaxSuppressionV3}from"@tensorflow/tfjs-core";import{parseResultStruct}from"./NonMaxSuppression_util";let wasmFunc;function setup(e){wasmFunc=e.wasm.cwrap(NonMaxSuppressionV3,"number",["number","number","number","number","number"])}function kernelFunc(e){const{backend:n,inputs:s,attrs:t}=e,{iouThreshold:r,maxOutputSize:u,scoreThreshold:a}=t,{boxes:o,scores:p}=s,c=n.dataIdMap.get(o.dataId).id,m=n.dataIdMap.get(p.dataId).id,i=wasmFunc(c,m,u,r,a),{pSelectedIndices:d,selectedSize:l,pSelectedScores:S,pValidOutputs:b}=parseResultStruct(n,i);return n.wasm._free(S),n.wasm._free(b),n.makeOutput([l],"int32",d)}export const nonMaxSuppressionV3Config={kernelName:NonMaxSuppressionV3,backendName:"wasm",setupFunc:setup,kernelFunc};