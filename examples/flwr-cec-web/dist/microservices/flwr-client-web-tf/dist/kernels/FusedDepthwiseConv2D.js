/*! For license information please see FusedDepthwiseConv2D.js.LICENSE.txt */
import{backend_util,FusedDepthwiseConv2D}from"@tensorflow/tfjs-core";import{FusableActivation}from"./types";let wasmFusedDepthwiseConv2d;function setup(e){wasmFusedDepthwiseConv2d=e.wasm.cwrap(FusedDepthwiseConv2D,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function fusedDepthwiseConv2d(e){const{inputs:t,attrs:n,backend:a}=e,{x:o,filter:s,bias:d,preluActivationWeights:i}=t,{strides:r,pad:u,dilations:p,dataFormat:h,dimRoundingMode:m,activation:b,leakyreluAlpha:l}=n,w=backend_util.computeConv2DInfo(o.shape,s.shape,r,p,u,m,!0),f=FusableActivation[b];if(null==f)throw new Error(`${b} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);const c=a.dataIdMap.get(o.dataId).id,D=a.dataIdMap.get(s.dataId).id,v=w.outChannels;let C=0;if(null!=d){const e=a.dataIdMap.get(d.dataId);if(1!==e.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==v)throw new Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${v})`);C=e.id}const g=w.filterHeight,F=w.filterWidth,I=w.padInfo.top,k=w.padInfo.right,M=w.padInfo.bottom,W=w.padInfo.left,H=w.dilationHeight,y=w.dilationWidth,A=w.strideHeight,E=w.strideWidth,$=w.inChannels,N="SAME"===w.padInfo.type?1:0,S=w.batchSize,x=w.inHeight,_=w.inWidth;if("NHWC"!==h)throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);const j=a.makeOutput(w.outShape,"float32"),z=a.dataIdMap.get(j.dataId).id,O=null==i?0:a.dataIdMap.get(i.dataId).id;return wasmFusedDepthwiseConv2d(c,S,x,_,D,g,F,C,I,k,M,W,N,H,y,A,E,$,v,f,O,l||0,z),j}export const fusedDepthwiseConv2DConfig={kernelName:FusedDepthwiseConv2D,backendName:"wasm",setupFunc:setup,kernelFunc:fusedDepthwiseConv2d};