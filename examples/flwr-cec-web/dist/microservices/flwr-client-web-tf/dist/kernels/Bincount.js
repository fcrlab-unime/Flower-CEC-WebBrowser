/*! For license information please see Bincount.js.LICENSE.txt */
import{Bincount}from"@tensorflow/tfjs-core";import{CppDType}from"./types";let wasmBincount;function setup(n){wasmBincount=n.wasm.cwrap(Bincount,null,["number","number","boolean","number","number","number"])}function bincount(n){const{backend:e,inputs:t,attrs:u}=n,{x:o,weights:p}=t,{size:a}=u,c=0!==p.shape.reduce(((n,e)=>n*e),1),r=1===o.shape.length?[a]:[o.shape[0],a],s=e.makeOutput(r,p.dtype);function i(n){return e.dataIdMap.get(n.dataId).id}return wasmBincount(i(o),a,c,i(p),CppDType[p.dtype],i(s)),s}export const bincountConfig={kernelName:Bincount,backendName:"wasm",setupFunc:setup,kernelFunc:bincount};