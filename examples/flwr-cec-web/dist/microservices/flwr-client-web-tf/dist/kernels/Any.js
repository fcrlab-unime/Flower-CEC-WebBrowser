/*! For license information please see Any.js.LICENSE.txt */
import{Any,backend_util,util}from"@tensorflow/tfjs-core";import{permuteAxesAndTranspose}from"./kernel_utils";let wasmAny;function setup(e){wasmAny=e.wasm.cwrap(Any,null,["number, number, number"])}function any(e){const{backend:a,inputs:t,attrs:n}=e,{axis:s,keepDims:p}=n,{x:d}=t;let i=a.dataIdMap.get(d.dataId).id,o=d;const{transposed:r,axes:u,originalAxes:m,inputWasTransposed:c}=permuteAxesAndTranspose(d,s,a);c&&(o=r,i=a.dataIdMap.get(r.dataId).id);const l=o.shape.length;backend_util.assertAxesAreInnerMostDims("any",u,l);const[A,k]=backend_util.computeOutAndReduceShapes(o.shape,u),y=util.sizeFromShape(k),h=a.makeOutput(A,d.dtype);if(0!==util.sizeFromShape(o.shape)){const e=a.dataIdMap.get(h.dataId).id;wasmAny(i,y,e)}if(c&&a.disposeData(r.dataId),p){const e=backend_util.expandShapeToKeepDim(h.shape,m);h.shape=e}return h}export const anyConfig={kernelName:Any,backendName:"wasm",setupFunc:setup,kernelFunc:any};