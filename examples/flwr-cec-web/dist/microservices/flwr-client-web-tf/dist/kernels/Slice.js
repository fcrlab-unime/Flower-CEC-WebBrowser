/*! For license information please see Slice.js.LICENSE.txt */
import{Slice,slice_util,util}from"@tensorflow/tfjs-core";import{sliceImplCPU}from"../kernel_utils/shared";export function slice(e){const{inputs:{x:t},attrs:{begin:s,size:i},backend:l}=e,[r,c]=slice_util.parseSliceParams(t,s,i),n=slice_util.isSliceContinous(t.shape,r,c),o=l.readSync(t.dataId),a=l.makeOutput(c,t.dtype),p=util.computeStrides(t.shape),u=l.dataIdMap.get(a.dataId);if(n){const e=slice_util.computeFlatOffset(r,p);return"string"===t.dtype?u.stringBytes=o.slice(e,e+util.sizeFromShape(c)):l.typedArrayFromHeap(a).set(o.subarray(e,e+util.sizeFromShape(c))),a}if("string"===t.dtype){const e=sliceImplCPU(o,r,c,t.shape,t.dtype);return u.stringBytes=e,a}const d=l.typedArrayFromHeap(a),f=t.shape.length;if(2===f)slice2d(o,p[0],d,r,c);else if(3===f)slice3d(o,p[0],p[1],d,r,c);else if(4===f)slice4d(o,p[0],p[1],p[2],d,r,c);else{const e=sliceImplCPU(o,r,c,t.shape,t.dtype);d.set(e)}return a}function slice2d(e,t,s,i,l){let r=0;const c=i[0],n=i[1],o=c+l[0];for(let i=c;i<o;i++){const c=i*t+n;s.set(e.subarray(c,c+l[1]),r),r+=l[1]}}function slice3d(e,t,s,i,l,r){let c=0;const n=l[0],o=l[1],a=l[2],p=n+r[0],u=o+r[1];for(let l=n;l<p;l++)for(let n=o;n<u;n++){const o=l*t+n*s+a;i.set(e.subarray(o,o+r[2]),c),c+=r[2]}}function slice4d(e,t,s,i,l,r,c){let n=0;const o=r[0],a=r[1],p=r[2],u=o+c[0],d=a+c[1],f=p+c[2],m=r[3];for(let r=o;r<u;r++)for(let o=a;o<d;o++)for(let a=p;a<f;a++){const p=r*t+o*s+a*i+m;l.set(e.subarray(p,p+c[3]),n),n+=c[3]}}export const sliceConfig={kernelName:Slice,backendName:"wasm",kernelFunc:slice};