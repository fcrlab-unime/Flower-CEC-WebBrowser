/*! For license information please see NonMaxSuppressionV4.js.LICENSE.txt */
import{NonMaxSuppressionV4}from"@tensorflow/tfjs-core";import{parseResultStruct}from"./NonMaxSuppression_util";let wasmFunc;function setup(e){wasmFunc=e.wasm.cwrap(NonMaxSuppressionV4,"number",["number","number","number","number","number","bool"])}function nonMaxSuppressionV4(e){const{backend:n,inputs:t,attrs:s}=e,{iouThreshold:u,maxOutputSize:a,scoreThreshold:o,padToMaxOutputSize:r}=s,{boxes:p,scores:i}=t,c=n.dataIdMap.get(p.dataId).id,m=n.dataIdMap.get(i.dataId).id,d=wasmFunc(c,m,a,u,o,r),{pSelectedIndices:S,selectedSize:l,pSelectedScores:x,pValidOutputs:b}=parseResultStruct(n,d);return n.wasm._free(x),[n.makeOutput([l],"int32",S),n.makeOutput([],"int32",b)]}export const nonMaxSuppressionV4Config={kernelName:NonMaxSuppressionV4,backendName:"wasm",setupFunc:setup,kernelFunc:nonMaxSuppressionV4};