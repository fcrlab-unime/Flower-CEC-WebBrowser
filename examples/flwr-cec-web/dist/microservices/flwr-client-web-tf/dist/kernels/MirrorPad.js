/*! For license information please see MirrorPad.js.LICENSE.txt */
import{MirrorPad}from"@tensorflow/tfjs-core";import{CppDType}from"./types";var MirrorPaddingMode;let wasmMirrorPad;function setup(r){wasmMirrorPad=r.wasm.cwrap(MirrorPad,null,["number","array","number","number","array","array","number","number"])}function mirrorPad(r){const{inputs:{x:a},backend:e,attrs:{paddings:n,mode:t}}=r,d=n.map(((r,e)=>r[0]+a.shape[e]+r[1])),i=e.dataIdMap.get(a.dataId).id,o=e.makeOutput(d,a.dtype),m=e.dataIdMap.get(o.dataId).id,p=new Uint8Array(new Int32Array(a.shape).buffer),s=n.map((r=>r[0])),u=n.map((r=>r[1])),f=new Uint8Array(new Int32Array(s).buffer),y=new Uint8Array(new Int32Array(u).buffer);return wasmMirrorPad(i,p,a.shape.length,CppDType[a.dtype],f,y,MirrorPaddingMode[t],m),o}!function(r){r[r.reflect=0]="reflect",r[r.symmetric=1]="symmetric"}(MirrorPaddingMode||(MirrorPaddingMode={}));export const mirrorPadConfig={kernelName:MirrorPad,backendName:"wasm",kernelFunc:mirrorPad,setupFunc:setup};