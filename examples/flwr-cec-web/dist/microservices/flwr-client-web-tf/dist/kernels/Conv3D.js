/*! For license information please see Conv3D.js.LICENSE.txt */
import{backend_util,Conv3D}from"@tensorflow/tfjs-core";let wasmConv3D;function setup(e){wasmConv3D=e.wasm.cwrap(Conv3D,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}export function conv3D(e){const{inputs:t,backend:n,attrs:r}=e,{x:o,filter:a}=t,{strides:u,pad:i,dilations:d}=r;if("float32"!==o.dtype)throw new Error(`Tensor x must have dtype float32, got ${o.dtype}`);if("float32"!==a.dtype)throw new Error(`Tensor filter must have dtype float32, got ${a.dtype}`);const m=backend_util.computeConv3DInfo(o.shape,a.shape,u,d,i),p=n.makeOutput(m.outShape,o.dtype);return wasmConv3D(n.dataIdMap.get(o.dataId).id,n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(p.dataId).id,m.batchSize,m.inDepth,m.inHeight,m.inWidth,m.inChannels,m.outDepth,m.outHeight,m.outWidth,m.outChannels,m.strideDepth,m.strideHeight,m.strideWidth,m.dilationDepth,m.dilationHeight,m.dilationWidth,m.filterDepth,m.filterHeight,m.filterWidth,m.padInfo.front,m.padInfo.top,m.padInfo.left),p}export const conv3DConfig={kernelName:Conv3D,backendName:"wasm",setupFunc:setup,kernelFunc:conv3D};