/*! For license information please see AddN.js.LICENSE.txt */
import{AddN,util}from"@tensorflow/tfjs-core";import{CppDType}from"./types";let wasmFunc;function setupFunc(e){wasmFunc=e.wasm.cwrap(AddN,null,["array","number","number","number"])}function addn(e){const{inputs:n,backend:t}=e,a=t.makeOutput(n[0].shape,n[0].dtype);if(0===util.sizeFromShape(a.shape))return a;const d=n.map((e=>t.dataIdMap.get(e.dataId).id)),r=new Uint8Array(new Int32Array(d).buffer),p=t.dataIdMap.get(a.dataId).id;return wasmFunc(r,d.length,CppDType[a.dtype],p),a}export const addNConfig={kernelName:AddN,backendName:"wasm",setupFunc,kernelFunc:addn};