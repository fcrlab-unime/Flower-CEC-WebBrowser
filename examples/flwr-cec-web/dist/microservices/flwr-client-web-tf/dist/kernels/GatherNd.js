/*! For license information please see GatherNd.js.LICENSE.txt */
import{gather_util,GatherNd}from"@tensorflow/tfjs-core";import{CppDType}from"./types";let wasmGatherNd;function setup(e){wasmGatherNd=e.wasm.cwrap(GatherNd,null,["number","number","number","number","number","number","array","number"])}function gatherNd(e){const{backend:t,inputs:a}=e,{params:r,indices:n}=a,[d,p,u,m]=gather_util.prepareAndValidate(r,n),s=t.makeOutput(d,r.dtype);if(0===p)return s;const i=n.shape,o=i[i.length-1],h=t.dataIdMap.get(r.dataId).id,c=t.dataIdMap.get(n.dataId).id,N=new Uint8Array(new Int32Array(m).buffer),b=t.dataIdMap.get(s.dataId).id;return wasmGatherNd(h,CppDType[r.dtype],c,p,o,u,N,b),s}export const gatherNdConfig={kernelName:GatherNd,backendName:"wasm",setupFunc:setup,kernelFunc:gatherNd};