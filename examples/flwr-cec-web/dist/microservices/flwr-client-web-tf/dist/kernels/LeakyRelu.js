/*! For license information please see LeakyRelu.js.LICENSE.txt */
import{LeakyRelu,util}from"@tensorflow/tfjs-core";import{CppDType}from"./types";let wasmFunc;function setupFunc(e){wasmFunc=e.wasm.cwrap(LeakyRelu,null,["number","number","number","number"])}export function leakyRelu(e){const{inputs:{x:a},attrs:{alpha:t},backend:u}=e,n=u.dataIdMap.get(a.dataId).id,p=u.makeOutput(a.shape,"float32");if(0!==util.sizeFromShape(a.shape)){const e=u.dataIdMap.get(p.dataId).id;wasmFunc(n,CppDType[a.dtype],t,e)}return p}export const leakyReluConfig={kernelName:LeakyRelu,backendName:"wasm",setupFunc,kernelFunc:leakyRelu};