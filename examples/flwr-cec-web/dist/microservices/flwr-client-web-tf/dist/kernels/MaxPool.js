/*! For license information please see MaxPool.js.LICENSE.txt */
import{backend_util,MaxPool,util}from"@tensorflow/tfjs-core";let wasmMaxPool;function setup(t){wasmMaxPool=t.wasm.cwrap(MaxPool,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function maxPool(t){const{inputs:e,attrs:a,backend:o}=t,n=e.x,r=o.dataIdMap.get(n.dataId).id;util.assert("float32"===n.dtype,(()=>`Error in MaxPool: only float32 input is supported. Got ${n.dtype}.`));const{filterSize:u,strides:s,pad:d,dimRoundingMode:m}=a,i=backend_util.computePool2DInfo(n.shape,u,s,1,d,m),l=i.filterHeight,p=i.filterWidth,b=i.padInfo.top,f=i.padInfo.right,c=i.padInfo.bottom,h=i.padInfo.left,x=i.dilationHeight,P=i.dilationWidth,w=i.strideHeight,M=i.strideWidth,I=i.inChannels,g=i.outChannels;if("channelsLast"!==i.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${i.dataFormat}'. Please use 'channelsLast'.`);const k=o.makeOutput(i.outShape,"float32"),F=o.dataIdMap.get(k.dataId).id;return wasmMaxPool(r,n.shape[0],n.shape[1],n.shape[2],l,p,b,f,c,h,x,P,w,M,I,g,F),k}export const maxPoolConfig={kernelName:MaxPool,backendName:"wasm",setupFunc:setup,kernelFunc:maxPool};