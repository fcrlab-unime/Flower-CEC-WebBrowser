/*! For license information please see Pack.js.LICENSE.txt */
import{Pack,util}from"@tensorflow/tfjs-core";import{concat}from"./Concat";import{expandDims}from"./ExpandDims";export function pack(t){const{inputs:a,backend:s,attrs:e}=t,{axis:n}=e;if(1===a.length)return expandDims({inputs:{input:a[0]},backend:s,attrs:{dim:n}});const c=a[0].shape,p=a[0].dtype;a.forEach((t=>{util.assertShapesMatch(c,t.shape,"All tensors passed to stack must have matching shapes"),util.assert(p===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],r=a.map((t=>{const a=expandDims({inputs:{input:t},backend:s,attrs:{dim:n}});return o.push(a),a})),i=concat({inputs:r,backend:s,attrs:{axis:n}});return o.forEach((t=>s.disposeData(t.dataId))),i}export const packConfig={kernelName:Pack,backendName:"wasm",kernelFunc:pack};