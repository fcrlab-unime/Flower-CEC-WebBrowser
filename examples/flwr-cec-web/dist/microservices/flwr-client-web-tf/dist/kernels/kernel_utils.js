/*! For license information please see kernel_utils.js.LICENSE.txt */
import{backend_util,util}from"@tensorflow/tfjs-core";import{transpose}from"./Transpose";export function permuteAxesAndTranspose(t,e,a){const n=t.shape,s=t.shape.length,r=util.parseAxisParam(e,n);let o=r;const p=backend_util.getAxesPermutation(o,s);let d=null,i=!1;if(null!=p){const e=new Array(s);for(let t=0;t<e.length;t++)e[t]=n[p[t]];o=backend_util.getInnerMostAxes(o.length,s),d=transpose({inputs:{x:t},attrs:{perm:p},backend:a});const r=a.dataIdMap.get(t.dataId).id;a.dataIdMap.get(d.dataId).id!==r&&(i=!0)}return{transposed:d,originalAxes:r,axes:o,inputWasTransposed:i}}