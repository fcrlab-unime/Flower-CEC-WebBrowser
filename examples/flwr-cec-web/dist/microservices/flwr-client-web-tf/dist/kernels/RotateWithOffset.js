/*! For license information please see RotateWithOffset.js.LICENSE.txt */
import{RotateWithOffset}from"@tensorflow/tfjs-core";import{backend_util}from"@tensorflow/tfjs-core";let wasmRotate;function setup(t){wasmRotate=t.wasm.cwrap(RotateWithOffset,null,["number","number","number","number","number","number","number","number","array","number","number"])}export function rotateWithOffset(t){const{inputs:e,backend:a,attrs:r}=t,{image:n}=e,{radians:o,fillValue:u,center:f}=r,m=a.makeOutput(n.shape,n.dtype),s=a.dataIdMap.get(n.dataId).id,i=a.dataIdMap.get(m.dataId).id,[b,d,p,c]=n.shape,[l,w]=backend_util.getImageCenter(f,d,p),h="number"==typeof u?[u,u,u,0===u?0:255]:[...u,255],g=new Uint8Array(new Int32Array(h).buffer);return wasmRotate(s,b,d,p,c,o,l,w,g,h.length,i),m}export const rotateWithOffsetConfig={kernelName:RotateWithOffset,backendName:"wasm",kernelFunc:rotateWithOffset,setupFunc:setup};