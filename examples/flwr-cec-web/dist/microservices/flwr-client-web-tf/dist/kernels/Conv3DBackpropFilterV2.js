/*! For license information please see Conv3DBackpropFilterV2.js.LICENSE.txt */
import{backend_util,Conv3DBackpropFilterV2}from"@tensorflow/tfjs-core";let wasmConv3DBackpropFilterV2;function setup(e){wasmConv3DBackpropFilterV2=e.wasm.cwrap(Conv3DBackpropFilterV2,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}export function conv3DBackpropFilterV2(e){const{inputs:t,backend:r,attrs:n}=e,{x:o,dy:a}=t,{strides:i,pad:p,filterShape:u}=n;if("float32"!==o.dtype)throw new Error(`Tensor dy must have dtype float32, got ${o.dtype}`);if("float32"!==a.dtype)throw new Error(`Tensor filter must have dtype float32, got ${a.dtype}`);const d=backend_util.computeConv3DInfo(o.shape,u,i,1,p),m=r.makeOutput(d.filterShape,a.dtype);return wasmConv3DBackpropFilterV2(r.dataIdMap.get(o.dataId).id,r.dataIdMap.get(a.dataId).id,r.dataIdMap.get(m.dataId).id,d.batchSize,d.inDepth,d.inHeight,d.inWidth,d.inChannels,d.outDepth,d.outHeight,d.outWidth,d.outChannels,d.strideDepth,d.strideHeight,d.strideWidth,d.dilationDepth,d.dilationHeight,d.dilationWidth,d.filterDepth,d.filterHeight,d.filterWidth,d.padInfo.front,d.padInfo.top,d.padInfo.left),m}export const conv3DBackpropFilterV2Config={kernelName:Conv3DBackpropFilterV2,backendName:"wasm",setupFunc:setup,kernelFunc:conv3DBackpropFilterV2};