/*! For license information please see FusedConv2D.js.LICENSE.txt */
import{backend_util,FusedConv2D}from"@tensorflow/tfjs-core";import{FusableActivation}from"./types";let wasmFusedConv2d;function setup(e){wasmFusedConv2d=e.wasm.cwrap(FusedConv2D,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function fusedConv2d(e){const{inputs:t,attrs:n,backend:a}=e,{x:o,filter:d,bias:r,preluActivationWeights:u}=t,{strides:s,pad:i,dilations:m,dataFormat:p,dimRoundingMode:b,activation:l,leakyreluAlpha:h}=n,f=backend_util.computeConv2DInfo(o.shape,d.shape,s,m,i,b),c=FusableActivation[l];if(null==c)throw new Error(`${l} activation not yet supported for FusedConv2D in the wasm backend.`);const v=a.dataIdMap.get(o.dataId).id,C=a.dataIdMap.get(d.dataId).id,w=f.outChannels;let g=0;if(null!=r){const e=a.dataIdMap.get(r.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==w)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${w})`);g=e.id}const F=f.filterHeight,I=f.filterWidth,k=f.padInfo.top,D=f.padInfo.right,M=f.padInfo.bottom,W=f.padInfo.left,H=f.dilationHeight,y=f.dilationWidth,A=f.strideHeight,E=f.strideWidth,$=f.inChannels,N="SAME"===f.padInfo.type?1:0,S=f.batchSize,x=f.inHeight,_=f.inWidth;if("NHWC"!==p)throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);const j=a.makeOutput(f.outShape,"float32"),z=a.dataIdMap.get(j.dataId).id,O=null==u?0:a.dataIdMap.get(u.dataId).id;return wasmFusedConv2d(v,S,x,_,C,F,I,g,k,D,M,W,N,H,y,A,E,$,w,c,O,h||0,z),j}export const fusedConv2DConfig={kernelName:FusedConv2D,backendName:"wasm",setupFunc:setup,kernelFunc:fusedConv2d};