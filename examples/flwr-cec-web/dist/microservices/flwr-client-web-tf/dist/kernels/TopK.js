/*! For license information please see TopK.js.LICENSE.txt */
import{TopK}from"@tensorflow/tfjs-core";import{CppDType}from"./types";let wasmTopK;function setup(t){wasmTopK=t.wasm.cwrap(TopK,null,["number","array","number","number","number","bool","number","number"])}export const topk=({inputs:t,backend:e,attrs:a})=>{const{x:p}=t,{k:n,sorted:r}=a,o=e.dataIdMap.get(p.dataId).id,s=new Uint8Array(new Int32Array(p.shape).buffer),d=p.shape.slice();d[d.length-1]=n;const u=e.makeOutput(d,p.dtype),m=e.dataIdMap.get(u.dataId).id,c=e.makeOutput(d,"int32"),i=e.dataIdMap.get(c.dataId).id;return wasmTopK(o,s,p.shape.length,CppDType[p.dtype],n,r,m,i),[u,c]};export const topKConfig={kernelName:TopK,backendName:"wasm",setupFunc:setup,kernelFunc:topk};