/*! For license information please see AvgPool.js.LICENSE.txt */
import{AvgPool,backend_util}from"@tensorflow/tfjs-core";let wasmAvgPool;function setup(t){wasmAvgPool=t.wasm.cwrap(AvgPool,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function avgPool(t){const{inputs:e,attrs:o,backend:a}=t,n=e.x,r=a.dataIdMap.get(n.dataId).id,{filterSize:i,strides:d,pad:s,dimRoundingMode:l}=o,u=backend_util.computePool2DInfo(n.shape,i,d,1,s,l),m=u.filterHeight,p=u.filterWidth,b=u.padInfo.top,g=u.padInfo.right,h=u.padInfo.bottom,c=u.padInfo.left,f=u.strideHeight,w=u.strideWidth,P=u.inChannels;if("channelsLast"!==u.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${u.dataFormat}'. Please use 'channelsLast'.`);if(1!==u.dilationWidth||1!==u.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${u.dilationHeight}, ${u.dilationWidth}].`);const v=a.makeOutput(u.outShape,"float32"),k=a.dataIdMap.get(v.dataId).id;return wasmAvgPool(r,n.shape[0],n.shape[1],n.shape[2],m,p,b,g,h,c,f,w,P,k),v}export const avgPoolConfig={kernelName:AvgPool,backendName:"wasm",setupFunc:setup,kernelFunc:avgPool};