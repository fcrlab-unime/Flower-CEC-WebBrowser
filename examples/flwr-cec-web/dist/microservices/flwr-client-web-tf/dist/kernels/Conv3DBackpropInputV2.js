/*! For license information please see Conv3DBackpropInputV2.js.LICENSE.txt */
import{backend_util,Conv3DBackpropInputV2}from"@tensorflow/tfjs-core";let wasmConv3DBackpropInputV2;function setup(t){wasmConv3DBackpropInputV2=t.wasm.cwrap(Conv3DBackpropInputV2,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}export function conv3DBackpropInputV2(t){const{inputs:e,backend:n,attrs:r}=t,{dy:p,filter:o}=e,{pad:a,strides:u,inputShape:d}=r;if("float32"!==p.dtype)throw new Error(`Tensor dy must have dtype float32, got ${p.dtype}`);if("float32"!==o.dtype)throw new Error(`Tensor filter must have dtype float32, got ${o.dtype}`);const i=backend_util.computeConv3DInfo(d,o.shape,u,1,a),m=n.makeOutput(i.inShape,p.dtype);return wasmConv3DBackpropInputV2(n.dataIdMap.get(o.dataId).id,n.dataIdMap.get(p.dataId).id,n.dataIdMap.get(m.dataId).id,i.batchSize,i.inDepth,i.inHeight,i.inWidth,i.inChannels,i.outDepth,i.outHeight,i.outWidth,i.outChannels,i.strideDepth,i.strideHeight,i.strideWidth,i.dilationDepth,i.dilationHeight,i.dilationWidth,i.filterDepth,i.filterHeight,i.filterWidth,i.padInfo.front,i.padInfo.top,i.padInfo.left),m}export const conv3DBackpropInputV2Config={kernelName:Conv3DBackpropInputV2,backendName:"wasm",setupFunc:setup,kernelFunc:conv3DBackpropInputV2};