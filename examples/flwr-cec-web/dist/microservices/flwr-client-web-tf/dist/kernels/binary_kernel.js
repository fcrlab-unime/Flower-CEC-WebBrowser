/*! For license information please see binary_kernel.js.LICENSE.txt */
import{backend_util,util}from"@tensorflow/tfjs-core";import{CppDType}from"./types";export function createBinaryKernelConfig(e,a,t){let n;return{kernelName:e,backendName:"wasm",setupFunc:function(a){n=a.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(e){const{backend:a,inputs:r}=e,{a:p,b:u}=r,d=a.dataIdMap.get(p.dataId).id,i=a.dataIdMap.get(u.dataId).id,s=null!=t?t:p.dtype,m=backend_util.assertAndGetBroadcastShape(p.shape,u.shape),o=a.makeOutput(m,s);if(0===util.sizeFromShape(m))return o;const c=new Uint8Array(new Int32Array(p.shape).buffer),l=new Uint8Array(new Int32Array(u.shape).buffer),b=a.dataIdMap.get(o.dataId).id;return n(d,c,p.shape.length,i,l,u.shape.length,CppDType[p.dtype],b),o}}}