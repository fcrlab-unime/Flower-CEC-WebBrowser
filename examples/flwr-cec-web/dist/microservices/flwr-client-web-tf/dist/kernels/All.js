/*! For license information please see All.js.LICENSE.txt */
import{All,backend_util,util}from"@tensorflow/tfjs-core";import{permuteAxesAndTranspose}from"./kernel_utils";let wasmAll;function setup(e){wasmAll=e.wasm.cwrap(All,null,["number, number, number"])}function all(e){const{backend:a,inputs:t,attrs:s}=e,{axis:n,keepDims:l}=s,{x:p}=t;let d=a.dataIdMap.get(p.dataId).id,i=p;const{transposed:o,axes:r,originalAxes:u,inputWasTransposed:m}=permuteAxesAndTranspose(p,n,a);m&&(i=o,d=a.dataIdMap.get(o.dataId).id);const c=i.shape.length;backend_util.assertAxesAreInnerMostDims("all",r,c);const[A,k]=backend_util.computeOutAndReduceShapes(i.shape,r),h=util.sizeFromShape(k),b=a.makeOutput(A,p.dtype);if(0!==util.sizeFromShape(i.shape)){const e=a.dataIdMap.get(b.dataId).id;wasmAll(d,h,e)}if(m&&a.disposeData(o.dataId),l){const e=backend_util.expandShapeToKeepDim(b.shape,u);b.shape=e}return b}export const allConfig={kernelName:All,backendName:"wasm",setupFunc:setup,kernelFunc:all};