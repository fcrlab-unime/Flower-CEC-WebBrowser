/*! For license information please see Conv2D.js.LICENSE.txt */
import{backend_util,Conv2D}from"@tensorflow/tfjs-core";let wasmConv2d;function setup(n){wasmConv2d=n.wasm.cwrap(Conv2D,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function conv2d(n){const{inputs:e,attrs:t,backend:a}=n,{x:o,filter:d}=e,r=a.dataIdMap.get(o.dataId).id,u=a.dataIdMap.get(d.dataId).id,{strides:m,dilations:s,pad:i,dimRoundingMode:p,dataFormat:b}=t,c=backend_util.convertConv2DDataFormat(b),l=backend_util.computeConv2DInfo(o.shape,d.shape,m,s,i,p,!1,c),f=l.filterHeight,h=l.filterWidth,v=l.padInfo.top,C=l.padInfo.right,I=l.padInfo.bottom,w=l.padInfo.left,g=l.dilationHeight,k=l.dilationWidth,D=l.strideHeight,F=l.strideWidth,M=l.inChannels,H=l.outChannels,W="SAME"===l.padInfo.type?1:0;if("channelsLast"!==l.dataFormat)throw new Error(`wasm backend Conv2D does not support dataFormat:'${l.dataFormat}'. Please use 'channelsLast'.`);const _=a.makeOutput(l.outShape,"float32"),x=a.dataIdMap.get(_.dataId).id;return wasmConv2d(r,o.shape[0],o.shape[1],o.shape[2],u,f,h,v,C,I,w,W,g,k,D,F,M,H,x),_}export const conv2DConfig={kernelName:Conv2D,backendName:"wasm",setupFunc:setup,kernelFunc:conv2d};