/*! For license information please see Tile.js.LICENSE.txt */
import{Tile}from"@tensorflow/tfjs-core";import{CppDType}from"./types";let wasmTile;function setup(e){wasmTile=e.wasm.cwrap(Tile,null,["number","array","number","array","number","number"])}function tile(e){const{inputs:t,backend:a,attrs:n}=e,{x:r}=t,p=a.dataIdMap.get(r.dataId).id,{reps:s}=n,l=new Array(r.shape.length);for(let e=0;e<l.length;e++)l[e]=r.shape[e]*s[e];const i=new Uint8Array(new Int32Array(r.shape).buffer),u=new Uint8Array(new Int32Array(l).buffer),m=a.makeOutput(l,r.dtype),o=a.dataIdMap.get(m.dataId).id;return wasmTile(p,i,r.shape.length,u,l.length,CppDType[m.dtype],o),m}export const tileConfig={kernelName:Tile,backendName:"wasm",setupFunc:setup,kernelFunc:tile};