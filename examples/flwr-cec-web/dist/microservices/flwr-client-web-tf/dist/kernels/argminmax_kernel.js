/*! For license information please see argminmax_kernel.js.LICENSE.txt */
import{util}from"@tensorflow/tfjs-core";import{permuteAxesAndTranspose}from"./kernel_utils";import{CppDType}from"./types";export function createArgMinMaxKernelConfig(e){let t;return{kernelName:e,backendName:"wasm",setupFunc:function(a){t=a.wasm.cwrap(e,null,["number","number","number","number","number"])},kernelFunc:function(e){const{backend:a,inputs:n,attrs:r}=e,{axis:s}=r,{x:p}=n,d=a.dataIdMap.get(p.dataId).id;let o=d,u=p;const{transposed:i,axes:m,inputWasTransposed:c}=permuteAxesAndTranspose(p,s,a);if(c){const e=a.dataIdMap.get(i.dataId).id;e!==d&&(u=i,o=e)}const l=u.shape.slice(0,-1),f=a.makeOutput(l,"int32"),b=a.dataIdMap.get(f.dataId).id,x=util.sizeFromShape(f.shape),I=u.shape[m[0]];return t(o,CppDType[u.dtype],x,I,b),c&&a.disposeData(i.dataId),f}}}