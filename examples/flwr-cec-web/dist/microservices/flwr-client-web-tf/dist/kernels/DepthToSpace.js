/*! For license information please see DepthToSpace.js.LICENSE.txt */
import{DepthToSpace,util}from"@tensorflow/tfjs-core";let wasmDepthToSpace;function setup(e){wasmDepthToSpace=e.wasm.cwrap(DepthToSpace,null,["number","number","number","array","number","array","array","number","number"])}export function depthToSpace(e){const{backend:a,inputs:t,attrs:r}=e,{x:p}=t,{blockSize:n,dataFormat:o}=r,u=p.shape[0],s=("NHWC"===o?p.shape[1]:p.shape[2])*n,c=("NHWC"===o?p.shape[2]:p.shape[3])*n,h=("NHWC"===o?p.shape[3]:p.shape[1])/(n*n),m="NHWC"===o?[u,s,c,h]:[u,h,s,c],d=a.makeOutput(m,"float32"),i=a.dataIdMap.get(p.dataId).id,f=new Uint8Array(new Int32Array(util.computeStrides(p.shape)).buffer),l=new Uint8Array(new Int32Array(m).buffer),w=new Uint8Array(new Int32Array(util.computeStrides(m)).buffer),b=a.dataIdMap.get(d.dataId).id;return wasmDepthToSpace(i,n,"NHWC"===o?1:0,f,p.shape.length-1,l,w,m.length,b),d}export const depthToSpaceConfig={kernelName:DepthToSpace,backendName:"wasm",setupFunc:setup,kernelFunc:depthToSpace};